<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="437" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="437" > </text>
<g id="frames">
<g >
<title>runtime.goready (33 samples, 0.05%)</title><rect x="310.9" y="277" width="0.6" height="15.0" fill="rgb(229,98,27)" rx="2" ry="2" />
<text  x="313.86" y="287.5" ></text>
</g>
<g >
<title>reflect.(*rtype).NumMethod (21 samples, 0.03%)</title><rect x="832.4" y="245" width="0.4" height="15.0" fill="rgb(209,105,8)" rx="2" ry="2" />
<text  x="835.45" y="255.5" ></text>
</g>
<g >
<title>github.com/lesismal/nbio.(*Engine).borrow (47 samples, 0.07%)</title><rect x="10.0" y="373" width="0.8" height="15.0" fill="rgb(240,70,52)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>runtime.osyield (10 samples, 0.02%)</title><rect x="1140.4" y="293" width="0.2" height="15.0" fill="rgb(228,33,10)" rx="2" ry="2" />
<text  x="1143.41" y="303.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (7 samples, 0.01%)</title><rect x="121.9" y="293" width="0.1" height="15.0" fill="rgb(217,175,25)" rx="2" ry="2" />
<text  x="124.86" y="303.5" ></text>
</g>
<g >
<title>runtime.notesleep (22 samples, 0.03%)</title><rect x="1164.1" y="309" width="0.3" height="15.0" fill="rgb(254,19,10)" rx="2" ry="2" />
<text  x="1167.05" y="319.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (38 samples, 0.06%)</title><rect x="303.6" y="293" width="0.7" height="15.0" fill="rgb(241,134,50)" rx="2" ry="2" />
<text  x="306.59" y="303.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (10 samples, 0.02%)</title><rect x="240.8" y="149" width="0.2" height="15.0" fill="rgb(209,68,17)" rx="2" ry="2" />
<text  x="243.79" y="159.5" ></text>
</g>
<g >
<title>runtime.preemptM (20 samples, 0.03%)</title><rect x="895.3" y="165" width="0.3" height="15.0" fill="rgb(207,76,2)" rx="2" ry="2" />
<text  x="898.27" y="175.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).popTail (173 samples, 0.26%)</title><rect x="799.8" y="245" width="3.1" height="15.0" fill="rgb(209,70,38)" rx="2" ry="2" />
<text  x="802.83" y="255.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (41 samples, 0.06%)</title><rect x="855.6" y="277" width="0.8" height="15.0" fill="rgb(221,13,35)" rx="2" ry="2" />
<text  x="858.64" y="287.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (12 samples, 0.02%)</title><rect x="348.6" y="213" width="0.2" height="15.0" fill="rgb(209,3,50)" rx="2" ry="2" />
<text  x="351.60" y="223.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (34 samples, 0.05%)</title><rect x="220.2" y="213" width="0.6" height="15.0" fill="rgb(244,198,49)" rx="2" ry="2" />
<text  x="223.23" y="223.5" ></text>
</g>
<g >
<title>runtime.findObject (20 samples, 0.03%)</title><rect x="927.2" y="149" width="0.3" height="15.0" fill="rgb(229,112,25)" rx="2" ry="2" />
<text  x="930.15" y="159.5" ></text>
</g>
<g >
<title>runtime.cansemacquire (77 samples, 0.12%)</title><rect x="678.7" y="197" width="1.4" height="15.0" fill="rgb(230,202,52)" rx="2" ry="2" />
<text  x="681.75" y="207.5" ></text>
</g>
<g >
<title>reflect.Value.IsNil (15 samples, 0.02%)</title><rect x="412.1" y="293" width="0.3" height="15.0" fill="rgb(211,75,16)" rx="2" ry="2" />
<text  x="415.14" y="303.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (114 samples, 0.17%)</title><rect x="1185.4" y="341" width="2.0" height="15.0" fill="rgb(210,154,11)" rx="2" ry="2" />
<text  x="1188.38" y="351.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (31 samples, 0.05%)</title><rect x="411.1" y="245" width="0.5" height="15.0" fill="rgb(212,50,42)" rx="2" ry="2" />
<text  x="414.08" y="255.5" ></text>
</g>
<g >
<title>runtime.makeslice (258 samples, 0.39%)</title><rect x="158.9" y="277" width="4.6" height="15.0" fill="rgb(208,170,19)" rx="2" ry="2" />
<text  x="161.86" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (46 samples, 0.07%)</title><rect x="157.1" y="229" width="0.8" height="15.0" fill="rgb(232,133,49)" rx="2" ry="2" />
<text  x="160.10" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (30 samples, 0.05%)</title><rect x="256.7" y="229" width="0.5" height="15.0" fill="rgb(206,167,35)" rx="2" ry="2" />
<text  x="259.66" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (128 samples, 0.20%)</title><rect x="122.9" y="245" width="2.3" height="15.0" fill="rgb(242,116,3)" rx="2" ry="2" />
<text  x="125.92" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (7 samples, 0.01%)</title><rect x="255.8" y="133" width="0.1" height="15.0" fill="rgb(220,27,11)" rx="2" ry="2" />
<text  x="258.82" y="143.5" ></text>
</g>
<g >
<title>strconv.formatBits (159 samples, 0.24%)</title><rect x="917.4" y="277" width="2.9" height="15.0" fill="rgb(225,82,12)" rx="2" ry="2" />
<text  x="920.44" y="287.5" ></text>
</g>
<g >
<title>runtime.lock2 (8 samples, 0.01%)</title><rect x="306.7" y="293" width="0.1" height="15.0" fill="rgb(230,228,15)" rx="2" ry="2" />
<text  x="309.70" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (7 samples, 0.01%)</title><rect x="241.2" y="133" width="0.1" height="15.0" fill="rgb(223,27,10)" rx="2" ry="2" />
<text  x="244.20" y="143.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).popTail (120 samples, 0.18%)</title><rect x="955.6" y="261" width="2.2" height="15.0" fill="rgb(216,9,44)" rx="2" ry="2" />
<text  x="958.64" y="271.5" ></text>
</g>
<g >
<title>runtime.scanstack (380 samples, 0.58%)</title><rect x="1047.8" y="293" width="6.8" height="15.0" fill="rgb(216,96,7)" rx="2" ry="2" />
<text  x="1050.81" y="303.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (14 samples, 0.02%)</title><rect x="925.6" y="133" width="0.2" height="15.0" fill="rgb(214,224,52)" rx="2" ry="2" />
<text  x="928.55" y="143.5" ></text>
</g>
<g >
<title>runtime.nanotime1 (43 samples, 0.07%)</title><rect x="1189.0" y="389" width="0.8" height="15.0" fill="rgb(218,217,50)" rx="2" ry="2" />
<text  x="1191.99" y="399.5" ></text>
</g>
<g >
<title>runtime.putempty (8 samples, 0.01%)</title><rect x="1050.6" y="197" width="0.2" height="15.0" fill="rgb(247,187,10)" rx="2" ry="2" />
<text  x="1053.61" y="207.5" ></text>
</g>
<g >
<title>runtime.usleep (335 samples, 0.51%)</title><rect x="1173.9" y="277" width="6.0" height="15.0" fill="rgb(249,32,5)" rx="2" ry="2" />
<text  x="1176.91" y="287.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (6 samples, 0.01%)</title><rect x="294.3" y="213" width="0.1" height="15.0" fill="rgb(231,177,38)" rx="2" ry="2" />
<text  x="297.30" y="223.5" ></text>
</g>
<g >
<title>runtime.(*_type).typeOff (43 samples, 0.07%)</title><rect x="144.3" y="245" width="0.8" height="15.0" fill="rgb(236,43,19)" rx="2" ry="2" />
<text  x="147.28" y="255.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (31 samples, 0.05%)</title><rect x="311.7" y="309" width="0.5" height="15.0" fill="rgb(220,166,18)" rx="2" ry="2" />
<text  x="314.67" y="319.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (7 samples, 0.01%)</title><rect x="962.5" y="229" width="0.1" height="15.0" fill="rgb(207,76,52)" rx="2" ry="2" />
<text  x="965.45" y="239.5" ></text>
</g>
<g >
<title>runtime.futexsleep (51 samples, 0.08%)</title><rect x="972.4" y="309" width="0.9" height="15.0" fill="rgb(251,144,28)" rx="2" ry="2" />
<text  x="975.39" y="319.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (22 samples, 0.03%)</title><rect x="996.6" y="245" width="0.4" height="15.0" fill="rgb(240,120,6)" rx="2" ry="2" />
<text  x="999.56" y="255.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (163 samples, 0.25%)</title><rect x="961.5" y="293" width="2.9" height="15.0" fill="rgb(224,207,45)" rx="2" ry="2" />
<text  x="964.48" y="303.5" ></text>
</g>
<g >
<title>runtime.acquirem (60 samples, 0.09%)</title><rect x="202.2" y="229" width="1.1" height="15.0" fill="rgb(240,70,31)" rx="2" ry="2" />
<text  x="205.20" y="239.5" ></text>
</g>
<g >
<title>runtime.putempty (6 samples, 0.01%)</title><rect x="877.2" y="101" width="0.1" height="15.0" fill="rgb(208,212,22)" rx="2" ry="2" />
<text  x="880.17" y="111.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (85 samples, 0.13%)</title><rect x="898.6" y="197" width="1.5" height="15.0" fill="rgb(212,60,36)" rx="2" ry="2" />
<text  x="901.56" y="207.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (33 samples, 0.05%)</title><rect x="962.3" y="277" width="0.6" height="15.0" fill="rgb(215,157,13)" rx="2" ry="2" />
<text  x="965.29" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (12 samples, 0.02%)</title><rect x="811.3" y="197" width="0.3" height="15.0" fill="rgb(237,170,28)" rx="2" ry="2" />
<text  x="814.34" y="207.5" ></text>
</g>
<g >
<title>runtime.getMCache (22 samples, 0.03%)</title><rect x="227.6" y="229" width="0.4" height="15.0" fill="rgb(244,79,5)" rx="2" ry="2" />
<text  x="230.59" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (12 samples, 0.02%)</title><rect x="358.7" y="229" width="0.2" height="15.0" fill="rgb(254,228,6)" rx="2" ry="2" />
<text  x="361.70" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (33 samples, 0.05%)</title><rect x="815.2" y="213" width="0.6" height="15.0" fill="rgb(218,132,3)" rx="2" ry="2" />
<text  x="818.24" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (271 samples, 0.41%)</title><rect x="1180.0" y="341" width="4.8" height="15.0" fill="rgb(247,40,12)" rx="2" ry="2" />
<text  x="1182.97" y="351.5" ></text>
</g>
<g >
<title>strconv.Itoa (171 samples, 0.26%)</title><rect x="917.2" y="309" width="3.1" height="15.0" fill="rgb(225,53,48)" rx="2" ry="2" />
<text  x="920.23" y="319.5" ></text>
</g>
<g >
<title>runtime.wirep (9 samples, 0.01%)</title><rect x="17.7" y="245" width="0.2" height="15.0" fill="rgb(218,218,13)" rx="2" ry="2" />
<text  x="20.73" y="255.5" ></text>
</g>
<g >
<title>syscall.Syscall (3,150 samples, 4.80%)</title><rect x="15.0" y="293" width="56.6" height="15.0" fill="rgb(215,8,47)" rx="2" ry="2" />
<text  x="17.98" y="303.5" >syscal..</text>
</g>
<g >
<title>runtime.gcWriteBarrier (6 samples, 0.01%)</title><rect x="716.0" y="149" width="0.1" height="15.0" fill="rgb(237,91,54)" rx="2" ry="2" />
<text  x="718.95" y="159.5" ></text>
</g>
<g >
<title>runtime.procyield (10 samples, 0.02%)</title><rect x="1140.6" y="293" width="0.2" height="15.0" fill="rgb(227,39,37)" rx="2" ry="2" />
<text  x="1143.59" y="303.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (36 samples, 0.05%)</title><rect x="110.1" y="277" width="0.6" height="15.0" fill="rgb(237,33,37)" rx="2" ry="2" />
<text  x="113.08" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (11 samples, 0.02%)</title><rect x="277.4" y="245" width="0.2" height="15.0" fill="rgb(219,2,22)" rx="2" ry="2" />
<text  x="280.43" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (10 samples, 0.02%)</title><rect x="277.7" y="213" width="0.1" height="15.0" fill="rgb(251,161,43)" rx="2" ry="2" />
<text  x="280.66" y="223.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.(*Message).PayloadsIterator.func1 (26 samples, 0.04%)</title><rect x="141.9" y="245" width="0.5" height="15.0" fill="rgb(227,77,20)" rx="2" ry="2" />
<text  x="144.89" y="255.5" ></text>
</g>
<g >
<title>runtime.scanobject (28 samples, 0.04%)</title><rect x="294.4" y="213" width="0.5" height="15.0" fill="rgb(210,70,50)" rx="2" ry="2" />
<text  x="297.44" y="223.5" ></text>
</g>
<g >
<title>runtime.goready (34 samples, 0.05%)</title><rect x="978.9" y="325" width="0.6" height="15.0" fill="rgb(235,95,53)" rx="2" ry="2" />
<text  x="981.89" y="335.5" ></text>
</g>
<g >
<title>runtime.nanotime (10 samples, 0.02%)</title><rect x="1164.4" y="325" width="0.2" height="15.0" fill="rgb(216,203,10)" rx="2" ry="2" />
<text  x="1167.45" y="335.5" ></text>
</g>
<g >
<title>sync.(*Mutex).lockSlow (223 samples, 0.34%)</title><rect x="305.4" y="341" width="4.0" height="15.0" fill="rgb(226,84,39)" rx="2" ry="2" />
<text  x="308.41" y="351.5" ></text>
</g>
<g >
<title>runtime.signalM (6 samples, 0.01%)</title><rect x="1000.0" y="277" width="0.1" height="15.0" fill="rgb(245,46,45)" rx="2" ry="2" />
<text  x="1003.00" y="287.5" ></text>
</g>
<g >
<title>runtime.usleep (18 samples, 0.03%)</title><rect x="1139.5" y="261" width="0.4" height="15.0" fill="rgb(236,156,17)" rx="2" ry="2" />
<text  x="1142.55" y="271.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (731 samples, 1.11%)</title><rect x="1128.1" y="357" width="13.1" height="15.0" fill="rgb(205,120,4)" rx="2" ry="2" />
<text  x="1131.07" y="367.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (9 samples, 0.01%)</title><rect x="928.4" y="245" width="0.2" height="15.0" fill="rgb(247,171,10)" rx="2" ry="2" />
<text  x="931.40" y="255.5" ></text>
</g>
<g >
<title>runtime.scanstack (77 samples, 0.12%)</title><rect x="877.2" y="133" width="1.4" height="15.0" fill="rgb(210,185,53)" rx="2" ry="2" />
<text  x="880.17" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (236 samples, 0.36%)</title><rect x="238.0" y="197" width="4.3" height="15.0" fill="rgb(251,25,7)" rx="2" ry="2" />
<text  x="241.03" y="207.5" ></text>
</g>
<g >
<title>github.com/rpcxio/rpcx-benchmark/proto.(*BenchmarkMessage).Marshal (2,382 samples, 3.63%)</title><rect x="368.8" y="277" width="42.8" height="15.0" fill="rgb(238,127,5)" rx="2" ry="2" />
<text  x="371.81" y="287.5" >gith..</text>
</g>
<g >
<title>runtime.(*headTailIndex).cas (6 samples, 0.01%)</title><rect x="406.9" y="133" width="0.1" height="15.0" fill="rgb(250,57,22)" rx="2" ry="2" />
<text  x="409.93" y="143.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (44 samples, 0.07%)</title><rect x="144.3" y="261" width="0.8" height="15.0" fill="rgb(234,28,53)" rx="2" ry="2" />
<text  x="147.26" y="271.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.(*Message).Length.func1 (7 samples, 0.01%)</title><rect x="430.8" y="245" width="0.2" height="15.0" fill="rgb(243,202,7)" rx="2" ry="2" />
<text  x="433.84" y="255.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (6 samples, 0.01%)</title><rect x="157.9" y="213" width="0.2" height="15.0" fill="rgb(215,146,39)" rx="2" ry="2" />
<text  x="160.95" y="223.5" ></text>
</g>
<g >
<title>runtime.runqsteal (548 samples, 0.84%)</title><rect x="1170.1" y="309" width="9.8" height="15.0" fill="rgb(222,67,45)" rx="2" ry="2" />
<text  x="1173.08" y="319.5" ></text>
</g>
<g >
<title>runtime.procyield (69 samples, 0.11%)</title><rect x="1183.6" y="309" width="1.2" height="15.0" fill="rgb(253,43,16)" rx="2" ry="2" />
<text  x="1186.60" y="319.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (7 samples, 0.01%)</title><rect x="291.9" y="293" width="0.1" height="15.0" fill="rgb(215,122,18)" rx="2" ry="2" />
<text  x="294.92" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (12 samples, 0.02%)</title><rect x="218.4" y="197" width="0.2" height="15.0" fill="rgb(244,122,25)" rx="2" ry="2" />
<text  x="221.40" y="207.5" ></text>
</g>
<g >
<title>reflect.valueInterface (44 samples, 0.07%)</title><rect x="267.6" y="277" width="0.8" height="15.0" fill="rgb(228,184,27)" rx="2" ry="2" />
<text  x="270.65" y="287.5" ></text>
</g>
<g >
<title>github.com/lesismal/nbio.(*Conn).doWrite (18 samples, 0.03%)</title><rect x="446.8" y="213" width="0.3" height="15.0" fill="rgb(220,19,43)" rx="2" ry="2" />
<text  x="449.78" y="223.5" ></text>
</g>
<g >
<title>runtime.gogo (15 samples, 0.02%)</title><rect x="1157.2" y="325" width="0.3" height="15.0" fill="rgb(229,41,37)" rx="2" ry="2" />
<text  x="1160.20" y="335.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (12 samples, 0.02%)</title><rect x="979.8" y="277" width="0.2" height="15.0" fill="rgb(228,217,26)" rx="2" ry="2" />
<text  x="982.82" y="287.5" ></text>
</g>
<g >
<title>sync.indexLocal (6 samples, 0.01%)</title><rect x="111.1" y="277" width="0.1" height="15.0" fill="rgb(236,179,54)" rx="2" ry="2" />
<text  x="114.12" y="287.5" ></text>
</g>
<g >
<title>runtime.profilealloc (20 samples, 0.03%)</title><rect x="246.8" y="213" width="0.4" height="15.0" fill="rgb(223,6,10)" rx="2" ry="2" />
<text  x="249.79" y="223.5" ></text>
</g>
<g >
<title>github.com/rpcxio/rpcx-benchmark/proto.(*BenchmarkMessage).MarshalTo (833 samples, 1.27%)</title><rect x="369.1" y="261" width="15.0" height="15.0" fill="rgb(220,181,54)" rx="2" ry="2" />
<text  x="372.12" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (48 samples, 0.07%)</title><rect x="408.4" y="229" width="0.8" height="15.0" fill="rgb(208,89,49)" rx="2" ry="2" />
<text  x="411.35" y="239.5" ></text>
</g>
<g >
<title>runtime.mPark (6 samples, 0.01%)</title><rect x="1127.3" y="357" width="0.1" height="15.0" fill="rgb(220,169,12)" rx="2" ry="2" />
<text  x="1130.32" y="367.5" ></text>
</g>
<g >
<title>runtime.isPowerOfTwo (6 samples, 0.01%)</title><rect x="276.2" y="293" width="0.1" height="15.0" fill="rgb(230,85,45)" rx="2" ry="2" />
<text  x="279.17" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (23 samples, 0.04%)</title><rect x="924.3" y="245" width="0.4" height="15.0" fill="rgb(235,79,14)" rx="2" ry="2" />
<text  x="927.28" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (15 samples, 0.02%)</title><rect x="887.8" y="277" width="0.3" height="15.0" fill="rgb(229,49,41)" rx="2" ry="2" />
<text  x="890.85" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (48 samples, 0.07%)</title><rect x="408.4" y="197" width="0.8" height="15.0" fill="rgb(229,207,42)" rx="2" ry="2" />
<text  x="411.35" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (33 samples, 0.05%)</title><rect x="978.9" y="309" width="0.6" height="15.0" fill="rgb(206,170,41)" rx="2" ry="2" />
<text  x="981.90" y="319.5" ></text>
</g>
<g >
<title>runtime.heapBits.bits (52 samples, 0.08%)</title><rect x="900.2" y="197" width="0.9" height="15.0" fill="rgb(217,224,49)" rx="2" ry="2" />
<text  x="903.17" y="207.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).popHead (7 samples, 0.01%)</title><rect x="812.9" y="261" width="0.1" height="15.0" fill="rgb(206,137,18)" rx="2" ry="2" />
<text  x="815.92" y="271.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (12 samples, 0.02%)</title><rect x="123.9" y="117" width="0.2" height="15.0" fill="rgb(205,222,45)" rx="2" ry="2" />
<text  x="126.93" y="127.5" ></text>
</g>
<g >
<title>runtime.scanblock (10 samples, 0.02%)</title><rect x="1054.3" y="277" width="0.2" height="15.0" fill="rgb(233,31,4)" rx="2" ry="2" />
<text  x="1057.32" y="287.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (15 samples, 0.02%)</title><rect x="734.8" y="229" width="0.3" height="15.0" fill="rgb(247,34,21)" rx="2" ry="2" />
<text  x="737.85" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (43 samples, 0.07%)</title><rect x="263.9" y="245" width="0.8" height="15.0" fill="rgb(218,67,7)" rx="2" ry="2" />
<text  x="266.93" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (57 samples, 0.09%)</title><rect x="996.3" y="293" width="1.0" height="15.0" fill="rgb(247,79,17)" rx="2" ry="2" />
<text  x="999.26" y="303.5" ></text>
</g>
<g >
<title>runtime.lock2 (7 samples, 0.01%)</title><rect x="810.7" y="197" width="0.1" height="15.0" fill="rgb(245,70,7)" rx="2" ry="2" />
<text  x="813.69" y="207.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Len (13 samples, 0.02%)</title><rect x="116.8" y="277" width="0.3" height="15.0" fill="rgb(227,7,25)" rx="2" ry="2" />
<text  x="119.82" y="287.5" ></text>
</g>
<g >
<title>runtime.putempty (31 samples, 0.05%)</title><rect x="899.4" y="181" width="0.6" height="15.0" fill="rgb(222,153,0)" rx="2" ry="2" />
<text  x="902.41" y="191.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (525 samples, 0.80%)</title><rect x="312.9" y="325" width="9.5" height="15.0" fill="rgb(239,171,31)" rx="2" ry="2" />
<text  x="315.93" y="335.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*Server).handleResult (2,836 samples, 4.32%)</title><rect x="361.5" y="309" width="51.0" height="15.0" fill="rgb(232,109,0)" rx="2" ry="2" />
<text  x="364.47" y="319.5" >githu..</text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (21 samples, 0.03%)</title><rect x="271.0" y="229" width="0.4" height="15.0" fill="rgb(235,127,35)" rx="2" ry="2" />
<text  x="273.98" y="239.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (8 samples, 0.01%)</title><rect x="815.7" y="181" width="0.1" height="15.0" fill="rgb(220,121,14)" rx="2" ry="2" />
<text  x="818.67" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (103 samples, 0.16%)</title><rect x="276.8" y="277" width="1.8" height="15.0" fill="rgb(214,181,40)" rx="2" ry="2" />
<text  x="279.77" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (78 samples, 0.12%)</title><rect x="238.7" y="165" width="1.4" height="15.0" fill="rgb(232,224,37)" rx="2" ry="2" />
<text  x="241.72" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (15 samples, 0.02%)</title><rect x="160.2" y="245" width="0.2" height="15.0" fill="rgb(218,175,43)" rx="2" ry="2" />
<text  x="163.18" y="255.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (12 samples, 0.02%)</title><rect x="964.1" y="213" width="0.2" height="15.0" fill="rgb(232,228,41)" rx="2" ry="2" />
<text  x="967.12" y="223.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (14 samples, 0.02%)</title><rect x="221.1" y="213" width="0.2" height="15.0" fill="rgb(214,107,6)" rx="2" ry="2" />
<text  x="224.06" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (18 samples, 0.03%)</title><rect x="263.2" y="229" width="0.3" height="15.0" fill="rgb(231,135,15)" rx="2" ry="2" />
<text  x="266.23" y="239.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.(*Message).PayloadsIterator.func2 (11 samples, 0.02%)</title><rect x="252.8" y="277" width="0.2" height="15.0" fill="rgb(253,76,35)" rx="2" ry="2" />
<text  x="255.78" y="287.5" ></text>
</g>
<g >
<title>sync.runtime_Semrelease (86 samples, 0.13%)</title><rect x="310.0" y="325" width="1.5" height="15.0" fill="rgb(235,46,1)" rx="2" ry="2" />
<text  x="312.98" y="335.5" ></text>
</g>
<g >
<title>runtime.greyobject (11 samples, 0.02%)</title><rect x="151.8" y="133" width="0.2" height="15.0" fill="rgb(223,131,41)" rx="2" ry="2" />
<text  x="154.76" y="143.5" ></text>
</g>
<g >
<title>runtime.signalM (20 samples, 0.03%)</title><rect x="895.3" y="149" width="0.3" height="15.0" fill="rgb(243,14,49)" rx="2" ry="2" />
<text  x="898.27" y="159.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/middle/packet.(*encoderWrapper).Instance (10 samples, 0.02%)</title><rect x="291.7" y="309" width="0.2" height="15.0" fill="rgb(239,180,45)" rx="2" ry="2" />
<text  x="294.73" y="319.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (28 samples, 0.04%)</title><rect x="933.4" y="245" width="0.5" height="15.0" fill="rgb(231,220,27)" rx="2" ry="2" />
<text  x="936.38" y="255.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (13 samples, 0.02%)</title><rect x="878.1" y="37" width="0.2" height="15.0" fill="rgb(207,202,39)" rx="2" ry="2" />
<text  x="881.07" y="47.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*messageOpt).checkCallArgs.func1 (52 samples, 0.08%)</title><rect x="141.4" y="277" width="1.0" height="15.0" fill="rgb(224,50,48)" rx="2" ry="2" />
<text  x="144.42" y="287.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (7 samples, 0.01%)</title><rect x="810.7" y="213" width="0.1" height="15.0" fill="rgb(218,44,23)" rx="2" ry="2" />
<text  x="813.69" y="223.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (42 samples, 0.06%)</title><rect x="781.3" y="245" width="0.8" height="15.0" fill="rgb(215,158,32)" rx="2" ry="2" />
<text  x="784.35" y="255.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (8 samples, 0.01%)</title><rect x="734.7" y="149" width="0.1" height="15.0" fill="rgb(253,71,22)" rx="2" ry="2" />
<text  x="737.65" y="159.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavengeOne (111 samples, 0.17%)</title><rect x="989.0" y="293" width="2.0" height="15.0" fill="rgb(214,223,16)" rx="2" ry="2" />
<text  x="992.03" y="303.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (7 samples, 0.01%)</title><rect x="916.5" y="277" width="0.1" height="15.0" fill="rgb(235,206,52)" rx="2" ry="2" />
<text  x="919.47" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (15 samples, 0.02%)</title><rect x="785.9" y="229" width="0.2" height="15.0" fill="rgb(228,145,49)" rx="2" ry="2" />
<text  x="788.86" y="239.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (16 samples, 0.02%)</title><rect x="310.6" y="293" width="0.3" height="15.0" fill="rgb(224,142,29)" rx="2" ry="2" />
<text  x="313.57" y="303.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (6 samples, 0.01%)</title><rect x="304.7" y="277" width="0.1" height="15.0" fill="rgb(211,202,23)" rx="2" ry="2" />
<text  x="307.69" y="287.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).popHead (6 samples, 0.01%)</title><rect x="964.7" y="277" width="0.1" height="15.0" fill="rgb(247,39,18)" rx="2" ry="2" />
<text  x="967.68" y="287.5" ></text>
</g>
<g >
<title>runtime.trygetfull (6 samples, 0.01%)</title><rect x="876.9" y="149" width="0.1" height="15.0" fill="rgb(214,134,17)" rx="2" ry="2" />
<text  x="879.93" y="159.5" ></text>
</g>
<g >
<title>runtime.casgstatus (59 samples, 0.09%)</title><rect x="718.2" y="101" width="1.1" height="15.0" fill="rgb(218,27,54)" rx="2" ry="2" />
<text  x="721.22" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (27 samples, 0.04%)</title><rect x="348.1" y="229" width="0.5" height="15.0" fill="rgb(216,165,45)" rx="2" ry="2" />
<text  x="351.11" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (41 samples, 0.06%)</title><rect x="118.8" y="213" width="0.8" height="15.0" fill="rgb(219,104,38)" rx="2" ry="2" />
<text  x="121.82" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (2,976 samples, 4.53%)</title><rect x="18.1" y="261" width="53.5" height="15.0" fill="rgb(240,140,7)" rx="2" ry="2" />
<text  x="21.11" y="271.5" >runti..</text>
</g>
<g >
<title>runtime.futex (9 samples, 0.01%)</title><rect x="779.2" y="149" width="0.1" height="15.0" fill="rgb(221,38,11)" rx="2" ry="2" />
<text  x="782.15" y="159.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (18 samples, 0.03%)</title><rect x="731.9" y="165" width="0.3" height="15.0" fill="rgb(212,8,0)" rx="2" ry="2" />
<text  x="734.86" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (31 samples, 0.05%)</title><rect x="1187.8" y="309" width="0.5" height="15.0" fill="rgb(246,192,48)" rx="2" ry="2" />
<text  x="1190.77" y="319.5" ></text>
</g>
<g >
<title>sync.storePoolChainElt (29 samples, 0.04%)</title><rect x="822.7" y="277" width="0.5" height="15.0" fill="rgb(248,119,29)" rx="2" ry="2" />
<text  x="825.72" y="287.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (314 samples, 0.48%)</title><rect x="861.7" y="261" width="5.7" height="15.0" fill="rgb(247,217,24)" rx="2" ry="2" />
<text  x="864.72" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (36 samples, 0.05%)</title><rect x="407.5" y="197" width="0.7" height="15.0" fill="rgb(210,118,37)" rx="2" ry="2" />
<text  x="410.54" y="207.5" ></text>
</g>
<g >
<title>runtime.procyield (776 samples, 1.18%)</title><rect x="689.2" y="197" width="14.0" height="15.0" fill="rgb(236,205,26)" rx="2" ry="2" />
<text  x="692.25" y="207.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.NewMessage (11 samples, 0.02%)</title><rect x="102.2" y="277" width="0.2" height="15.0" fill="rgb(244,0,4)" rx="2" ry="2" />
<text  x="105.24" y="287.5" ></text>
</g>
<g >
<title>runtime.sweepone (25 samples, 0.04%)</title><rect x="406.9" y="165" width="0.4" height="15.0" fill="rgb(220,212,25)" rx="2" ry="2" />
<text  x="409.89" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 0.01%)</title><rect x="1138.6" y="245" width="0.1" height="15.0" fill="rgb(251,222,26)" rx="2" ry="2" />
<text  x="1141.57" y="255.5" ></text>
</g>
<g >
<title>github.com/rpcxio/rpcx-benchmark/proto.encodeVarintBenchmark (346 samples, 0.53%)</title><rect x="396.5" y="261" width="6.2" height="15.0" fill="rgb(205,118,9)" rx="2" ry="2" />
<text  x="399.52" y="271.5" ></text>
</g>
<g >
<title>runtime.runqsteal (26 samples, 0.04%)</title><rect x="1139.4" y="293" width="0.5" height="15.0" fill="rgb(234,182,48)" rx="2" ry="2" />
<text  x="1142.40" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (21 samples, 0.03%)</title><rect x="874.5" y="245" width="0.3" height="15.0" fill="rgb(229,122,15)" rx="2" ry="2" />
<text  x="877.45" y="255.5" ></text>
</g>
<g >
<title>sync.(*Mutex).lockSlow (1,693 samples, 2.58%)</title><rect x="675.3" y="229" width="30.5" height="15.0" fill="rgb(253,9,42)" rx="2" ry="2" />
<text  x="678.35" y="239.5" >sy..</text>
</g>
<g >
<title>runtime.osyield (36 samples, 0.05%)</title><rect x="1183.0" y="309" width="0.6" height="15.0" fill="rgb(228,180,18)" rx="2" ry="2" />
<text  x="1185.95" y="319.5" ></text>
</g>
<g >
<title>runtime.futexsleep (6 samples, 0.01%)</title><rect x="1188.7" y="309" width="0.1" height="15.0" fill="rgb(228,118,44)" rx="2" ry="2" />
<text  x="1191.72" y="319.5" ></text>
</g>
<g >
<title>sync.runtime_canSpin (51 samples, 0.08%)</title><rect x="687.9" y="213" width="1.0" height="15.0" fill="rgb(248,166,17)" rx="2" ry="2" />
<text  x="690.94" y="223.5" ></text>
</g>
<g >
<title>runtime.spanOf (75 samples, 0.11%)</title><rect x="1124.5" y="309" width="1.3" height="15.0" fill="rgb(231,181,34)" rx="2" ry="2" />
<text  x="1127.48" y="319.5" ></text>
</g>
<g >
<title>runtime.madvise (107 samples, 0.16%)</title><rect x="989.1" y="245" width="1.9" height="15.0" fill="rgb(236,113,10)" rx="2" ry="2" />
<text  x="992.10" y="255.5" ></text>
</g>
<g >
<title>reflect.Value.assignTo (33 samples, 0.05%)</title><rect x="857.8" y="277" width="0.6" height="15.0" fill="rgb(250,211,0)" rx="2" ry="2" />
<text  x="860.78" y="287.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (21 samples, 0.03%)</title><rect x="245.2" y="117" width="0.4" height="15.0" fill="rgb(219,160,45)" rx="2" ry="2" />
<text  x="248.24" y="127.5" ></text>
</g>
<g >
<title>runtime.casgstatus (32 samples, 0.05%)</title><rect x="15.8" y="245" width="0.6" height="15.0" fill="rgb(244,186,21)" rx="2" ry="2" />
<text  x="18.79" y="255.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (27 samples, 0.04%)</title><rect x="979.6" y="309" width="0.4" height="15.0" fill="rgb(230,37,36)" rx="2" ry="2" />
<text  x="982.55" y="319.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).findRunnableGCWorker (7 samples, 0.01%)</title><rect x="1160.5" y="325" width="0.2" height="15.0" fill="rgb(246,173,49)" rx="2" ry="2" />
<text  x="1163.55" y="335.5" ></text>
</g>
<g >
<title>reflect.New (838 samples, 1.28%)</title><rect x="143.6" y="277" width="15.1" height="15.0" fill="rgb(208,48,30)" rx="2" ry="2" />
<text  x="146.63" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (17 samples, 0.03%)</title><rect x="1081.7" y="309" width="0.3" height="15.0" fill="rgb(246,214,17)" rx="2" ry="2" />
<text  x="1084.74" y="319.5" ></text>
</g>
<g >
<title>runtime.chansend1 (106 samples, 0.16%)</title><rect x="81.4" y="309" width="1.9" height="15.0" fill="rgb(249,177,3)" rx="2" ry="2" />
<text  x="84.37" y="319.5" ></text>
</g>
<g >
<title>sync/atomic.StorePointer (18 samples, 0.03%)</title><rect x="957.5" y="245" width="0.3" height="15.0" fill="rgb(227,108,11)" rx="2" ry="2" />
<text  x="960.47" y="255.5" ></text>
</g>
<g >
<title>runtime.acquirem (91 samples, 0.14%)</title><rect x="716.2" y="117" width="1.6" height="15.0" fill="rgb(218,229,51)" rx="2" ry="2" />
<text  x="719.17" y="127.5" ></text>
</g>
<g >
<title>runtime.reflectcallmove (17 samples, 0.03%)</title><rect x="850.5" y="261" width="0.3" height="15.0" fill="rgb(212,24,41)" rx="2" ry="2" />
<text  x="853.47" y="271.5" ></text>
</g>
<g >
<title>runtime.runqget (11 samples, 0.02%)</title><rect x="1167.4" y="325" width="0.2" height="15.0" fill="rgb(220,225,5)" rx="2" ry="2" />
<text  x="1170.40" y="335.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (8 samples, 0.01%)</title><rect x="218.1" y="165" width="0.1" height="15.0" fill="rgb(221,63,14)" rx="2" ry="2" />
<text  x="221.08" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (16 samples, 0.02%)</title><rect x="197.3" y="165" width="0.3" height="15.0" fill="rgb(219,86,23)" rx="2" ry="2" />
<text  x="200.29" y="175.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (161 samples, 0.25%)</title><rect x="1030.2" y="277" width="2.9" height="15.0" fill="rgb(220,76,1)" rx="2" ry="2" />
<text  x="1033.22" y="287.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/middle/codec.(*codecWrapper).Instance (30 samples, 0.05%)</title><rect x="291.2" y="309" width="0.5" height="15.0" fill="rgb(236,127,37)" rx="2" ry="2" />
<text  x="294.19" y="319.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).run (113 samples, 0.17%)</title><rect x="989.0" y="373" width="2.0" height="15.0" fill="rgb(209,14,22)" rx="2" ry="2" />
<text  x="992.01" y="383.5" ></text>
</g>
<g >
<title>sync.runtime_Semrelease (14 samples, 0.02%)</title><rect x="357.5" y="213" width="0.3" height="15.0" fill="rgb(245,147,47)" rx="2" ry="2" />
<text  x="360.50" y="223.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (31 samples, 0.05%)</title><rect x="1187.8" y="325" width="0.5" height="15.0" fill="rgb(210,204,34)" rx="2" ry="2" />
<text  x="1190.77" y="335.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (35 samples, 0.05%)</title><rect x="735.4" y="149" width="0.7" height="15.0" fill="rgb(217,228,9)" rx="2" ry="2" />
<text  x="738.44" y="159.5" ></text>
</g>
<g >
<title>sync.storePoolChainElt (23 samples, 0.04%)</title><rect x="361.1" y="277" width="0.4" height="15.0" fill="rgb(248,34,47)" rx="2" ry="2" />
<text  x="364.06" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (140 samples, 0.21%)</title><rect x="276.3" y="293" width="2.5" height="15.0" fill="rgb(251,81,51)" rx="2" ry="2" />
<text  x="279.28" y="303.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (9 samples, 0.01%)</title><rect x="219.9" y="117" width="0.2" height="15.0" fill="rgb(222,112,30)" rx="2" ry="2" />
<text  x="222.95" y="127.5" ></text>
</g>
<g >
<title>runtime.futex (48 samples, 0.07%)</title><rect x="972.4" y="293" width="0.9" height="15.0" fill="rgb(230,71,16)" rx="2" ry="2" />
<text  x="975.45" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (8 samples, 0.01%)</title><rect x="870.0" y="245" width="0.1" height="15.0" fill="rgb(222,107,18)" rx="2" ry="2" />
<text  x="872.96" y="255.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (52 samples, 0.08%)</title><rect x="302.1" y="229" width="1.0" height="15.0" fill="rgb(208,43,12)" rx="2" ry="2" />
<text  x="305.14" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (31 samples, 0.05%)</title><rect x="359.9" y="245" width="0.6" height="15.0" fill="rgb(217,137,39)" rx="2" ry="2" />
<text  x="362.93" y="255.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (16 samples, 0.02%)</title><rect x="776.4" y="261" width="0.3" height="15.0" fill="rgb(253,91,38)" rx="2" ry="2" />
<text  x="779.40" y="271.5" ></text>
</g>
<g >
<title>encoding/binary.bigEndian.Uint32 (11 samples, 0.02%)</title><rect x="112.5" y="293" width="0.2" height="15.0" fill="rgb(214,140,2)" rx="2" ry="2" />
<text  x="115.55" y="303.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (560 samples, 0.85%)</title><rect x="709.6" y="197" width="10.1" height="15.0" fill="rgb(251,161,23)" rx="2" ry="2" />
<text  x="712.60" y="207.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (39 samples, 0.06%)</title><rect x="898.7" y="181" width="0.7" height="15.0" fill="rgb(227,173,35)" rx="2" ry="2" />
<text  x="901.67" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (41 samples, 0.06%)</title><rect x="118.8" y="197" width="0.8" height="15.0" fill="rgb(244,161,28)" rx="2" ry="2" />
<text  x="121.82" y="207.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocker).tryAcquire (7 samples, 0.01%)</title><rect x="148.5" y="181" width="0.1" height="15.0" fill="rgb(216,206,42)" rx="2" ry="2" />
<text  x="151.45" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (146 samples, 0.22%)</title><rect x="149.9" y="197" width="2.6" height="15.0" fill="rgb(242,188,33)" rx="2" ry="2" />
<text  x="152.91" y="207.5" ></text>
</g>
<g >
<title>reflect.Value.call (2,800 samples, 4.27%)</title><rect x="835.4" y="293" width="50.3" height="15.0" fill="rgb(247,122,7)" rx="2" ry="2" />
<text  x="838.40" y="303.5" >refle..</text>
</g>
<g >
<title>runtime.(*mcache).refill (127 samples, 0.19%)</title><rect x="731.1" y="197" width="2.3" height="15.0" fill="rgb(245,184,10)" rx="2" ry="2" />
<text  x="734.09" y="207.5" ></text>
</g>
<g >
<title>runtime.putfull (52 samples, 0.08%)</title><rect x="897.6" y="165" width="1.0" height="15.0" fill="rgb(213,67,26)" rx="2" ry="2" />
<text  x="900.63" y="175.5" ></text>
</g>
<g >
<title>runtime.casgstatus (110 samples, 0.17%)</title><rect x="449.2" y="133" width="2.0" height="15.0" fill="rgb(212,145,16)" rx="2" ry="2" />
<text  x="452.24" y="143.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (7 samples, 0.01%)</title><rect x="121.9" y="277" width="0.1" height="15.0" fill="rgb(237,91,47)" rx="2" ry="2" />
<text  x="124.86" y="287.5" ></text>
</g>
<g >
<title>reflect.memmove (16 samples, 0.02%)</title><rect x="867.7" y="261" width="0.3" height="15.0" fill="rgb(232,74,0)" rx="2" ry="2" />
<text  x="870.75" y="271.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (30 samples, 0.05%)</title><rect x="899.4" y="165" width="0.6" height="15.0" fill="rgb(237,80,3)" rx="2" ry="2" />
<text  x="902.43" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (172 samples, 0.26%)</title><rect x="238.5" y="181" width="3.1" height="15.0" fill="rgb(211,31,49)" rx="2" ry="2" />
<text  x="241.50" y="191.5" ></text>
</g>
<g >
<title>runtime.osyield (86 samples, 0.13%)</title><rect x="88.2" y="261" width="1.6" height="15.0" fill="rgb(209,99,0)" rx="2" ry="2" />
<text  x="91.24" y="271.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.newConnDesc (434 samples, 0.66%)</title><rect x="297.6" y="341" width="7.8" height="15.0" fill="rgb(218,47,29)" rx="2" ry="2" />
<text  x="300.57" y="351.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (449 samples, 0.68%)</title><rect x="353.4" y="293" width="8.1" height="15.0" fill="rgb(208,60,14)" rx="2" ry="2" />
<text  x="356.40" y="303.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (7 samples, 0.01%)</title><rect x="149.7" y="197" width="0.1" height="15.0" fill="rgb(206,76,24)" rx="2" ry="2" />
<text  x="152.69" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (20 samples, 0.03%)</title><rect x="999.5" y="325" width="0.4" height="15.0" fill="rgb(209,48,8)" rx="2" ry="2" />
<text  x="1002.49" y="335.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (7 samples, 0.01%)</title><rect x="356.4" y="213" width="0.1" height="15.0" fill="rgb(240,132,7)" rx="2" ry="2" />
<text  x="359.42" y="223.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (20 samples, 0.03%)</title><rect x="410.7" y="213" width="0.3" height="15.0" fill="rgb(206,150,2)" rx="2" ry="2" />
<text  x="413.69" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (13 samples, 0.02%)</title><rect x="301.8" y="261" width="0.2" height="15.0" fill="rgb(247,23,37)" rx="2" ry="2" />
<text  x="304.76" y="271.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).putPtr (16 samples, 0.02%)</title><rect x="878.1" y="53" width="0.3" height="15.0" fill="rgb(208,199,25)" rx="2" ry="2" />
<text  x="881.07" y="63.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (6 samples, 0.01%)</title><rect x="121.8" y="293" width="0.1" height="15.0" fill="rgb(233,198,39)" rx="2" ry="2" />
<text  x="124.75" y="303.5" ></text>
</g>
<g >
<title>main.(*Hello).Say (180 samples, 0.27%)</title><rect x="850.8" y="277" width="3.2" height="15.0" fill="rgb(251,106,36)" rx="2" ry="2" />
<text  x="853.81" y="287.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (6 samples, 0.01%)</title><rect x="877.9" y="53" width="0.1" height="15.0" fill="rgb(217,31,52)" rx="2" ry="2" />
<text  x="880.89" y="63.5" ></text>
</g>
<g >
<title>runtime.alignUp (9 samples, 0.01%)</title><rect x="203.3" y="229" width="0.1" height="15.0" fill="rgb(251,199,19)" rx="2" ry="2" />
<text  x="206.28" y="239.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (32 samples, 0.05%)</title><rect x="1048.9" y="261" width="0.6" height="15.0" fill="rgb(210,125,46)" rx="2" ry="2" />
<text  x="1051.92" y="271.5" ></text>
</g>
<g >
<title>runtime.chansend (106 samples, 0.16%)</title><rect x="83.3" y="293" width="1.9" height="15.0" fill="rgb(213,86,33)" rx="2" ry="2" />
<text  x="86.33" y="303.5" ></text>
</g>
<g >
<title>runtime.(*gcCPULimiterState).update (15 samples, 0.02%)</title><rect x="888.2" y="213" width="0.3" height="15.0" fill="rgb(243,68,41)" rx="2" ry="2" />
<text  x="891.23" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (127 samples, 0.19%)</title><rect x="122.9" y="213" width="2.3" height="15.0" fill="rgb(220,207,53)" rx="2" ry="2" />
<text  x="125.94" y="223.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (29 samples, 0.04%)</title><rect x="916.7" y="293" width="0.5" height="15.0" fill="rgb(216,175,33)" rx="2" ry="2" />
<text  x="919.69" y="303.5" ></text>
</g>
<g >
<title>runtime.putfull (7 samples, 0.01%)</title><rect x="876.4" y="133" width="0.2" height="15.0" fill="rgb(246,148,42)" rx="2" ry="2" />
<text  x="879.45" y="143.5" ></text>
</g>
<g >
<title>sync.runtime_SemacquireMutex (87 samples, 0.13%)</title><rect x="306.0" y="325" width="1.5" height="15.0" fill="rgb(222,87,17)" rx="2" ry="2" />
<text  x="308.98" y="335.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (21 samples, 0.03%)</title><rect x="263.5" y="245" width="0.4" height="15.0" fill="rgb(239,172,35)" rx="2" ry="2" />
<text  x="266.55" y="255.5" ></text>
</g>
<g >
<title>runtime.releasem (17 samples, 0.03%)</title><rect x="250.3" y="229" width="0.3" height="15.0" fill="rgb(229,44,54)" rx="2" ry="2" />
<text  x="253.28" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (8 samples, 0.01%)</title><rect x="102.3" y="245" width="0.1" height="15.0" fill="rgb(245,61,29)" rx="2" ry="2" />
<text  x="105.26" y="255.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (7 samples, 0.01%)</title><rect x="408.2" y="197" width="0.1" height="15.0" fill="rgb(232,190,22)" rx="2" ry="2" />
<text  x="411.19" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (7 samples, 0.01%)</title><rect x="924.5" y="213" width="0.1" height="15.0" fill="rgb(226,225,12)" rx="2" ry="2" />
<text  x="927.51" y="223.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1,243 samples, 1.89%)</title><rect x="1157.6" y="341" width="22.4" height="15.0" fill="rgb(221,192,42)" rx="2" ry="2" />
<text  x="1160.62" y="351.5" >r..</text>
</g>
<g >
<title>runtime.(*lfstack).push (6 samples, 0.01%)</title><rect x="243.9" y="85" width="0.1" height="15.0" fill="rgb(243,7,3)" rx="2" ry="2" />
<text  x="246.88" y="95.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/plugins/metrics.(*ServerMetricsPlugin).OnMessage (165 samples, 0.25%)</title><rect x="284.7" y="293" width="3.0" height="15.0" fill="rgb(225,195,28)" rx="2" ry="2" />
<text  x="287.70" y="303.5" ></text>
</g>
<g >
<title>runtime.sweepone (429 samples, 0.65%)</title><rect x="991.3" y="373" width="7.7" height="15.0" fill="rgb(214,94,28)" rx="2" ry="2" />
<text  x="994.31" y="383.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (7 samples, 0.01%)</title><rect x="268.6" y="229" width="0.2" height="15.0" fill="rgb(228,103,51)" rx="2" ry="2" />
<text  x="271.64" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (18 samples, 0.03%)</title><rect x="410.7" y="181" width="0.3" height="15.0" fill="rgb(209,220,36)" rx="2" ry="2" />
<text  x="413.69" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (128 samples, 0.20%)</title><rect x="122.9" y="229" width="2.3" height="15.0" fill="rgb(216,56,54)" rx="2" ry="2" />
<text  x="125.92" y="239.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (7 samples, 0.01%)</title><rect x="1141.1" y="293" width="0.1" height="15.0" fill="rgb(234,197,49)" rx="2" ry="2" />
<text  x="1144.09" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.01%)</title><rect x="268.6" y="245" width="0.2" height="15.0" fill="rgb(229,148,28)" rx="2" ry="2" />
<text  x="271.64" y="255.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common/msgparser.(*LMessageParser).ParseMsg (1,893 samples, 2.88%)</title><rect x="95.5" y="325" width="34.0" height="15.0" fill="rgb(246,222,32)" rx="2" ry="2" />
<text  x="98.46" y="335.5" >gi..</text>
</g>
<g >
<title>runtime.sweepone (6 samples, 0.01%)</title><rect x="301.6" y="229" width="0.1" height="15.0" fill="rgb(206,78,53)" rx="2" ry="2" />
<text  x="304.60" y="239.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*Server).callHandleUnit.func1 (588 samples, 0.90%)</title><rect x="350.9" y="309" width="10.6" height="15.0" fill="rgb(242,149,13)" rx="2" ry="2" />
<text  x="353.90" y="319.5" ></text>
</g>
<g >
<title>runtime.newobject (126 samples, 0.19%)</title><rect x="281.3" y="309" width="2.2" height="15.0" fill="rgb(252,94,1)" rx="2" ry="2" />
<text  x="284.28" y="319.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrierDX (6 samples, 0.01%)</title><rect x="292.4" y="325" width="0.1" height="15.0" fill="rgb(241,229,43)" rx="2" ry="2" />
<text  x="295.39" y="335.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (6 samples, 0.01%)</title><rect x="304.6" y="293" width="0.1" height="15.0" fill="rgb(209,59,49)" rx="2" ry="2" />
<text  x="307.58" y="303.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (68 samples, 0.10%)</title><rect x="73.9" y="293" width="1.2" height="15.0" fill="rgb(225,21,16)" rx="2" ry="2" />
<text  x="76.92" y="303.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (785 samples, 1.20%)</title><rect x="705.8" y="245" width="14.1" height="15.0" fill="rgb(220,142,8)" rx="2" ry="2" />
<text  x="708.79" y="255.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (17 samples, 0.03%)</title><rect x="304.3" y="293" width="0.3" height="15.0" fill="rgb(250,177,12)" rx="2" ry="2" />
<text  x="307.28" y="303.5" ></text>
</g>
<g >
<title>runtime.scanobject (104 samples, 0.16%)</title><rect x="878.6" y="165" width="1.8" height="15.0" fill="rgb(209,51,30)" rx="2" ry="2" />
<text  x="881.57" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (18 samples, 0.03%)</title><rect x="262.8" y="229" width="0.4" height="15.0" fill="rgb(231,191,22)" rx="2" ry="2" />
<text  x="265.83" y="239.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (12 samples, 0.02%)</title><rect x="163.3" y="261" width="0.2" height="15.0" fill="rgb(242,196,26)" rx="2" ry="2" />
<text  x="166.25" y="271.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (144 samples, 0.22%)</title><rect x="135.3" y="293" width="2.6" height="15.0" fill="rgb(222,227,1)" rx="2" ry="2" />
<text  x="138.33" y="303.5" ></text>
</g>
<g >
<title>github.com/lesismal/nbio.noRaceGetReadBufferFromPoller (40 samples, 0.06%)</title><rect x="10.1" y="357" width="0.7" height="15.0" fill="rgb(224,166,33)" rx="2" ry="2" />
<text  x="13.13" y="367.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (40 samples, 0.06%)</title><rect x="1150.8" y="325" width="0.7" height="15.0" fill="rgb(230,152,52)" rx="2" ry="2" />
<text  x="1153.77" y="335.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (29 samples, 0.04%)</title><rect x="1126.2" y="325" width="0.5" height="15.0" fill="rgb(231,133,32)" rx="2" ry="2" />
<text  x="1129.19" y="335.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (102 samples, 0.16%)</title><rect x="895.7" y="165" width="1.8" height="15.0" fill="rgb(222,161,44)" rx="2" ry="2" />
<text  x="898.65" y="175.5" ></text>
</g>
<g >
<title>sync.(*entry).load (10 samples, 0.02%)</title><rect x="137.9" y="293" width="0.2" height="15.0" fill="rgb(247,219,23)" rx="2" ry="2" />
<text  x="140.92" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (67 samples, 0.10%)</title><rect x="996.2" y="309" width="1.2" height="15.0" fill="rgb(245,1,13)" rx="2" ry="2" />
<text  x="999.20" y="319.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (13 samples, 0.02%)</title><rect x="927.6" y="149" width="0.2" height="15.0" fill="rgb(227,221,15)" rx="2" ry="2" />
<text  x="930.60" y="159.5" ></text>
</g>
<g >
<title>runtime.newobject (81 samples, 0.12%)</title><rect x="735.1" y="245" width="1.5" height="15.0" fill="rgb(247,134,20)" rx="2" ry="2" />
<text  x="738.14" y="255.5" ></text>
</g>
<g >
<title>runtime.lock2 (11 samples, 0.02%)</title><rect x="1188.7" y="325" width="0.2" height="15.0" fill="rgb(247,30,27)" rx="2" ry="2" />
<text  x="1191.72" y="335.5" ></text>
</g>
<g >
<title>runtime.handoff (10 samples, 0.02%)</title><rect x="123.4" y="181" width="0.2" height="15.0" fill="rgb(236,58,23)" rx="2" ry="2" />
<text  x="126.44" y="191.5" ></text>
</g>
<g >
<title>runtime.scanobject (3,926 samples, 5.98%)</title><rect x="1055.2" y="325" width="70.6" height="15.0" fill="rgb(230,103,43)" rx="2" ry="2" />
<text  x="1058.23" y="335.5" >runtime..</text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common.NewSharedPool.func1 (407 samples, 0.62%)</title><rect x="729.3" y="261" width="7.3" height="15.0" fill="rgb(209,116,11)" rx="2" ry="2" />
<text  x="732.27" y="271.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).addObject (71 samples, 0.11%)</title><rect x="1049.6" y="229" width="1.2" height="15.0" fill="rgb(254,107,51)" rx="2" ry="2" />
<text  x="1052.57" y="239.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (6 samples, 0.01%)</title><rect x="876.6" y="133" width="0.1" height="15.0" fill="rgb(209,51,16)" rx="2" ry="2" />
<text  x="879.57" y="143.5" ></text>
</g>
<g >
<title>runtime.gcDrain (7,002 samples, 10.67%)</title><rect x="1000.8" y="341" width="125.9" height="15.0" fill="rgb(228,19,30)" rx="2" ry="2" />
<text  x="1003.80" y="351.5" >runtime.gcDrain</text>
</g>
<g >
<title>runtime.(*mcentral).grow (8 samples, 0.01%)</title><rect x="405.5" y="181" width="0.1" height="15.0" fill="rgb(241,128,44)" rx="2" ry="2" />
<text  x="408.49" y="191.5" ></text>
</g>
<g >
<title>runtime.newobject (224 samples, 0.34%)</title><rect x="254.3" y="261" width="4.0" height="15.0" fill="rgb(251,205,36)" rx="2" ry="2" />
<text  x="257.25" y="271.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (117 samples, 0.18%)</title><rect x="309.4" y="357" width="2.1" height="15.0" fill="rgb(240,196,47)" rx="2" ry="2" />
<text  x="312.42" y="367.5" ></text>
</g>
<g >
<title>runtime.memmove (22 samples, 0.03%)</title><rect x="980.2" y="309" width="0.4" height="15.0" fill="rgb(209,165,14)" rx="2" ry="2" />
<text  x="983.22" y="319.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (56 samples, 0.09%)</title><rect x="1051.5" y="197" width="1.0" height="15.0" fill="rgb(227,116,18)" rx="2" ry="2" />
<text  x="1054.46" y="207.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/internal/pool.exec[...].func1 (35,726 samples, 54.44%)</title><rect x="322.6" y="357" width="642.4" height="15.0" fill="rgb(213,156,50)" rx="2" ry="2" />
<text  x="325.58" y="367.5" >github.com/nyan233/littlerpc/internal/pool.exec[...].func1</text>
</g>
<g >
<title>runtime.gcTrigger.test (12 samples, 0.02%)</title><rect x="409.3" y="229" width="0.3" height="15.0" fill="rgb(206,155,42)" rx="2" ry="2" />
<text  x="412.34" y="239.5" ></text>
</g>
<g >
<title>runtime.makeslice (103 samples, 0.16%)</title><rect x="358.1" y="261" width="1.8" height="15.0" fill="rgb(213,196,24)" rx="2" ry="2" />
<text  x="361.08" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (312 samples, 0.48%)</title><rect x="875.0" y="213" width="5.6" height="15.0" fill="rgb(230,171,9)" rx="2" ry="2" />
<text  x="877.99" y="223.5" ></text>
</g>
<g >
<title>sync.(*Pool).pinSlow (69 samples, 0.11%)</title><rect x="779.8" y="245" width="1.2" height="15.0" fill="rgb(241,225,32)" rx="2" ry="2" />
<text  x="782.78" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (11 samples, 0.02%)</title><rect x="1188.7" y="341" width="0.2" height="15.0" fill="rgb(210,130,25)" rx="2" ry="2" />
<text  x="1191.72" y="351.5" ></text>
</g>
<g >
<title>runtime.(*semTable).rootFor (29 samples, 0.04%)</title><rect x="707.8" y="197" width="0.5" height="15.0" fill="rgb(249,66,6)" rx="2" ry="2" />
<text  x="710.80" y="207.5" ></text>
</g>
<g >
<title>runtime.unlock2 (10 samples, 0.02%)</title><rect x="719.7" y="181" width="0.2" height="15.0" fill="rgb(251,88,45)" rx="2" ry="2" />
<text  x="722.73" y="191.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrierDX (7 samples, 0.01%)</title><rect x="280.0" y="309" width="0.1" height="15.0" fill="rgb(246,183,34)" rx="2" ry="2" />
<text  x="283.02" y="319.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (20 samples, 0.03%)</title><rect x="901.7" y="181" width="0.4" height="15.0" fill="rgb(240,37,1)" rx="2" ry="2" />
<text  x="904.75" y="191.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (86 samples, 0.13%)</title><rect x="222.0" y="229" width="1.5" height="15.0" fill="rgb(210,20,8)" rx="2" ry="2" />
<text  x="224.96" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (40 samples, 0.06%)</title><rect x="146.9" y="149" width="0.7" height="15.0" fill="rgb(223,211,28)" rx="2" ry="2" />
<text  x="149.89" y="159.5" ></text>
</g>
<g >
<title>runtime.mallocgc (54 samples, 0.08%)</title><rect x="811.3" y="229" width="0.9" height="15.0" fill="rgb(241,15,28)" rx="2" ry="2" />
<text  x="814.27" y="239.5" ></text>
</g>
<g >
<title>runtime.nanotime (14 samples, 0.02%)</title><rect x="1136.7" y="309" width="0.3" height="15.0" fill="rgb(254,181,43)" rx="2" ry="2" />
<text  x="1139.70" y="319.5" ></text>
</g>
<g >
<title>runtime.checkTimers (6 samples, 0.01%)</title><rect x="1138.5" y="309" width="0.1" height="15.0" fill="rgb(219,222,5)" rx="2" ry="2" />
<text  x="1141.47" y="319.5" ></text>
</g>
<g >
<title>runtime.profilealloc (6 samples, 0.01%)</title><rect x="304.7" y="293" width="0.1" height="15.0" fill="rgb(233,226,8)" rx="2" ry="2" />
<text  x="307.69" y="303.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (95 samples, 0.14%)</title><rect x="125.5" y="277" width="1.7" height="15.0" fill="rgb(206,215,44)" rx="2" ry="2" />
<text  x="128.53" y="287.5" ></text>
</g>
<g >
<title>runtime.gopark (99 samples, 0.15%)</title><rect x="680.2" y="181" width="1.7" height="15.0" fill="rgb(210,196,42)" rx="2" ry="2" />
<text  x="683.15" y="191.5" ></text>
</g>
<g >
<title>runtime.scanblock (6 samples, 0.01%)</title><rect x="124.0" y="101" width="0.1" height="15.0" fill="rgb(228,21,12)" rx="2" ry="2" />
<text  x="127.04" y="111.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (37 samples, 0.06%)</title><rect x="997.7" y="341" width="0.7" height="15.0" fill="rgb(231,199,18)" rx="2" ry="2" />
<text  x="1000.69" y="351.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container.NewSliceMap[...] (472 samples, 0.72%)</title><rect x="923.0" y="293" width="8.5" height="15.0" fill="rgb(212,196,2)" rx="2" ry="2" />
<text  x="926.00" y="303.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (20 samples, 0.03%)</title><rect x="1083.5" y="309" width="0.4" height="15.0" fill="rgb(207,82,11)" rx="2" ry="2" />
<text  x="1086.52" y="319.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (24 samples, 0.04%)</title><rect x="1050.9" y="213" width="0.4" height="15.0" fill="rgb(211,194,45)" rx="2" ry="2" />
<text  x="1053.88" y="223.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (19 samples, 0.03%)</title><rect x="1187.1" y="309" width="0.3" height="15.0" fill="rgb(209,77,25)" rx="2" ry="2" />
<text  x="1190.09" y="319.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Take (18 samples, 0.03%)</title><rect x="253.0" y="293" width="0.3" height="15.0" fill="rgb(236,88,31)" rx="2" ry="2" />
<text  x="255.99" y="303.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (6 samples, 0.01%)</title><rect x="736.3" y="213" width="0.1" height="15.0" fill="rgb(241,121,33)" rx="2" ry="2" />
<text  x="739.27" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (18 samples, 0.03%)</title><rect x="270.5" y="245" width="0.3" height="15.0" fill="rgb(221,36,13)" rx="2" ry="2" />
<text  x="273.51" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (15 samples, 0.02%)</title><rect x="288.9" y="229" width="0.3" height="15.0" fill="rgb(212,179,37)" rx="2" ry="2" />
<text  x="291.94" y="239.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*pluginManager).OnCallResult (13 samples, 0.02%)</title><rect x="832.9" y="309" width="0.3" height="15.0" fill="rgb(227,69,3)" rx="2" ry="2" />
<text  x="835.93" y="319.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).putPtr (6 samples, 0.01%)</title><rect x="124.0" y="85" width="0.1" height="15.0" fill="rgb(218,169,19)" rx="2" ry="2" />
<text  x="127.04" y="95.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (6 samples, 0.01%)</title><rect x="884.3" y="245" width="0.1" height="15.0" fill="rgb(219,83,10)" rx="2" ry="2" />
<text  x="887.34" y="255.5" ></text>
</g>
<g >
<title>runtime.unlock2 (206 samples, 0.31%)</title><rect x="1147.8" y="341" width="3.7" height="15.0" fill="rgb(206,0,0)" rx="2" ry="2" />
<text  x="1150.78" y="351.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (393 samples, 0.60%)</title><rect x="1047.6" y="309" width="7.1" height="15.0" fill="rgb(234,42,49)" rx="2" ry="2" />
<text  x="1050.64" y="319.5" ></text>
</g>
<g >
<title>runtime.goparkunlock (101 samples, 0.15%)</title><rect x="680.1" y="197" width="1.8" height="15.0" fill="rgb(240,184,23)" rx="2" ry="2" />
<text  x="683.13" y="207.5" ></text>
</g>
<g >
<title>runtime.unlock2 (49 samples, 0.07%)</title><rect x="1187.4" y="341" width="0.9" height="15.0" fill="rgb(232,32,52)" rx="2" ry="2" />
<text  x="1190.45" y="351.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrierR9 (7 samples, 0.01%)</title><rect x="121.7" y="309" width="0.2" height="15.0" fill="rgb(210,47,47)" rx="2" ry="2" />
<text  x="124.73" y="319.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.UnmarshalMuxBlock (52 samples, 0.08%)</title><rect x="120.1" y="293" width="1.0" height="15.0" fill="rgb(210,155,12)" rx="2" ry="2" />
<text  x="123.12" y="303.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.(*Message).Payloads (9 samples, 0.01%)</title><rect x="132.3" y="325" width="0.2" height="15.0" fill="rgb(223,202,42)" rx="2" ry="2" />
<text  x="135.32" y="335.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (6 samples, 0.01%)</title><rect x="268.5" y="277" width="0.1" height="15.0" fill="rgb(235,192,53)" rx="2" ry="2" />
<text  x="271.49" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.01%)</title><rect x="409.2" y="213" width="0.1" height="15.0" fill="rgb(240,92,27)" rx="2" ry="2" />
<text  x="412.23" y="223.5" ></text>
</g>
<g >
<title>runtime.gorecover (6 samples, 0.01%)</title><rect x="328.4" y="325" width="0.1" height="15.0" fill="rgb(234,179,26)" rx="2" ry="2" />
<text  x="331.42" y="335.5" ></text>
</g>
<g >
<title>runtime.(*atomicOffAddr).Load (9 samples, 0.01%)</title><rect x="996.4" y="261" width="0.1" height="15.0" fill="rgb(227,140,53)" rx="2" ry="2" />
<text  x="999.38" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (46 samples, 0.07%)</title><rect x="294.1" y="277" width="0.8" height="15.0" fill="rgb(228,38,33)" rx="2" ry="2" />
<text  x="297.12" y="287.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (15 samples, 0.02%)</title><rect x="915.1" y="181" width="0.3" height="15.0" fill="rgb(220,40,43)" rx="2" ry="2" />
<text  x="918.13" y="191.5" ></text>
</g>
<g >
<title>reflect.directlyAssignable (38 samples, 0.06%)</title><rect x="854.6" y="261" width="0.7" height="15.0" fill="rgb(237,119,40)" rx="2" ry="2" />
<text  x="857.62" y="271.5" ></text>
</g>
<g >
<title>runtime.goready (199 samples, 0.30%)</title><rect x="716.1" y="165" width="3.6" height="15.0" fill="rgb(231,34,43)" rx="2" ry="2" />
<text  x="719.09" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (117 samples, 0.18%)</title><rect x="405.3" y="197" width="2.2" height="15.0" fill="rgb(238,151,41)" rx="2" ry="2" />
<text  x="408.35" y="207.5" ></text>
</g>
<g >
<title>runtime.nanotime (11 samples, 0.02%)</title><rect x="1132.3" y="341" width="0.2" height="15.0" fill="rgb(217,70,34)" rx="2" ry="2" />
<text  x="1135.26" y="351.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (178 samples, 0.27%)</title><rect x="357.8" y="277" width="3.2" height="15.0" fill="rgb(230,113,16)" rx="2" ry="2" />
<text  x="360.82" y="287.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (30 samples, 0.05%)</title><rect x="295.4" y="293" width="0.6" height="15.0" fill="rgb(229,122,33)" rx="2" ry="2" />
<text  x="298.41" y="303.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Next (9 samples, 0.01%)</title><rect x="141.6" y="261" width="0.2" height="15.0" fill="rgb(248,108,31)" rx="2" ry="2" />
<text  x="144.64" y="271.5" ></text>
</g>
<g >
<title>runtime.park_m (2,039 samples, 3.11%)</title><rect x="1151.7" y="373" width="36.6" height="15.0" fill="rgb(205,207,32)" rx="2" ry="2" />
<text  x="1154.66" y="383.5" >run..</text>
</g>
<g >
<title>runtime.wbBufFlush1 (8 samples, 0.01%)</title><rect x="915.3" y="165" width="0.1" height="15.0" fill="rgb(236,97,48)" rx="2" ry="2" />
<text  x="918.25" y="175.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (29 samples, 0.04%)</title><rect x="245.6" y="117" width="0.5" height="15.0" fill="rgb(213,86,29)" rx="2" ry="2" />
<text  x="248.62" y="127.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (8 samples, 0.01%)</title><rect x="244.0" y="133" width="0.1" height="15.0" fill="rgb(209,71,18)" rx="2" ry="2" />
<text  x="246.99" y="143.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (142 samples, 0.22%)</title><rect x="150.0" y="165" width="2.5" height="15.0" fill="rgb(251,228,32)" rx="2" ry="2" />
<text  x="152.96" y="175.5" ></text>
</g>
<g >
<title>runtime.findRunnable (15 samples, 0.02%)</title><rect x="1188.4" y="309" width="0.2" height="15.0" fill="rgb(234,227,52)" rx="2" ry="2" />
<text  x="1191.36" y="319.5" ></text>
</g>
<g >
<title>runtime.gentraceback (15 samples, 0.02%)</title><rect x="901.8" y="149" width="0.2" height="15.0" fill="rgb(224,96,38)" rx="2" ry="2" />
<text  x="904.77" y="159.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (6 samples, 0.01%)</title><rect x="241.2" y="117" width="0.1" height="15.0" fill="rgb(232,105,36)" rx="2" ry="2" />
<text  x="244.22" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (18 samples, 0.03%)</title><rect x="255.7" y="229" width="0.4" height="15.0" fill="rgb(229,145,36)" rx="2" ry="2" />
<text  x="258.75" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (73 samples, 0.11%)</title><rect x="784.9" y="245" width="1.3" height="15.0" fill="rgb(248,35,53)" rx="2" ry="2" />
<text  x="787.85" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (71 samples, 0.11%)</title><rect x="238.7" y="149" width="1.3" height="15.0" fill="rgb(230,17,45)" rx="2" ry="2" />
<text  x="241.72" y="159.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (23 samples, 0.04%)</title><rect x="295.0" y="293" width="0.4" height="15.0" fill="rgb(227,156,15)" rx="2" ry="2" />
<text  x="298.00" y="303.5" ></text>
</g>
<g >
<title>runtime.efaceeq (29 samples, 0.04%)</title><rect x="136.7" y="245" width="0.6" height="15.0" fill="rgb(216,167,49)" rx="2" ry="2" />
<text  x="139.73" y="255.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common/transport.(*NBioTcpEngine).Start.func2 (12,999 samples, 19.81%)</title><rect x="71.7" y="357" width="233.7" height="15.0" fill="rgb(212,56,17)" rx="2" ry="2" />
<text  x="74.66" y="367.5" >github.com/nyan233/littlerpc/pk..</text>
</g>
<g >
<title>runtime.heapBitsForAddr (13 samples, 0.02%)</title><rect x="125.3" y="277" width="0.2" height="15.0" fill="rgb(217,125,51)" rx="2" ry="2" />
<text  x="128.29" y="287.5" ></text>
</g>
<g >
<title>runtime.putempty (9 samples, 0.01%)</title><rect x="876.8" y="149" width="0.1" height="15.0" fill="rgb(248,29,5)" rx="2" ry="2" />
<text  x="879.77" y="159.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (7 samples, 0.01%)</title><rect x="268.6" y="261" width="0.2" height="15.0" fill="rgb(243,150,49)" rx="2" ry="2" />
<text  x="271.64" y="271.5" ></text>
</g>
<g >
<title>runtime.handoff (482 samples, 0.73%)</title><rect x="1024.5" y="309" width="8.6" height="15.0" fill="rgb(211,171,3)" rx="2" ry="2" />
<text  x="1027.47" y="319.5" ></text>
</g>
<g >
<title>runtime.futex (18 samples, 0.03%)</title><rect x="1164.1" y="277" width="0.3" height="15.0" fill="rgb(254,157,31)" rx="2" ry="2" />
<text  x="1167.13" y="287.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.UnmarshalMessageOnMux (9 samples, 0.01%)</title><rect x="121.1" y="309" width="0.1" height="15.0" fill="rgb(228,32,21)" rx="2" ry="2" />
<text  x="124.05" y="319.5" ></text>
</g>
<g >
<title>sync.(*Mutex).unlockSlow (14 samples, 0.02%)</title><rect x="357.5" y="229" width="0.3" height="15.0" fill="rgb(214,74,17)" rx="2" ry="2" />
<text  x="360.50" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (40 samples, 0.06%)</title><rect x="197.0" y="181" width="0.7" height="15.0" fill="rgb(249,134,9)" rx="2" ry="2" />
<text  x="200.02" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (35 samples, 0.05%)</title><rect x="785.1" y="213" width="0.7" height="15.0" fill="rgb(213,78,20)" rx="2" ry="2" />
<text  x="788.14" y="223.5" ></text>
</g>
<g >
<title>runtime.findRunnable (162 samples, 0.25%)</title><rect x="1137.0" y="325" width="2.9" height="15.0" fill="rgb(233,186,22)" rx="2" ry="2" />
<text  x="1139.96" y="335.5" ></text>
</g>
<g >
<title>runtime.ready (29 samples, 0.04%)</title><rect x="979.0" y="277" width="0.5" height="15.0" fill="rgb(236,66,37)" rx="2" ry="2" />
<text  x="981.98" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (6 samples, 0.01%)</title><rect x="687.5" y="165" width="0.1" height="15.0" fill="rgb(235,102,51)" rx="2" ry="2" />
<text  x="690.52" y="175.5" ></text>
</g>
<g >
<title>runtime.unlock2 (24 samples, 0.04%)</title><rect x="1140.8" y="309" width="0.4" height="15.0" fill="rgb(219,226,30)" rx="2" ry="2" />
<text  x="1143.79" y="319.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (35 samples, 0.05%)</title><rect x="158.1" y="245" width="0.6" height="15.0" fill="rgb(245,5,16)" rx="2" ry="2" />
<text  x="161.07" y="255.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (21 samples, 0.03%)</title><rect x="271.0" y="197" width="0.4" height="15.0" fill="rgb(250,54,37)" rx="2" ry="2" />
<text  x="273.98" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (54 samples, 0.08%)</title><rect x="347.9" y="261" width="1.0" height="15.0" fill="rgb(236,227,39)" rx="2" ry="2" />
<text  x="350.92" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (6 samples, 0.01%)</title><rect x="870.0" y="213" width="0.1" height="15.0" fill="rgb(213,181,22)" rx="2" ry="2" />
<text  x="872.99" y="223.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (50 samples, 0.08%)</title><rect x="196.8" y="197" width="0.9" height="15.0" fill="rgb(240,64,19)" rx="2" ry="2" />
<text  x="199.84" y="207.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (12,246 samples, 18.66%)</title><rect x="454.9" y="165" width="220.2" height="15.0" fill="rgb(220,200,33)" rx="2" ry="2" />
<text  x="457.87" y="175.5" >syscall.RawSyscall6</text>
</g>
<g >
<title>runtime.(*lfstack).pop (7 samples, 0.01%)</title><rect x="150.7" y="117" width="0.1" height="15.0" fill="rgb(244,183,51)" rx="2" ry="2" />
<text  x="153.66" y="127.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (70 samples, 0.11%)</title><rect x="866.0" y="229" width="1.3" height="15.0" fill="rgb(214,146,50)" rx="2" ry="2" />
<text  x="869.00" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (7 samples, 0.01%)</title><rect x="786.3" y="181" width="0.1" height="15.0" fill="rgb(211,0,22)" rx="2" ry="2" />
<text  x="789.29" y="191.5" ></text>
</g>
<g >
<title>runtime.pcvalue (21 samples, 0.03%)</title><rect x="1050.9" y="197" width="0.4" height="15.0" fill="rgb(254,125,54)" rx="2" ry="2" />
<text  x="1053.94" y="207.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (15 samples, 0.02%)</title><rect x="275.2" y="261" width="0.3" height="15.0" fill="rgb(250,89,51)" rx="2" ry="2" />
<text  x="278.20" y="271.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (27 samples, 0.04%)</title><rect x="1126.2" y="309" width="0.5" height="15.0" fill="rgb(237,140,44)" rx="2" ry="2" />
<text  x="1129.22" y="319.5" ></text>
</g>
<g >
<title>runtime.futexsleep (19 samples, 0.03%)</title><rect x="1164.1" y="293" width="0.3" height="15.0" fill="rgb(211,24,28)" rx="2" ry="2" />
<text  x="1167.11" y="303.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (139 samples, 0.21%)</title><rect x="72.7" y="309" width="2.5" height="15.0" fill="rgb(239,38,8)" rx="2" ry="2" />
<text  x="75.72" y="319.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popHead (53 samples, 0.08%)</title><rect x="776.7" y="261" width="0.9" height="15.0" fill="rgb(209,195,6)" rx="2" ry="2" />
<text  x="779.69" y="271.5" ></text>
</g>
<g >
<title>reflect.Value.NumMethod (76 samples, 0.12%)</title><rect x="831.5" y="261" width="1.3" height="15.0" fill="rgb(227,103,40)" rx="2" ry="2" />
<text  x="834.46" y="271.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.MarshalMessage (856 samples, 1.30%)</title><rect x="415.6" y="293" width="15.4" height="15.0" fill="rgb(206,47,54)" rx="2" ry="2" />
<text  x="418.61" y="303.5" ></text>
</g>
<g >
<title>runtime.memmove (148 samples, 0.23%)</title><rect x="721.7" y="245" width="2.7" height="15.0" fill="rgb(209,130,8)" rx="2" ry="2" />
<text  x="724.74" y="255.5" ></text>
</g>
<g >
<title>runtime.tgkill (128 samples, 0.20%)</title><rect x="1022.1" y="261" width="2.3" height="15.0" fill="rgb(210,171,15)" rx="2" ry="2" />
<text  x="1025.11" y="271.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (8 samples, 0.01%)</title><rect x="410.8" y="133" width="0.2" height="15.0" fill="rgb(246,122,40)" rx="2" ry="2" />
<text  x="413.83" y="143.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (14 samples, 0.02%)</title><rect x="256.1" y="181" width="0.3" height="15.0" fill="rgb(232,225,11)" rx="2" ry="2" />
<text  x="259.11" y="191.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).getPtr (31 samples, 0.05%)</title><rect x="1047.8" y="277" width="0.6" height="15.0" fill="rgb(218,142,39)" rx="2" ry="2" />
<text  x="1050.84" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (14 samples, 0.02%)</title><rect x="282.2" y="229" width="0.3" height="15.0" fill="rgb(254,90,10)" rx="2" ry="2" />
<text  x="285.21" y="239.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/internal/pool.exec[...] (37,057 samples, 56.47%)</title><rect x="322.4" y="373" width="666.3" height="15.0" fill="rgb(207,215,47)" rx="2" ry="2" />
<text  x="325.38" y="383.5" >github.com/nyan233/littlerpc/internal/pool.exec[...]</text>
</g>
<g >
<title>runtime.reentersyscall (191 samples, 0.29%)</title><rect x="448.2" y="149" width="3.4" height="15.0" fill="rgb(205,104,33)" rx="2" ry="2" />
<text  x="451.21" y="159.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.(*Message).SetInstanceName (7 samples, 0.01%)</title><rect x="112.8" y="293" width="0.2" height="15.0" fill="rgb(211,75,37)" rx="2" ry="2" />
<text  x="115.83" y="303.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).allocToCache (7 samples, 0.01%)</title><rect x="239.4" y="85" width="0.1" height="15.0" fill="rgb(229,165,7)" rx="2" ry="2" />
<text  x="242.40" y="95.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (17 samples, 0.03%)</title><rect x="263.2" y="197" width="0.3" height="15.0" fill="rgb(243,53,6)" rx="2" ry="2" />
<text  x="266.24" y="207.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popHead (21 samples, 0.03%)</title><rect x="964.4" y="293" width="0.4" height="15.0" fill="rgb(243,147,48)" rx="2" ry="2" />
<text  x="967.41" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.01%)</title><rect x="246.2" y="197" width="0.1" height="15.0" fill="rgb(213,202,12)" rx="2" ry="2" />
<text  x="249.22" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (146 samples, 0.22%)</title><rect x="149.9" y="181" width="2.6" height="15.0" fill="rgb(212,52,3)" rx="2" ry="2" />
<text  x="152.91" y="191.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Take (31 samples, 0.05%)</title><rect x="141.8" y="261" width="0.6" height="15.0" fill="rgb(212,99,53)" rx="2" ry="2" />
<text  x="144.80" y="271.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint64).CompareAndSwap (9 samples, 0.01%)</title><rect x="888.3" y="181" width="0.2" height="15.0" fill="rgb(236,93,44)" rx="2" ry="2" />
<text  x="891.33" y="191.5" ></text>
</g>
<g >
<title>runtime.trygetfull (7 samples, 0.01%)</title><rect x="900.0" y="181" width="0.1" height="15.0" fill="rgb(212,65,41)" rx="2" ry="2" />
<text  x="902.97" y="191.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (22 samples, 0.03%)</title><rect x="271.4" y="261" width="0.4" height="15.0" fill="rgb(254,39,47)" rx="2" ry="2" />
<text  x="274.39" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (37 samples, 0.06%)</title><rect x="785.1" y="229" width="0.7" height="15.0" fill="rgb(232,189,50)" rx="2" ry="2" />
<text  x="788.12" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (212 samples, 0.32%)</title><rect x="814.8" y="245" width="3.8" height="15.0" fill="rgb(217,180,44)" rx="2" ry="2" />
<text  x="817.81" y="255.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (23 samples, 0.04%)</title><rect x="148.6" y="181" width="0.4" height="15.0" fill="rgb(236,167,0)" rx="2" ry="2" />
<text  x="151.58" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (22 samples, 0.03%)</title><rect x="818.2" y="229" width="0.3" height="15.0" fill="rgb(209,171,11)" rx="2" ry="2" />
<text  x="821.15" y="239.5" ></text>
</g>
<g >
<title>all (65,625 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(235,85,27)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>runtime.preemptall (6 samples, 0.01%)</title><rect x="1000.0" y="309" width="0.1" height="15.0" fill="rgb(227,215,2)" rx="2" ry="2" />
<text  x="1003.00" y="319.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (58 samples, 0.09%)</title><rect x="82.2" y="293" width="1.0" height="15.0" fill="rgb(227,205,34)" rx="2" ry="2" />
<text  x="85.18" y="303.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (7 samples, 0.01%)</title><rect x="280.0" y="293" width="0.1" height="15.0" fill="rgb(237,48,29)" rx="2" ry="2" />
<text  x="283.02" y="303.5" ></text>
</g>
<g >
<title>runtime.recv (97 samples, 0.15%)</title><rect x="978.9" y="341" width="1.7" height="15.0" fill="rgb(215,62,39)" rx="2" ry="2" />
<text  x="981.87" y="351.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.ResetMsg (131 samples, 0.20%)</title><rect x="351.0" y="293" width="2.4" height="15.0" fill="rgb(213,41,11)" rx="2" ry="2" />
<text  x="354.04" y="303.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (32 samples, 0.05%)</title><rect x="879.9" y="149" width="0.5" height="15.0" fill="rgb(232,69,41)" rx="2" ry="2" />
<text  x="882.86" y="159.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (8 samples, 0.01%)</title><rect x="408.6" y="149" width="0.1" height="15.0" fill="rgb(241,179,2)" rx="2" ry="2" />
<text  x="411.57" y="159.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (7,036 samples, 10.72%)</title><rect x="1000.2" y="357" width="126.5" height="15.0" fill="rgb(229,32,35)" rx="2" ry="2" />
<text  x="1003.23" y="367.5" >runtime.gcBgMar..</text>
</g>
<g >
<title>sync.(*poolDequeue).popHead (41 samples, 0.06%)</title><rect x="776.9" y="245" width="0.7" height="15.0" fill="rgb(222,54,3)" rx="2" ry="2" />
<text  x="779.91" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (1,473 samples, 2.24%)</title><rect x="197.7" y="245" width="26.5" height="15.0" fill="rgb(252,82,18)" rx="2" ry="2" />
<text  x="200.74" y="255.5" >r..</text>
</g>
<g >
<title>runtime.futexwakeup (44 samples, 0.07%)</title><rect x="94.7" y="261" width="0.8" height="15.0" fill="rgb(230,94,50)" rx="2" ry="2" />
<text  x="97.67" y="271.5" ></text>
</g>
<g >
<title>runtime.gentraceback (64 samples, 0.10%)</title><rect x="877.3" y="117" width="1.1" height="15.0" fill="rgb(225,147,38)" rx="2" ry="2" />
<text  x="880.28" y="127.5" ></text>
</g>
<g >
<title>runtime.stealWork (32 samples, 0.05%)</title><rect x="1139.3" y="309" width="0.6" height="15.0" fill="rgb(233,203,35)" rx="2" ry="2" />
<text  x="1142.29" y="319.5" ></text>
</g>
<g >
<title>runtime.memmove (7 samples, 0.01%)</title><rect x="85.1" y="261" width="0.1" height="15.0" fill="rgb(250,176,36)" rx="2" ry="2" />
<text  x="88.11" y="271.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (14 samples, 0.02%)</title><rect x="718.0" y="101" width="0.2" height="15.0" fill="rgb(231,76,34)" rx="2" ry="2" />
<text  x="720.96" y="111.5" ></text>
</g>
<g >
<title>runtime.goyield_m (9 samples, 0.01%)</title><rect x="1151.5" y="373" width="0.1" height="15.0" fill="rgb(251,87,2)" rx="2" ry="2" />
<text  x="1154.48" y="383.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (31 samples, 0.05%)</title><rect x="1047.8" y="245" width="0.6" height="15.0" fill="rgb(226,182,7)" rx="2" ry="2" />
<text  x="1050.84" y="255.5" ></text>
</g>
<g >
<title>runtime.makeslice (436 samples, 0.66%)</title><rect x="403.8" y="261" width="7.8" height="15.0" fill="rgb(206,185,40)" rx="2" ry="2" />
<text  x="406.80" y="271.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (10 samples, 0.02%)</title><rect x="1053.5" y="213" width="0.2" height="15.0" fill="rgb(236,151,37)" rx="2" ry="2" />
<text  x="1056.51" y="223.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (101 samples, 0.15%)</title><rect x="1033.3" y="309" width="1.8" height="15.0" fill="rgb(242,157,21)" rx="2" ry="2" />
<text  x="1036.33" y="319.5" ></text>
</g>
<g >
<title>runtime.unlock2 (114 samples, 0.17%)</title><rect x="1185.4" y="325" width="2.0" height="15.0" fill="rgb(220,50,38)" rx="2" ry="2" />
<text  x="1188.38" y="335.5" ></text>
</g>
<g >
<title>runtime.makeslice (35 samples, 0.05%)</title><rect x="356.9" y="245" width="0.6" height="15.0" fill="rgb(237,30,1)" rx="2" ry="2" />
<text  x="359.87" y="255.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (36 samples, 0.05%)</title><rect x="1080.6" y="309" width="0.7" height="15.0" fill="rgb(252,193,42)" rx="2" ry="2" />
<text  x="1083.60" y="319.5" ></text>
</g>
<g >
<title>runtime.sweepone (12 samples, 0.02%)</title><rect x="148.8" y="165" width="0.2" height="15.0" fill="rgb(205,161,54)" rx="2" ry="2" />
<text  x="151.76" y="175.5" ></text>
</g>
<g >
<title>syscall.EpollWait (603 samples, 0.92%)</title><rect x="311.5" y="357" width="10.9" height="15.0" fill="rgb(214,79,19)" rx="2" ry="2" />
<text  x="314.52" y="367.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (6 samples, 0.01%)</title><rect x="85.0" y="261" width="0.1" height="15.0" fill="rgb(226,171,47)" rx="2" ry="2" />
<text  x="88.00" y="271.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (168 samples, 0.26%)</title><rect x="117.1" y="277" width="3.0" height="15.0" fill="rgb(230,129,32)" rx="2" ry="2" />
<text  x="120.09" y="287.5" ></text>
</g>
<g >
<title>runtime.futexsleep (29 samples, 0.04%)</title><rect x="1144.1" y="325" width="0.5" height="15.0" fill="rgb(243,8,38)" rx="2" ry="2" />
<text  x="1147.08" y="335.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (45 samples, 0.07%)</title><rect x="294.1" y="229" width="0.8" height="15.0" fill="rgb(221,197,8)" rx="2" ry="2" />
<text  x="297.14" y="239.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (8 samples, 0.01%)</title><rect x="16.4" y="229" width="0.1" height="15.0" fill="rgb(231,206,25)" rx="2" ry="2" />
<text  x="19.40" y="239.5" ></text>
</g>
<g >
<title>sync.runtime_Semrelease (18 samples, 0.03%)</title><rect x="812.3" y="213" width="0.3" height="15.0" fill="rgb(247,184,22)" rx="2" ry="2" />
<text  x="815.31" y="223.5" ></text>
</g>
<g >
<title>runtime.lock2 (18 samples, 0.03%)</title><rect x="1163.7" y="309" width="0.4" height="15.0" fill="rgb(227,98,28)" rx="2" ry="2" />
<text  x="1166.73" y="319.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (49 samples, 0.07%)</title><rect x="1187.4" y="357" width="0.9" height="15.0" fill="rgb(230,151,31)" rx="2" ry="2" />
<text  x="1190.45" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (8 samples, 0.01%)</title><rect x="815.7" y="197" width="0.1" height="15.0" fill="rgb(251,221,45)" rx="2" ry="2" />
<text  x="818.67" y="207.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (28 samples, 0.04%)</title><rect x="411.6" y="277" width="0.5" height="15.0" fill="rgb(219,104,17)" rx="2" ry="2" />
<text  x="414.64" y="287.5" ></text>
</g>
<g >
<title>runtime.gopark (15 samples, 0.02%)</title><rect x="306.4" y="293" width="0.3" height="15.0" fill="rgb(252,27,11)" rx="2" ry="2" />
<text  x="309.43" y="303.5" ></text>
</g>
<g >
<title>reflect.(*rtype).AssignableTo (56 samples, 0.09%)</title><rect x="854.3" y="277" width="1.0" height="15.0" fill="rgb(224,4,32)" rx="2" ry="2" />
<text  x="857.30" y="287.5" ></text>
</g>
<g >
<title>runtime.convI2I (65 samples, 0.10%)</title><rect x="727.2" y="277" width="1.2" height="15.0" fill="rgb(207,70,31)" rx="2" ry="2" />
<text  x="730.22" y="287.5" ></text>
</g>
<g >
<title>runtime.scanobject (23 samples, 0.04%)</title><rect x="119.1" y="165" width="0.5" height="15.0" fill="rgb(220,18,16)" rx="2" ry="2" />
<text  x="122.14" y="175.5" ></text>
</g>
<g >
<title>runtime.makeslice (33 samples, 0.05%)</title><rect x="931.5" y="277" width="0.6" height="15.0" fill="rgb(252,32,18)" rx="2" ry="2" />
<text  x="934.49" y="287.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.(*Message).AppendPayloads (333 samples, 0.51%)</title><rect x="344.9" y="309" width="6.0" height="15.0" fill="rgb(226,169,39)" rx="2" ry="2" />
<text  x="347.91" y="319.5" ></text>
</g>
<g >
<title>runtime.casgstatus (7 samples, 0.01%)</title><rect x="311.2" y="213" width="0.1" height="15.0" fill="rgb(241,124,51)" rx="2" ry="2" />
<text  x="314.22" y="223.5" ></text>
</g>
<g >
<title>runtime.entersyscall (75 samples, 0.11%)</title><rect x="15.2" y="277" width="1.4" height="15.0" fill="rgb(242,16,33)" rx="2" ry="2" />
<text  x="18.21" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (6 samples, 0.01%)</title><rect x="240.0" y="133" width="0.1" height="15.0" fill="rgb(218,168,41)" rx="2" ry="2" />
<text  x="243.01" y="143.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (204 samples, 0.31%)</title><rect x="242.5" y="181" width="3.7" height="15.0" fill="rgb(205,67,28)" rx="2" ry="2" />
<text  x="245.55" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (22 samples, 0.03%)</title><rect x="963.6" y="229" width="0.4" height="15.0" fill="rgb(225,171,9)" rx="2" ry="2" />
<text  x="966.60" y="239.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (14 samples, 0.02%)</title><rect x="256.1" y="165" width="0.3" height="15.0" fill="rgb(245,187,0)" rx="2" ry="2" />
<text  x="259.11" y="175.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (22 samples, 0.03%)</title><rect x="278.0" y="261" width="0.4" height="15.0" fill="rgb(246,178,1)" rx="2" ry="2" />
<text  x="281.01" y="271.5" ></text>
</g>
<g >
<title>runtime.handoff (27 samples, 0.04%)</title><rect x="876.1" y="149" width="0.5" height="15.0" fill="rgb(253,181,12)" rx="2" ry="2" />
<text  x="879.09" y="159.5" ></text>
</g>
<g >
<title>runtime.mallocgc (715 samples, 1.09%)</title><rect x="145.2" y="245" width="12.9" height="15.0" fill="rgb(207,140,31)" rx="2" ry="2" />
<text  x="148.22" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (8 samples, 0.01%)</title><rect x="312.1" y="293" width="0.1" height="15.0" fill="rgb(235,119,31)" rx="2" ry="2" />
<text  x="315.08" y="303.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (56 samples, 0.09%)</title><rect x="877.4" y="101" width="1.0" height="15.0" fill="rgb(230,76,49)" rx="2" ry="2" />
<text  x="880.42" y="111.5" ></text>
</g>
<g >
<title>runtime.releaseSudog (10 samples, 0.02%)</title><rect x="687.7" y="181" width="0.1" height="15.0" fill="rgb(246,101,18)" rx="2" ry="2" />
<text  x="690.67" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (20 samples, 0.03%)</title><rect x="101.8" y="245" width="0.4" height="15.0" fill="rgb(217,153,8)" rx="2" ry="2" />
<text  x="104.79" y="255.5" ></text>
</g>
<g >
<title>runtime.nilinterequal (32 samples, 0.05%)</title><rect x="136.7" y="261" width="0.6" height="15.0" fill="rgb(253,150,39)" rx="2" ry="2" />
<text  x="139.68" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBits.next (29 samples, 0.04%)</title><rect x="901.1" y="197" width="0.5" height="15.0" fill="rgb(247,79,17)" rx="2" ry="2" />
<text  x="904.10" y="207.5" ></text>
</g>
<g >
<title>runtime.schedule (20 samples, 0.03%)</title><rect x="1188.4" y="325" width="0.3" height="15.0" fill="rgb(248,14,13)" rx="2" ry="2" />
<text  x="1191.36" y="335.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).popTail (265 samples, 0.40%)</title><rect x="761.6" y="229" width="4.7" height="15.0" fill="rgb(216,134,46)" rx="2" ry="2" />
<text  x="764.57" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (7 samples, 0.01%)</title><rect x="115.6" y="197" width="0.1" height="15.0" fill="rgb(228,114,32)" rx="2" ry="2" />
<text  x="118.58" y="207.5" ></text>
</g>
<g >
<title>runtime.memmove (56 samples, 0.09%)</title><rect x="115.8" y="261" width="1.0" height="15.0" fill="rgb(233,24,21)" rx="2" ry="2" />
<text  x="118.82" y="271.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (77 samples, 0.12%)</title><rect x="877.2" y="149" width="1.4" height="15.0" fill="rgb(251,182,36)" rx="2" ry="2" />
<text  x="880.17" y="159.5" ></text>
</g>
<g >
<title>sync.loadPoolChainElt (363 samples, 0.55%)</title><rect x="802.9" y="261" width="6.6" height="15.0" fill="rgb(243,168,7)" rx="2" ry="2" />
<text  x="805.94" y="271.5" ></text>
</g>
<g >
<title>github.com/zbh255/bilog.(*TimeFactory).Start.func1 (7 samples, 0.01%)</title><rect x="988.7" y="389" width="0.1" height="15.0" fill="rgb(217,67,2)" rx="2" ry="2" />
<text  x="991.70" y="399.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Append (95 samples, 0.14%)</title><rect x="115.1" y="277" width="1.7" height="15.0" fill="rgb(214,96,37)" rx="2" ry="2" />
<text  x="118.12" y="287.5" ></text>
</g>
<g >
<title>runtime.procyield (179 samples, 0.27%)</title><rect x="975.6" y="309" width="3.3" height="15.0" fill="rgb(237,38,25)" rx="2" ry="2" />
<text  x="978.65" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (7 samples, 0.01%)</title><rect x="115.6" y="229" width="0.1" height="15.0" fill="rgb(249,83,38)" rx="2" ry="2" />
<text  x="118.58" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (40 samples, 0.06%)</title><rect x="1150.8" y="309" width="0.7" height="15.0" fill="rgb(253,198,42)" rx="2" ry="2" />
<text  x="1153.77" y="319.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/internal/reflect.ToTypePtr (17 samples, 0.03%)</title><rect x="164.5" y="277" width="0.3" height="15.0" fill="rgb(232,37,47)" rx="2" ry="2" />
<text  x="167.49" y="287.5" ></text>
</g>
<g >
<title>runtime.greyobject (6 samples, 0.01%)</title><rect x="245.1" y="117" width="0.1" height="15.0" fill="rgb(242,139,32)" rx="2" ry="2" />
<text  x="248.14" y="127.5" ></text>
</g>
<g >
<title>github.com/lesismal/nbio.(*poller).start (17,373 samples, 26.47%)</title><rect x="10.0" y="389" width="312.4" height="15.0" fill="rgb(228,102,43)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >github.com/lesismal/nbio.(*poller).start</text>
</g>
<g >
<title>runtime.mapaccess2 (62 samples, 0.09%)</title><rect x="130.5" y="309" width="1.1" height="15.0" fill="rgb(206,86,19)" rx="2" ry="2" />
<text  x="133.53" y="319.5" ></text>
</g>
<g >
<title>runtime.acquirem (16 samples, 0.02%)</title><rect x="259.1" y="261" width="0.3" height="15.0" fill="rgb(239,19,52)" rx="2" ry="2" />
<text  x="262.07" y="271.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (31 samples, 0.05%)</title><rect x="732.3" y="165" width="0.6" height="15.0" fill="rgb(218,79,45)" rx="2" ry="2" />
<text  x="735.29" y="175.5" ></text>
</g>
<g >
<title>runtime.duffzero (25 samples, 0.04%)</title><rect x="861.3" y="261" width="0.4" height="15.0" fill="rgb(220,163,7)" rx="2" ry="2" />
<text  x="864.27" y="271.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (35 samples, 0.05%)</title><rect x="810.5" y="261" width="0.6" height="15.0" fill="rgb(252,91,36)" rx="2" ry="2" />
<text  x="813.46" y="271.5" ></text>
</g>
<g >
<title>runtime.entersyscall (33 samples, 0.05%)</title><rect x="311.6" y="325" width="0.6" height="15.0" fill="rgb(227,99,37)" rx="2" ry="2" />
<text  x="314.63" y="335.5" ></text>
</g>
<g >
<title>sync.runtime_Semrelease (18 samples, 0.03%)</title><rect x="964.1" y="229" width="0.3" height="15.0" fill="rgb(237,39,30)" rx="2" ry="2" />
<text  x="967.07" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1,519 samples, 2.31%)</title><rect x="888.2" y="245" width="27.3" height="15.0" fill="rgb(247,147,17)" rx="2" ry="2" />
<text  x="891.19" y="255.5" >r..</text>
</g>
<g >
<title>runtime.wbBufFlush (51 samples, 0.08%)</title><rect x="196.8" y="229" width="0.9" height="15.0" fill="rgb(208,123,25)" rx="2" ry="2" />
<text  x="199.82" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (81 samples, 0.12%)</title><rect x="819.2" y="245" width="1.4" height="15.0" fill="rgb(243,96,43)" rx="2" ry="2" />
<text  x="822.16" y="255.5" ></text>
</g>
<g >
<title>sync.loadPoolChainElt (205 samples, 0.31%)</title><rect x="957.8" y="277" width="3.7" height="15.0" fill="rgb(235,120,31)" rx="2" ry="2" />
<text  x="960.79" y="287.5" ></text>
</g>
<g >
<title>runtime.markroot (20 samples, 0.03%)</title><rect x="901.7" y="197" width="0.4" height="15.0" fill="rgb(208,115,36)" rx="2" ry="2" />
<text  x="904.75" y="207.5" ></text>
</g>
<g >
<title>runtime.memmove (80 samples, 0.12%)</title><rect x="426.8" y="245" width="1.4" height="15.0" fill="rgb(242,14,34)" rx="2" ry="2" />
<text  x="429.76" y="255.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (44 samples, 0.07%)</title><rect x="267.6" y="293" width="0.8" height="15.0" fill="rgb(236,48,5)" rx="2" ry="2" />
<text  x="270.65" y="303.5" ></text>
</g>
<g >
<title>runtime.resetspinning (29 samples, 0.04%)</title><rect x="1184.9" y="341" width="0.5" height="15.0" fill="rgb(249,198,8)" rx="2" ry="2" />
<text  x="1187.86" y="351.5" ></text>
</g>
<g >
<title>reflect.(*rtype).In (18 samples, 0.03%)</title><rect x="142.7" y="277" width="0.3" height="15.0" fill="rgb(242,76,21)" rx="2" ry="2" />
<text  x="145.70" y="287.5" ></text>
</g>
<g >
<title>runtime.scanstack (19 samples, 0.03%)</title><rect x="901.8" y="165" width="0.3" height="15.0" fill="rgb(252,225,25)" rx="2" ry="2" />
<text  x="904.77" y="175.5" ></text>
</g>
<g >
<title>runtime.heapBits.next (142 samples, 0.22%)</title><rect x="1044.2" y="325" width="2.5" height="15.0" fill="rgb(226,43,33)" rx="2" ry="2" />
<text  x="1047.19" y="335.5" ></text>
</g>
<g >
<title>runtime.gcStart (7 samples, 0.01%)</title><rect x="409.2" y="229" width="0.1" height="15.0" fill="rgb(249,190,32)" rx="2" ry="2" />
<text  x="412.21" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (35 samples, 0.05%)</title><rect x="356.9" y="229" width="0.6" height="15.0" fill="rgb(207,220,35)" rx="2" ry="2" />
<text  x="359.87" y="239.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (257 samples, 0.39%)</title><rect x="1024.5" y="293" width="4.6" height="15.0" fill="rgb(205,87,15)" rx="2" ry="2" />
<text  x="1027.49" y="303.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/internal/reflect.FuncInputTypeList (1,288 samples, 1.96%)</title><rect x="140.3" y="293" width="23.2" height="15.0" fill="rgb(246,196,51)" rx="2" ry="2" />
<text  x="143.34" y="303.5" >g..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (10 samples, 0.02%)</title><rect x="278.4" y="261" width="0.2" height="15.0" fill="rgb(236,198,34)" rx="2" ry="2" />
<text  x="281.40" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (31 samples, 0.05%)</title><rect x="146.9" y="117" width="0.6" height="15.0" fill="rgb(247,59,10)" rx="2" ry="2" />
<text  x="149.91" y="127.5" ></text>
</g>
<g >
<title>runtime.mallocgc (16 samples, 0.02%)</title><rect x="74.2" y="261" width="0.3" height="15.0" fill="rgb(227,1,22)" rx="2" ry="2" />
<text  x="77.21" y="271.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (11 samples, 0.02%)</title><rect x="734.7" y="197" width="0.1" height="15.0" fill="rgb(218,209,54)" rx="2" ry="2" />
<text  x="737.65" y="207.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (23 samples, 0.04%)</title><rect x="240.2" y="165" width="0.4" height="15.0" fill="rgb(244,118,26)" rx="2" ry="2" />
<text  x="243.21" y="175.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Store (198 samples, 0.30%)</title><rect x="825.2" y="293" width="3.5" height="15.0" fill="rgb(205,10,38)" rx="2" ry="2" />
<text  x="828.17" y="303.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bytep (11 samples, 0.02%)</title><rect x="1081.3" y="309" width="0.1" height="15.0" fill="rgb(216,92,16)" rx="2" ry="2" />
<text  x="1084.25" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (15 samples, 0.02%)</title><rect x="932.9" y="245" width="0.3" height="15.0" fill="rgb(211,149,34)" rx="2" ry="2" />
<text  x="935.93" y="255.5" ></text>
</g>
<g >
<title>runtime.procyield (121 samples, 0.18%)</title><rect x="1145.5" y="325" width="2.2" height="15.0" fill="rgb(238,154,53)" rx="2" ry="2" />
<text  x="1148.53" y="335.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (113 samples, 0.17%)</title><rect x="989.0" y="389" width="2.0" height="15.0" fill="rgb(208,67,19)" rx="2" ry="2" />
<text  x="992.01" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (10 samples, 0.02%)</title><rect x="406.9" y="149" width="0.2" height="15.0" fill="rgb(205,0,39)" rx="2" ry="2" />
<text  x="409.93" y="159.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (13 samples, 0.02%)</title><rect x="901.8" y="117" width="0.2" height="15.0" fill="rgb(239,122,16)" rx="2" ry="2" />
<text  x="904.80" y="127.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (32 samples, 0.05%)</title><rect x="980.0" y="325" width="0.6" height="15.0" fill="rgb(230,219,34)" rx="2" ry="2" />
<text  x="983.04" y="335.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (35 samples, 0.05%)</title><rect x="1053.7" y="261" width="0.6" height="15.0" fill="rgb(222,106,32)" rx="2" ry="2" />
<text  x="1056.69" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (41 samples, 0.06%)</title><rect x="118.8" y="245" width="0.8" height="15.0" fill="rgb(221,115,46)" rx="2" ry="2" />
<text  x="121.82" y="255.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..LoadOk (114 samples, 0.17%)</title><rect x="130.1" y="325" width="2.1" height="15.0" fill="rgb(246,110,37)" rx="2" ry="2" />
<text  x="133.15" y="335.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).RLock (42 samples, 0.06%)</title><rect x="296.5" y="325" width="0.7" height="15.0" fill="rgb(207,178,31)" rx="2" ry="2" />
<text  x="299.45" y="335.5" ></text>
</g>
<g >
<title>runtime.deferprocStack (20 samples, 0.03%)</title><rect x="121.2" y="309" width="0.4" height="15.0" fill="rgb(223,93,13)" rx="2" ry="2" />
<text  x="124.23" y="319.5" ></text>
</g>
<g >
<title>runtime.casgstatus (122 samples, 0.19%)</title><rect x="1134.2" y="309" width="2.2" height="15.0" fill="rgb(214,214,53)" rx="2" ry="2" />
<text  x="1137.24" y="319.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1,491 samples, 2.27%)</title><rect x="888.6" y="213" width="26.8" height="15.0" fill="rgb(241,87,18)" rx="2" ry="2" />
<text  x="891.59" y="223.5" >r..</text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (113 samples, 0.17%)</title><rect x="989.0" y="357" width="2.0" height="15.0" fill="rgb(243,179,54)" rx="2" ry="2" />
<text  x="992.01" y="367.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common/msgparser.(*SimpleAllocTor).AllocMessage (595 samples, 0.91%)</title><rect x="100.6" y="309" width="10.7" height="15.0" fill="rgb(251,85,14)" rx="2" ry="2" />
<text  x="103.55" y="319.5" ></text>
</g>
<g >
<title>runtime.readyWithTime (33 samples, 0.05%)</title><rect x="310.9" y="293" width="0.6" height="15.0" fill="rgb(228,104,23)" rx="2" ry="2" />
<text  x="313.86" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (17 samples, 0.03%)</title><rect x="999.5" y="261" width="0.3" height="15.0" fill="rgb(223,196,7)" rx="2" ry="2" />
<text  x="1002.51" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (14 samples, 0.02%)</title><rect x="357.0" y="213" width="0.2" height="15.0" fill="rgb(252,85,17)" rx="2" ry="2" />
<text  x="360.00" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (218 samples, 0.33%)</title><rect x="292.5" y="325" width="3.9" height="15.0" fill="rgb(241,90,9)" rx="2" ry="2" />
<text  x="295.52" y="335.5" ></text>
</g>
<g >
<title>runtime.gcFlushBgCredit (8 samples, 0.01%)</title><rect x="1037.4" y="325" width="0.1" height="15.0" fill="rgb(210,199,6)" rx="2" ry="2" />
<text  x="1040.40" y="335.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (11 samples, 0.02%)</title><rect x="933.9" y="245" width="0.2" height="15.0" fill="rgb(254,85,47)" rx="2" ry="2" />
<text  x="936.88" y="255.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (6 samples, 0.01%)</title><rect x="127.2" y="277" width="0.1" height="15.0" fill="rgb(238,148,13)" rx="2" ry="2" />
<text  x="130.24" y="287.5" ></text>
</g>
<g >
<title>runtime.handoff (6 samples, 0.01%)</title><rect x="302.4" y="197" width="0.1" height="15.0" fill="rgb(231,187,18)" rx="2" ry="2" />
<text  x="305.35" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (8 samples, 0.01%)</title><rect x="277.4" y="229" width="0.2" height="15.0" fill="rgb(225,129,21)" rx="2" ry="2" />
<text  x="280.45" y="239.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (242 samples, 0.37%)</title><rect x="994.1" y="357" width="4.3" height="15.0" fill="rgb(219,108,16)" rx="2" ry="2" />
<text  x="997.08" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (112 samples, 0.17%)</title><rect x="989.0" y="325" width="2.0" height="15.0" fill="rgb(220,44,48)" rx="2" ry="2" />
<text  x="992.03" y="335.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (106 samples, 0.16%)</title><rect x="918.4" y="261" width="1.9" height="15.0" fill="rgb(212,164,2)" rx="2" ry="2" />
<text  x="921.40" y="271.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (6 samples, 0.01%)</title><rect x="815.5" y="181" width="0.1" height="15.0" fill="rgb(250,214,41)" rx="2" ry="2" />
<text  x="818.51" y="191.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (8 samples, 0.01%)</title><rect x="278.6" y="277" width="0.2" height="15.0" fill="rgb(220,31,31)" rx="2" ry="2" />
<text  x="281.62" y="287.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrierSI (7 samples, 0.01%)</title><rect x="121.9" y="309" width="0.1" height="15.0" fill="rgb(205,137,6)" rx="2" ry="2" />
<text  x="124.86" y="319.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).RUnlock (31 samples, 0.05%)</title><rect x="131.6" y="309" width="0.6" height="15.0" fill="rgb(224,92,20)" rx="2" ry="2" />
<text  x="134.64" y="319.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (11 samples, 0.02%)</title><rect x="733.5" y="213" width="0.2" height="15.0" fill="rgb(225,53,9)" rx="2" ry="2" />
<text  x="736.50" y="223.5" ></text>
</g>
<g >
<title>runtime.pcvalue (23 samples, 0.04%)</title><rect x="1049.1" y="245" width="0.4" height="15.0" fill="rgb(239,162,53)" rx="2" ry="2" />
<text  x="1052.08" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (9 samples, 0.01%)</title><rect x="732.6" y="117" width="0.2" height="15.0" fill="rgb(234,200,1)" rx="2" ry="2" />
<text  x="735.60" y="127.5" ></text>
</g>
<g >
<title>runtime.runqput (8 samples, 0.01%)</title><rect x="979.3" y="261" width="0.1" height="15.0" fill="rgb(211,45,0)" rx="2" ry="2" />
<text  x="982.30" y="271.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (126 samples, 0.19%)</title><rect x="778.8" y="261" width="2.2" height="15.0" fill="rgb(219,51,40)" rx="2" ry="2" />
<text  x="781.76" y="271.5" ></text>
</g>
<g >
<title>runtime.lfstackUnpack (17 samples, 0.03%)</title><rect x="1035.1" y="309" width="0.4" height="15.0" fill="rgb(247,38,0)" rx="2" ry="2" />
<text  x="1038.15" y="319.5" ></text>
</g>
<g >
<title>runtime.findObject (10 samples, 0.02%)</title><rect x="245.0" y="117" width="0.1" height="15.0" fill="rgb(229,86,11)" rx="2" ry="2" />
<text  x="247.96" y="127.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (235 samples, 0.36%)</title><rect x="777.9" y="277" width="4.2" height="15.0" fill="rgb(213,28,30)" rx="2" ry="2" />
<text  x="780.91" y="287.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrierDX (9 samples, 0.01%)</title><rect x="268.6" y="293" width="0.2" height="15.0" fill="rgb(235,2,23)" rx="2" ry="2" />
<text  x="271.60" y="303.5" ></text>
</g>
<g >
<title>runtime.memmove (78 samples, 0.12%)</title><rect x="349.4" y="293" width="1.4" height="15.0" fill="rgb(249,38,2)" rx="2" ry="2" />
<text  x="352.43" y="303.5" ></text>
</g>
<g >
<title>sync.(*entry).load (14 samples, 0.02%)</title><rect x="867.4" y="261" width="0.2" height="15.0" fill="rgb(243,100,9)" rx="2" ry="2" />
<text  x="870.37" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (206 samples, 0.31%)</title><rect x="242.5" y="213" width="3.7" height="15.0" fill="rgb(253,202,54)" rx="2" ry="2" />
<text  x="245.51" y="223.5" ></text>
</g>
<g >
<title>runtime.greyobject (6 samples, 0.01%)</title><rect x="879.5" y="149" width="0.1" height="15.0" fill="rgb(230,68,46)" rx="2" ry="2" />
<text  x="882.50" y="159.5" ></text>
</g>
<g >
<title>runtime.putempty (35 samples, 0.05%)</title><rect x="1053.7" y="277" width="0.6" height="15.0" fill="rgb(233,0,8)" rx="2" ry="2" />
<text  x="1056.69" y="287.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (102 samples, 0.16%)</title><rect x="820.9" y="261" width="1.8" height="15.0" fill="rgb(231,66,13)" rx="2" ry="2" />
<text  x="823.85" y="271.5" ></text>
</g>
<g >
<title>github.com/rpcxio/rpcx-benchmark/proto.sovBenchmark (59 samples, 0.09%)</title><rect x="402.7" y="261" width="1.1" height="15.0" fill="rgb(245,141,43)" rx="2" ry="2" />
<text  x="405.74" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (14 samples, 0.02%)</title><rect x="101.9" y="229" width="0.2" height="15.0" fill="rgb(205,83,48)" rx="2" ry="2" />
<text  x="104.88" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (149 samples, 0.23%)</title><rect x="1021.8" y="309" width="2.6" height="15.0" fill="rgb(216,195,46)" rx="2" ry="2" />
<text  x="1024.77" y="319.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (6 samples, 0.01%)</title><rect x="360.2" y="229" width="0.1" height="15.0" fill="rgb(212,185,23)" rx="2" ry="2" />
<text  x="363.22" y="239.5" ></text>
</g>
<g >
<title>runtime.casgstatus (13 samples, 0.02%)</title><rect x="311.8" y="293" width="0.2" height="15.0" fill="rgb(223,148,36)" rx="2" ry="2" />
<text  x="314.79" y="303.5" ></text>
</g>
<g >
<title>runtime.gentraceback (18 samples, 0.03%)</title><rect x="246.8" y="133" width="0.3" height="15.0" fill="rgb(214,139,41)" rx="2" ry="2" />
<text  x="249.79" y="143.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (8 samples, 0.01%)</title><rect x="1160.9" y="325" width="0.1" height="15.0" fill="rgb(233,7,12)" rx="2" ry="2" />
<text  x="1163.87" y="335.5" ></text>
</g>
<g >
<title>gosave_systemstack_switch (6 samples, 0.01%)</title><rect x="1189.9" y="373" width="0.1" height="15.0" fill="rgb(238,173,23)" rx="2" ry="2" />
<text  x="1192.87" y="383.5" ></text>
</g>
<g >
<title>runtime.greyobject (8 samples, 0.01%)</title><rect x="1053.2" y="213" width="0.1" height="15.0" fill="rgb(219,22,15)" rx="2" ry="2" />
<text  x="1056.20" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (8 samples, 0.01%)</title><rect x="255.8" y="181" width="0.1" height="15.0" fill="rgb(211,103,40)" rx="2" ry="2" />
<text  x="258.80" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (55 samples, 0.08%)</title><rect x="302.1" y="245" width="1.0" height="15.0" fill="rgb(209,116,11)" rx="2" ry="2" />
<text  x="305.08" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (15 samples, 0.02%)</title><rect x="277.4" y="261" width="0.3" height="15.0" fill="rgb(237,81,49)" rx="2" ry="2" />
<text  x="280.39" y="271.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (11 samples, 0.02%)</title><rect x="246.6" y="213" width="0.2" height="15.0" fill="rgb(250,87,25)" rx="2" ry="2" />
<text  x="249.59" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (10 samples, 0.02%)</title><rect x="277.7" y="245" width="0.1" height="15.0" fill="rgb(247,155,27)" rx="2" ry="2" />
<text  x="280.66" y="255.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popTail (761 samples, 1.16%)</title><rect x="944.1" y="277" width="13.7" height="15.0" fill="rgb(254,151,38)" rx="2" ry="2" />
<text  x="947.11" y="287.5" ></text>
</g>
<g >
<title>runtime.lock2 (70 samples, 0.11%)</title><rect x="708.3" y="181" width="1.3" height="15.0" fill="rgb(221,163,15)" rx="2" ry="2" />
<text  x="711.34" y="191.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).putPtr (77 samples, 0.12%)</title><rect x="1051.5" y="213" width="1.3" height="15.0" fill="rgb(239,82,29)" rx="2" ry="2" />
<text  x="1054.46" y="223.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (10 samples, 0.02%)</title><rect x="779.5" y="197" width="0.2" height="15.0" fill="rgb(227,176,54)" rx="2" ry="2" />
<text  x="782.53" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (105 samples, 0.16%)</title><rect x="117.8" y="261" width="1.8" height="15.0" fill="rgb(221,40,35)" rx="2" ry="2" />
<text  x="120.76" y="271.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (190 samples, 0.29%)</title><rect x="712.6" y="181" width="3.5" height="15.0" fill="rgb(254,153,17)" rx="2" ry="2" />
<text  x="715.64" y="191.5" ></text>
</g>
<g >
<title>runtime.scanobject (55 samples, 0.08%)</title><rect x="124.2" y="197" width="1.0" height="15.0" fill="rgb(245,89,19)" rx="2" ry="2" />
<text  x="127.22" y="207.5" ></text>
</g>
<g >
<title>gogo (8 samples, 0.01%)</title><rect x="988.8" y="389" width="0.2" height="15.0" fill="rgb(247,217,37)" rx="2" ry="2" />
<text  x="991.83" y="399.5" ></text>
</g>
<g >
<title>memeqbody (11 samples, 0.02%)</title><rect x="281.0" y="293" width="0.2" height="15.0" fill="rgb(230,74,0)" rx="2" ry="2" />
<text  x="284.04" y="303.5" ></text>
</g>
<g >
<title>reflect.(*funcType).out (10 samples, 0.02%)</title><rect x="854.1" y="277" width="0.2" height="15.0" fill="rgb(231,130,30)" rx="2" ry="2" />
<text  x="857.12" y="287.5" ></text>
</g>
<g >
<title>runtime.osyield (14 samples, 0.02%)</title><rect x="82.6" y="261" width="0.3" height="15.0" fill="rgb(211,185,47)" rx="2" ry="2" />
<text  x="85.61" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (202 samples, 0.31%)</title><rect x="292.7" y="309" width="3.6" height="15.0" fill="rgb(219,9,51)" rx="2" ry="2" />
<text  x="295.70" y="319.5" ></text>
</g>
<g >
<title>syscall.read (3,161 samples, 4.82%)</title><rect x="14.8" y="309" width="56.8" height="15.0" fill="rgb(221,71,45)" rx="2" ry="2" />
<text  x="17.78" y="319.5" >syscal..</text>
</g>
<g >
<title>github.com/lesismal/nbio.(*poller).readWriteLoop (17,311 samples, 26.38%)</title><rect x="11.1" y="373" width="311.3" height="15.0" fill="rgb(210,203,52)" rx="2" ry="2" />
<text  x="14.10" y="383.5" >github.com/lesismal/nbio.(*poller).readWr..</text>
</g>
<g >
<title>sync.(*Mutex).lockSlow (32 samples, 0.05%)</title><rect x="962.3" y="261" width="0.6" height="15.0" fill="rgb(214,179,47)" rx="2" ry="2" />
<text  x="965.31" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (9 samples, 0.01%)</title><rect x="732.6" y="101" width="0.2" height="15.0" fill="rgb(249,66,48)" rx="2" ry="2" />
<text  x="735.60" y="111.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (24 samples, 0.04%)</title><rect x="780.6" y="229" width="0.4" height="15.0" fill="rgb(254,37,48)" rx="2" ry="2" />
<text  x="783.56" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (18 samples, 0.03%)</title><rect x="150.6" y="149" width="0.3" height="15.0" fill="rgb(248,92,49)" rx="2" ry="2" />
<text  x="153.59" y="159.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrierCX (6 samples, 0.01%)</title><rect x="254.1" y="261" width="0.2" height="15.0" fill="rgb(233,69,10)" rx="2" ry="2" />
<text  x="257.15" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (12 samples, 0.02%)</title><rect x="820.4" y="229" width="0.2" height="15.0" fill="rgb(216,196,4)" rx="2" ry="2" />
<text  x="823.37" y="239.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Size (30 samples, 0.05%)</title><rect x="857.0" y="277" width="0.5" height="15.0" fill="rgb(228,77,19)" rx="2" ry="2" />
<text  x="859.96" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (6 samples, 0.01%)</title><rect x="887.9" y="245" width="0.1" height="15.0" fill="rgb(239,216,54)" rx="2" ry="2" />
<text  x="890.88" y="255.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (9 samples, 0.01%)</title><rect x="296.2" y="293" width="0.1" height="15.0" fill="rgb(218,218,30)" rx="2" ry="2" />
<text  x="299.17" y="303.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common/msgparser.(*LMessageParser).ResetScan (11 samples, 0.02%)</title><rect x="129.5" y="325" width="0.2" height="15.0" fill="rgb(240,121,30)" rx="2" ry="2" />
<text  x="132.50" y="335.5" ></text>
</g>
<g >
<title>runtime.casgstatus (10 samples, 0.02%)</title><rect x="979.1" y="261" width="0.2" height="15.0" fill="rgb(212,23,52)" rx="2" ry="2" />
<text  x="982.08" y="271.5" ></text>
</g>
<g >
<title>runtime.gentraceback (13 samples, 0.02%)</title><rect x="123.9" y="149" width="0.2" height="15.0" fill="rgb(251,113,29)" rx="2" ry="2" />
<text  x="126.91" y="159.5" ></text>
</g>
<g >
<title>runtime.growslice (101 samples, 0.15%)</title><rect x="347.6" y="293" width="1.8" height="15.0" fill="rgb(218,9,47)" rx="2" ry="2" />
<text  x="350.61" y="303.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (11 samples, 0.02%)</title><rect x="123.4" y="197" width="0.2" height="15.0" fill="rgb(234,54,31)" rx="2" ry="2" />
<text  x="126.42" y="207.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (8 samples, 0.01%)</title><rect x="348.3" y="213" width="0.2" height="15.0" fill="rgb(227,49,15)" rx="2" ry="2" />
<text  x="351.31" y="223.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocker).tryAcquire (7 samples, 0.01%)</title><rect x="241.0" y="165" width="0.1" height="15.0" fill="rgb(254,58,29)" rx="2" ry="2" />
<text  x="244.00" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (12 samples, 0.02%)</title><rect x="270.6" y="229" width="0.2" height="15.0" fill="rgb(242,37,25)" rx="2" ry="2" />
<text  x="273.56" y="239.5" ></text>
</g>
<g >
<title>runtime.getStackMap (9 samples, 0.01%)</title><rect x="877.8" y="69" width="0.2" height="15.0" fill="rgb(238,213,31)" rx="2" ry="2" />
<text  x="880.83" y="79.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (6 samples, 0.01%)</title><rect x="123.6" y="197" width="0.1" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="126.62" y="207.5" ></text>
</g>
<g >
<title>sync.runtime_Semrelease (679 samples, 1.03%)</title><rect x="707.7" y="213" width="12.2" height="15.0" fill="rgb(216,57,30)" rx="2" ry="2" />
<text  x="710.70" y="223.5" ></text>
</g>
<g >
<title>runtime.procyield (152 samples, 0.23%)</title><rect x="89.8" y="261" width="2.7" height="15.0" fill="rgb(253,216,33)" rx="2" ry="2" />
<text  x="92.78" y="271.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (14 samples, 0.02%)</title><rect x="282.2" y="213" width="0.3" height="15.0" fill="rgb(229,59,20)" rx="2" ry="2" />
<text  x="285.21" y="223.5" ></text>
</g>
<g >
<title>runtime.(*activeSweep).begin (6 samples, 0.01%)</title><rect x="146.4" y="197" width="0.1" height="15.0" fill="rgb(226,29,52)" rx="2" ry="2" />
<text  x="149.44" y="207.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common/msgparser.GetMessageHandler (25 samples, 0.04%)</title><rect x="129.7" y="325" width="0.4" height="15.0" fill="rgb(245,69,18)" rx="2" ry="2" />
<text  x="132.70" y="335.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*Server).setErrResult (539 samples, 0.82%)</title><rect x="823.2" y="309" width="9.7" height="15.0" fill="rgb(226,68,17)" rx="2" ry="2" />
<text  x="826.24" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (9 samples, 0.01%)</title><rect x="887.9" y="261" width="0.1" height="15.0" fill="rgb(244,95,31)" rx="2" ry="2" />
<text  x="890.87" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1,677 samples, 2.56%)</title><rect x="886.5" y="293" width="30.2" height="15.0" fill="rgb(224,98,40)" rx="2" ry="2" />
<text  x="889.54" y="303.5" >ru..</text>
</g>
<g >
<title>runtime.casgstatus (35 samples, 0.05%)</title><rect x="453.6" y="149" width="0.6" height="15.0" fill="rgb(243,225,24)" rx="2" ry="2" />
<text  x="456.55" y="159.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (13 samples, 0.02%)</title><rect x="310.0" y="309" width="0.2" height="15.0" fill="rgb(252,74,23)" rx="2" ry="2" />
<text  x="312.98" y="319.5" ></text>
</g>
<g >
<title>runtime.getempty (14 samples, 0.02%)</title><rect x="1052.5" y="197" width="0.2" height="15.0" fill="rgb(244,142,32)" rx="2" ry="2" />
<text  x="1055.46" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (78 samples, 0.12%)</title><rect x="218.7" y="149" width="1.4" height="15.0" fill="rgb(217,70,24)" rx="2" ry="2" />
<text  x="221.72" y="159.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (9 samples, 0.01%)</title><rect x="356.5" y="213" width="0.2" height="15.0" fill="rgb(247,130,52)" rx="2" ry="2" />
<text  x="359.55" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (41 samples, 0.06%)</title><rect x="118.8" y="229" width="0.8" height="15.0" fill="rgb(243,66,29)" rx="2" ry="2" />
<text  x="121.82" y="239.5" ></text>
</g>
<g >
<title>runtime.futex (32 samples, 0.05%)</title><rect x="87.7" y="245" width="0.5" height="15.0" fill="rgb(231,68,29)" rx="2" ry="2" />
<text  x="90.66" y="255.5" ></text>
</g>
<g >
<title>reflect.intFromReg (20 samples, 0.03%)</title><rect x="867.7" y="277" width="0.3" height="15.0" fill="rgb(217,181,42)" rx="2" ry="2" />
<text  x="870.67" y="287.5" ></text>
</g>
<g >
<title>runtime.lock2 (8 samples, 0.01%)</title><rect x="16.4" y="213" width="0.1" height="15.0" fill="rgb(218,170,11)" rx="2" ry="2" />
<text  x="19.40" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (7 samples, 0.01%)</title><rect x="243.4" y="117" width="0.2" height="15.0" fill="rgb(234,119,25)" rx="2" ry="2" />
<text  x="246.45" y="127.5" ></text>
</g>
<g >
<title>runtime.preemptM (6 samples, 0.01%)</title><rect x="1000.0" y="293" width="0.1" height="15.0" fill="rgb(250,126,54)" rx="2" ry="2" />
<text  x="1003.00" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (70 samples, 0.11%)</title><rect x="238.7" y="133" width="1.3" height="15.0" fill="rgb(205,210,44)" rx="2" ry="2" />
<text  x="241.74" y="143.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*Server).onMessage (12,335 samples, 18.80%)</title><rect x="75.4" y="341" width="221.8" height="15.0" fill="rgb(206,81,25)" rx="2" ry="2" />
<text  x="78.41" y="351.5" >github.com/nyan233/littlerpc/..</text>
</g>
<g >
<title>runtime.gcStart (6 samples, 0.01%)</title><rect x="246.2" y="213" width="0.1" height="15.0" fill="rgb(247,146,11)" rx="2" ry="2" />
<text  x="249.22" y="223.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (43 samples, 0.07%)</title><rect x="251.1" y="229" width="0.8" height="15.0" fill="rgb(231,107,29)" rx="2" ry="2" />
<text  x="254.12" y="239.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (44 samples, 0.07%)</title><rect x="1049.6" y="213" width="0.8" height="15.0" fill="rgb(240,172,46)" rx="2" ry="2" />
<text  x="1052.60" y="223.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (18 samples, 0.03%)</title><rect x="1163.7" y="325" width="0.4" height="15.0" fill="rgb(209,222,30)" rx="2" ry="2" />
<text  x="1166.73" y="335.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (121 samples, 0.18%)</title><rect x="160.9" y="245" width="2.2" height="15.0" fill="rgb(232,17,28)" rx="2" ry="2" />
<text  x="163.91" y="255.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (13 samples, 0.02%)</title><rect x="820.6" y="245" width="0.3" height="15.0" fill="rgb(227,197,10)" rx="2" ry="2" />
<text  x="823.62" y="255.5" ></text>
</g>
<g >
<title>sync.(*Mutex).lockSlow (49 samples, 0.07%)</title><rect x="778.9" y="229" width="0.9" height="15.0" fill="rgb(212,164,16)" rx="2" ry="2" />
<text  x="781.90" y="239.5" ></text>
</g>
<g >
<title>runtime.makeslice (394 samples, 0.60%)</title><rect x="923.6" y="277" width="7.0" height="15.0" fill="rgb(251,184,29)" rx="2" ry="2" />
<text  x="926.56" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (15 samples, 0.02%)</title><rect x="932.9" y="229" width="0.3" height="15.0" fill="rgb(207,118,3)" rx="2" ry="2" />
<text  x="935.93" y="239.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (18 samples, 0.03%)</title><rect x="877.5" y="53" width="0.3" height="15.0" fill="rgb(252,133,47)" rx="2" ry="2" />
<text  x="880.46" y="63.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (55 samples, 0.08%)</title><rect x="302.1" y="261" width="1.0" height="15.0" fill="rgb(210,176,0)" rx="2" ry="2" />
<text  x="305.08" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (13 samples, 0.02%)</title><rect x="264.7" y="245" width="0.2" height="15.0" fill="rgb(221,36,18)" rx="2" ry="2" />
<text  x="267.70" y="255.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (50 samples, 0.08%)</title><rect x="778.9" y="245" width="0.9" height="15.0" fill="rgb(243,183,13)" rx="2" ry="2" />
<text  x="781.88" y="255.5" ></text>
</g>
<g >
<title>reflect.valueInterface (106 samples, 0.16%)</title><rect x="830.9" y="277" width="1.9" height="15.0" fill="rgb(250,108,48)" rx="2" ry="2" />
<text  x="833.92" y="287.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (361 samples, 0.55%)</title><rect x="1141.2" y="357" width="6.5" height="15.0" fill="rgb(234,130,49)" rx="2" ry="2" />
<text  x="1144.22" y="367.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (24 samples, 0.04%)</title><rect x="17.5" y="261" width="0.4" height="15.0" fill="rgb(227,106,16)" rx="2" ry="2" />
<text  x="20.46" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (13 samples, 0.02%)</title><rect x="349.2" y="277" width="0.2" height="15.0" fill="rgb(221,109,34)" rx="2" ry="2" />
<text  x="352.16" y="287.5" ></text>
</g>
<g >
<title>runtime.typehash (39 samples, 0.06%)</title><rect x="866.6" y="213" width="0.7" height="15.0" fill="rgb(226,88,4)" rx="2" ry="2" />
<text  x="869.56" y="223.5" ></text>
</g>
<g >
<title>sync.runtime_SemacquireMutex (22 samples, 0.03%)</title><rect x="810.6" y="229" width="0.4" height="15.0" fill="rgb(215,188,40)" rx="2" ry="2" />
<text  x="813.58" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (11 samples, 0.02%)</title><rect x="122.6" y="261" width="0.2" height="15.0" fill="rgb(214,102,50)" rx="2" ry="2" />
<text  x="125.63" y="271.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (15 samples, 0.02%)</title><rect x="240.7" y="165" width="0.3" height="15.0" fill="rgb(236,104,24)" rx="2" ry="2" />
<text  x="243.73" y="175.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*pluginManager).OnComplete (155 samples, 0.24%)</title><rect x="724.4" y="277" width="2.8" height="15.0" fill="rgb(249,228,21)" rx="2" ry="2" />
<text  x="727.44" y="287.5" ></text>
</g>
<g >
<title>runtime.futex (29 samples, 0.04%)</title><rect x="1144.1" y="309" width="0.5" height="15.0" fill="rgb(212,175,16)" rx="2" ry="2" />
<text  x="1147.08" y="319.5" ></text>
</g>
<g >
<title>runtime.memmove (85 samples, 0.13%)</title><rect x="127.8" y="309" width="1.6" height="15.0" fill="rgb(235,120,33)" rx="2" ry="2" />
<text  x="130.83" y="319.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (29 samples, 0.04%)</title><rect x="884.5" y="261" width="0.6" height="15.0" fill="rgb(208,145,37)" rx="2" ry="2" />
<text  x="887.54" y="271.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (599 samples, 0.91%)</title><rect x="311.6" y="341" width="10.8" height="15.0" fill="rgb(240,37,38)" rx="2" ry="2" />
<text  x="314.59" y="351.5" ></text>
</g>
<g >
<title>runtime.handoff (20 samples, 0.03%)</title><rect x="925.6" y="149" width="0.3" height="15.0" fill="rgb(253,26,11)" rx="2" ry="2" />
<text  x="928.55" y="159.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (2,484 samples, 3.79%)</title><rect x="920.3" y="309" width="44.7" height="15.0" fill="rgb(231,68,6)" rx="2" ry="2" />
<text  x="923.30" y="319.5" >sync..</text>
</g>
<g >
<title>runtime.heapBitsSetType (6 samples, 0.01%)</title><rect x="360.3" y="229" width="0.1" height="15.0" fill="rgb(213,105,3)" rx="2" ry="2" />
<text  x="363.32" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (18 samples, 0.03%)</title><rect x="931.6" y="261" width="0.3" height="15.0" fill="rgb(215,149,10)" rx="2" ry="2" />
<text  x="934.60" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gQueue).pop (17 samples, 0.03%)</title><rect x="1137.7" y="309" width="0.3" height="15.0" fill="rgb(210,119,44)" rx="2" ry="2" />
<text  x="1140.71" y="319.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (7 samples, 0.01%)</title><rect x="290.1" y="277" width="0.1" height="15.0" fill="rgb(230,166,15)" rx="2" ry="2" />
<text  x="293.09" y="287.5" ></text>
</g>
<g >
<title>sync.(*Pool).pinSlow (85 samples, 0.13%)</title><rect x="962.9" y="277" width="1.5" height="15.0" fill="rgb(249,81,14)" rx="2" ry="2" />
<text  x="965.88" y="287.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (33 samples, 0.05%)</title><rect x="978.9" y="293" width="0.6" height="15.0" fill="rgb(237,119,13)" rx="2" ry="2" />
<text  x="981.90" y="303.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (32 samples, 0.05%)</title><rect x="310.9" y="245" width="0.6" height="15.0" fill="rgb(244,215,42)" rx="2" ry="2" />
<text  x="313.88" y="255.5" ></text>
</g>
<g >
<title>internal/abi.(*IntArgRegBitmap).Get (86 samples, 0.13%)</title><rect x="848.9" y="261" width="1.6" height="15.0" fill="rgb(217,13,43)" rx="2" ry="2" />
<text  x="851.92" y="271.5" ></text>
</g>
<g >
<title>runtime.scanobject (37 samples, 0.06%)</title><rect x="219.4" y="133" width="0.7" height="15.0" fill="rgb(229,192,8)" rx="2" ry="2" />
<text  x="222.44" y="143.5" ></text>
</g>
<g >
<title>runtime.execute (203 samples, 0.31%)</title><rect x="1133.3" y="325" width="3.7" height="15.0" fill="rgb(246,134,3)" rx="2" ry="2" />
<text  x="1136.31" y="335.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (46 samples, 0.07%)</title><rect x="294.1" y="261" width="0.8" height="15.0" fill="rgb(209,98,45)" rx="2" ry="2" />
<text  x="297.12" y="271.5" ></text>
</g>
<g >
<title>sync/atomic.StorePointer (29 samples, 0.04%)</title><rect x="822.7" y="261" width="0.5" height="15.0" fill="rgb(215,187,19)" rx="2" ry="2" />
<text  x="825.72" y="271.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1,693 samples, 2.58%)</title><rect x="675.3" y="245" width="30.5" height="15.0" fill="rgb(245,18,50)" rx="2" ry="2" />
<text  x="678.35" y="255.5" >sy..</text>
</g>
<g >
<title>runtime.heapBitsForAddr (18 samples, 0.03%)</title><rect x="289.3" y="277" width="0.3" height="15.0" fill="rgb(206,220,43)" rx="2" ry="2" />
<text  x="292.26" y="287.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (22 samples, 0.03%)</title><rect x="728.0" y="245" width="0.4" height="15.0" fill="rgb(217,113,25)" rx="2" ry="2" />
<text  x="730.98" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (17 samples, 0.03%)</title><rect x="924.3" y="229" width="0.3" height="15.0" fill="rgb(251,128,42)" rx="2" ry="2" />
<text  x="927.33" y="239.5" ></text>
</g>
<g >
<title>runtime.typehash (21 samples, 0.03%)</title><rect x="131.3" y="277" width="0.3" height="15.0" fill="rgb(233,45,13)" rx="2" ry="2" />
<text  x="134.26" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1,069 samples, 1.63%)</title><rect x="228.0" y="229" width="19.2" height="15.0" fill="rgb(254,196,14)" rx="2" ry="2" />
<text  x="230.98" y="239.5" ></text>
</g>
<g >
<title>reflect.packEface (6 samples, 0.01%)</title><rect x="886.0" y="277" width="0.1" height="15.0" fill="rgb(227,199,34)" rx="2" ry="2" />
<text  x="889.01" y="287.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (6 samples, 0.01%)</title><rect x="785.4" y="181" width="0.1" height="15.0" fill="rgb(245,14,44)" rx="2" ry="2" />
<text  x="788.43" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (18 samples, 0.03%)</title><rect x="255.7" y="213" width="0.4" height="15.0" fill="rgb(223,163,37)" rx="2" ry="2" />
<text  x="258.75" y="223.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (13 samples, 0.02%)</title><rect x="243.6" y="101" width="0.2" height="15.0" fill="rgb(224,69,19)" rx="2" ry="2" />
<text  x="246.57" y="111.5" ></text>
</g>
<g >
<title>runtime.unspillArgs (14 samples, 0.02%)</title><rect x="885.5" y="277" width="0.2" height="15.0" fill="rgb(236,98,54)" rx="2" ry="2" />
<text  x="888.49" y="287.5" ></text>
</g>
<g >
<title>runtime.checkTimers (44 samples, 0.07%)</title><rect x="1169.3" y="309" width="0.8" height="15.0" fill="rgb(214,43,31)" rx="2" ry="2" />
<text  x="1172.27" y="319.5" ></text>
</g>
<g >
<title>reflect.(*rtype).NumIn (82 samples, 0.12%)</title><rect x="266.1" y="293" width="1.5" height="15.0" fill="rgb(219,10,13)" rx="2" ry="2" />
<text  x="269.14" y="303.5" ></text>
</g>
<g >
<title>runtime.preemptM (6 samples, 0.01%)</title><rect x="243.5" y="101" width="0.1" height="15.0" fill="rgb(236,94,44)" rx="2" ry="2" />
<text  x="246.46" y="111.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (678 samples, 1.03%)</title><rect x="83.3" y="309" width="12.2" height="15.0" fill="rgb(241,38,24)" rx="2" ry="2" />
<text  x="86.27" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (328 samples, 0.50%)</title><rect x="269.8" y="277" width="5.9" height="15.0" fill="rgb(217,51,50)" rx="2" ry="2" />
<text  x="272.75" y="287.5" ></text>
</g>
<g >
<title>runtime.scanobject (7 samples, 0.01%)</title><rect x="256.2" y="149" width="0.1" height="15.0" fill="rgb(246,52,1)" rx="2" ry="2" />
<text  x="259.21" y="159.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (199 samples, 0.30%)</title><rect x="924.8" y="181" width="3.6" height="15.0" fill="rgb(220,177,37)" rx="2" ry="2" />
<text  x="927.80" y="191.5" ></text>
</g>
<g >
<title>runtime.entersyscall (202 samples, 0.31%)</title><rect x="448.0" y="165" width="3.6" height="15.0" fill="rgb(236,48,47)" rx="2" ry="2" />
<text  x="451.02" y="175.5" ></text>
</g>
<g >
<title>runtime.putempty (79 samples, 0.12%)</title><rect x="1035.5" y="309" width="1.4" height="15.0" fill="rgb(245,112,18)" rx="2" ry="2" />
<text  x="1038.45" y="319.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (581 samples, 0.89%)</title><rect x="100.8" y="293" width="10.5" height="15.0" fill="rgb(240,160,22)" rx="2" ry="2" />
<text  x="103.80" y="303.5" ></text>
</g>
<g >
<title>github.com/lesismal/nbio.(*Conn).readAndGetConn (3,226 samples, 4.92%)</title><rect x="13.7" y="357" width="58.0" height="15.0" fill="rgb(240,42,44)" rx="2" ry="2" />
<text  x="16.65" y="367.5" >github..</text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (46 samples, 0.07%)</title><rect x="294.1" y="245" width="0.8" height="15.0" fill="rgb(225,173,42)" rx="2" ry="2" />
<text  x="297.12" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (59 samples, 0.09%)</title><rect x="963.0" y="245" width="1.1" height="15.0" fill="rgb(248,229,22)" rx="2" ry="2" />
<text  x="965.99" y="255.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (14 samples, 0.02%)</title><rect x="930.4" y="261" width="0.2" height="15.0" fill="rgb(228,190,35)" rx="2" ry="2" />
<text  x="933.37" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).update (6 samples, 0.01%)</title><rect x="405.2" y="197" width="0.1" height="15.0" fill="rgb(222,121,49)" rx="2" ry="2" />
<text  x="408.24" y="207.5" ></text>
</g>
<g >
<title>runtime.findObject (8 samples, 0.01%)</title><rect x="151.6" y="133" width="0.2" height="15.0" fill="rgb(214,143,40)" rx="2" ry="2" />
<text  x="154.62" y="143.5" ></text>
</g>
<g >
<title>syscall.Read (3,161 samples, 4.82%)</title><rect x="14.8" y="325" width="56.8" height="15.0" fill="rgb(211,66,13)" rx="2" ry="2" />
<text  x="17.78" y="335.5" >syscal..</text>
</g>
<g >
<title>runtime.memmove (72 samples, 0.11%)</title><rect x="423.4" y="261" width="1.3" height="15.0" fill="rgb(247,165,0)" rx="2" ry="2" />
<text  x="426.40" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (51 samples, 0.08%)</title><rect x="733.7" y="213" width="0.9" height="15.0" fill="rgb(212,187,20)" rx="2" ry="2" />
<text  x="736.70" y="223.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (6 samples, 0.01%)</title><rect x="874.8" y="245" width="0.1" height="15.0" fill="rgb(241,90,50)" rx="2" ry="2" />
<text  x="877.83" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (81 samples, 0.12%)</title><rect x="218.7" y="181" width="1.4" height="15.0" fill="rgb(231,165,2)" rx="2" ry="2" />
<text  x="221.67" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (6 samples, 0.01%)</title><rect x="933.0" y="213" width="0.1" height="15.0" fill="rgb(226,158,37)" rx="2" ry="2" />
<text  x="935.96" y="223.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).addObject (22 samples, 0.03%)</title><rect x="877.4" y="69" width="0.4" height="15.0" fill="rgb(217,145,43)" rx="2" ry="2" />
<text  x="880.44" y="79.5" ></text>
</g>
<g >
<title>sync.(*Mutex).unlockSlow (18 samples, 0.03%)</title><rect x="964.1" y="245" width="0.3" height="15.0" fill="rgb(245,50,20)" rx="2" ry="2" />
<text  x="967.07" y="255.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (12 samples, 0.02%)</title><rect x="296.0" y="293" width="0.2" height="15.0" fill="rgb(243,25,30)" rx="2" ry="2" />
<text  x="298.95" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (91 samples, 0.14%)</title><rect x="731.3" y="181" width="1.7" height="15.0" fill="rgb(235,7,39)" rx="2" ry="2" />
<text  x="734.32" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (78 samples, 0.12%)</title><rect x="358.5" y="245" width="1.4" height="15.0" fill="rgb(211,186,0)" rx="2" ry="2" />
<text  x="361.47" y="255.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (10 samples, 0.02%)</title><rect x="885.9" y="309" width="0.2" height="15.0" fill="rgb(224,76,40)" rx="2" ry="2" />
<text  x="888.94" y="319.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (11 samples, 0.02%)</title><rect x="407.1" y="149" width="0.2" height="15.0" fill="rgb(219,152,34)" rx="2" ry="2" />
<text  x="410.11" y="159.5" ></text>
</g>
<g >
<title>runtime.checkTimers (11 samples, 0.02%)</title><rect x="1163.1" y="325" width="0.2" height="15.0" fill="rgb(246,184,24)" rx="2" ry="2" />
<text  x="1166.14" y="335.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*pluginManager).OnMessage (187 samples, 0.28%)</title><rect x="284.3" y="309" width="3.4" height="15.0" fill="rgb(247,218,53)" rx="2" ry="2" />
<text  x="287.30" y="319.5" ></text>
</g>
<g >
<title>runtime.futex (19 samples, 0.03%)</title><rect x="1187.1" y="293" width="0.3" height="15.0" fill="rgb(253,194,30)" rx="2" ry="2" />
<text  x="1190.09" y="303.5" ></text>
</g>
<g >
<title>runtime.unlock2 (27 samples, 0.04%)</title><rect x="979.6" y="293" width="0.4" height="15.0" fill="rgb(218,86,18)" rx="2" ry="2" />
<text  x="982.55" y="303.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (785 samples, 1.20%)</title><rect x="1110.3" y="309" width="14.1" height="15.0" fill="rgb(232,105,40)" rx="2" ry="2" />
<text  x="1113.33" y="319.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (36 samples, 0.05%)</title><rect x="880.6" y="245" width="0.7" height="15.0" fill="rgb(239,183,15)" rx="2" ry="2" />
<text  x="883.64" y="255.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (72 samples, 0.11%)</title><rect x="15.3" y="261" width="1.3" height="15.0" fill="rgb(210,36,3)" rx="2" ry="2" />
<text  x="18.27" y="271.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (12 samples, 0.02%)</title><rect x="275.9" y="277" width="0.3" height="15.0" fill="rgb(242,227,15)" rx="2" ry="2" />
<text  x="278.94" y="287.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrierCX (6 samples, 0.01%)</title><rect x="268.5" y="293" width="0.1" height="15.0" fill="rgb(224,193,18)" rx="2" ry="2" />
<text  x="271.49" y="303.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (8 samples, 0.01%)</title><rect x="306.7" y="309" width="0.1" height="15.0" fill="rgb(233,2,30)" rx="2" ry="2" />
<text  x="309.70" y="319.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (9 samples, 0.01%)</title><rect x="268.6" y="277" width="0.2" height="15.0" fill="rgb(215,56,10)" rx="2" ry="2" />
<text  x="271.60" y="287.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (6 samples, 0.01%)</title><rect x="964.2" y="197" width="0.1" height="15.0" fill="rgb(246,152,21)" rx="2" ry="2" />
<text  x="967.18" y="207.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (12 samples, 0.02%)</title><rect x="999.9" y="341" width="0.2" height="15.0" fill="rgb(228,61,20)" rx="2" ry="2" />
<text  x="1002.89" y="351.5" ></text>
</g>
<g >
<title>runtime.lock2 (7 samples, 0.01%)</title><rect x="962.5" y="213" width="0.1" height="15.0" fill="rgb(228,30,16)" rx="2" ry="2" />
<text  x="965.45" y="223.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/plugins/metrics.(*CallMetrics).IncCount (6 samples, 0.01%)</title><rect x="284.6" y="293" width="0.1" height="15.0" fill="rgb(249,27,2)" rx="2" ry="2" />
<text  x="287.59" y="303.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (18 samples, 0.03%)</title><rect x="876.1" y="133" width="0.3" height="15.0" fill="rgb(222,219,50)" rx="2" ry="2" />
<text  x="879.09" y="143.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (147 samples, 0.22%)</title><rect x="149.9" y="229" width="2.6" height="15.0" fill="rgb(214,1,14)" rx="2" ry="2" />
<text  x="152.89" y="239.5" ></text>
</g>
<g >
<title>runtime.scanobject (7 samples, 0.01%)</title><rect x="282.3" y="197" width="0.2" height="15.0" fill="rgb(225,179,29)" rx="2" ry="2" />
<text  x="285.34" y="207.5" ></text>
</g>
<g >
<title>runtime.futex (6 samples, 0.01%)</title><rect x="1188.7" y="293" width="0.1" height="15.0" fill="rgb(209,15,54)" rx="2" ry="2" />
<text  x="1191.72" y="303.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (6 samples, 0.01%)</title><rect x="148.9" y="149" width="0.1" height="15.0" fill="rgb(216,221,4)" rx="2" ry="2" />
<text  x="151.87" y="159.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (9 samples, 0.01%)</title><rect x="810.8" y="213" width="0.2" height="15.0" fill="rgb(242,140,52)" rx="2" ry="2" />
<text  x="813.82" y="223.5" ></text>
</g>
<g >
<title>runtime.sellock (103 samples, 0.16%)</title><rect x="980.6" y="341" width="1.9" height="15.0" fill="rgb(235,123,49)" rx="2" ry="2" />
<text  x="983.61" y="351.5" ></text>
</g>
<g >
<title>runtime.memmove (93 samples, 0.14%)</title><rect x="247.2" y="229" width="1.7" height="15.0" fill="rgb(242,193,9)" rx="2" ry="2" />
<text  x="250.20" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (204 samples, 0.31%)</title><rect x="242.5" y="165" width="3.7" height="15.0" fill="rgb(226,120,18)" rx="2" ry="2" />
<text  x="245.55" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (292 samples, 0.44%)</title><rect x="729.6" y="229" width="5.2" height="15.0" fill="rgb(253,15,15)" rx="2" ry="2" />
<text  x="732.60" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (170 samples, 0.26%)</title><rect x="881.3" y="245" width="3.0" height="15.0" fill="rgb(251,88,14)" rx="2" ry="2" />
<text  x="884.29" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (48 samples, 0.07%)</title><rect x="408.4" y="181" width="0.8" height="15.0" fill="rgb(251,173,37)" rx="2" ry="2" />
<text  x="411.35" y="191.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).popTail (94 samples, 0.14%)</title><rect x="106.4" y="245" width="1.7" height="15.0" fill="rgb(224,126,29)" rx="2" ry="2" />
<text  x="109.36" y="255.5" ></text>
</g>
<g >
<title>runtime.pcvalue (7 samples, 0.01%)</title><rect x="410.8" y="117" width="0.2" height="15.0" fill="rgb(219,56,33)" rx="2" ry="2" />
<text  x="413.85" y="127.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..LoadOk (174 samples, 0.27%)</title><rect x="135.0" y="309" width="3.1" height="15.0" fill="rgb(245,113,7)" rx="2" ry="2" />
<text  x="137.97" y="319.5" ></text>
</g>
<g >
<title>runtime.preemptM (141 samples, 0.21%)</title><rect x="1021.9" y="293" width="2.5" height="15.0" fill="rgb(206,115,54)" rx="2" ry="2" />
<text  x="1024.88" y="303.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common.(*SharedPool).TakeBytesPool (249 samples, 0.38%)</title><rect x="340.4" y="309" width="4.5" height="15.0" fill="rgb(238,14,20)" rx="2" ry="2" />
<text  x="343.44" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.01%)</title><rect x="786.3" y="213" width="0.1" height="15.0" fill="rgb(212,108,40)" rx="2" ry="2" />
<text  x="789.29" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (35 samples, 0.05%)</title><rect x="359.9" y="261" width="0.7" height="15.0" fill="rgb(236,27,28)" rx="2" ry="2" />
<text  x="362.93" y="271.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (14 samples, 0.02%)</title><rect x="732.6" y="133" width="0.2" height="15.0" fill="rgb(215,64,3)" rx="2" ry="2" />
<text  x="735.56" y="143.5" ></text>
</g>
<g >
<title>sync.runtime_doSpin (62 samples, 0.09%)</title><rect x="307.8" y="325" width="1.1" height="15.0" fill="rgb(222,180,8)" rx="2" ry="2" />
<text  x="310.80" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (609 samples, 0.93%)</title><rect x="873.6" y="261" width="10.9" height="15.0" fill="rgb(248,204,29)" rx="2" ry="2" />
<text  x="876.59" y="271.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (11 samples, 0.02%)</title><rect x="780.8" y="181" width="0.2" height="15.0" fill="rgb(218,200,5)" rx="2" ry="2" />
<text  x="783.75" y="191.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (112 samples, 0.17%)</title><rect x="355.8" y="277" width="2.0" height="15.0" fill="rgb(217,192,9)" rx="2" ry="2" />
<text  x="358.81" y="287.5" ></text>
</g>
<g >
<title>runtime.resolveTypeOff (43 samples, 0.07%)</title><rect x="144.3" y="229" width="0.8" height="15.0" fill="rgb(217,87,16)" rx="2" ry="2" />
<text  x="147.28" y="239.5" ></text>
</g>
<g >
<title>memeqbody (19 samples, 0.03%)</title><rect x="136.9" y="213" width="0.3" height="15.0" fill="rgb(216,65,28)" rx="2" ry="2" />
<text  x="139.89" y="223.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (45 samples, 0.07%)</title><rect x="359.0" y="229" width="0.8" height="15.0" fill="rgb(217,132,47)" rx="2" ry="2" />
<text  x="361.96" y="239.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (19 samples, 0.03%)</title><rect x="127.5" y="293" width="0.3" height="15.0" fill="rgb(233,4,26)" rx="2" ry="2" />
<text  x="130.49" y="303.5" ></text>
</g>
<g >
<title>runtime.futexsleep (7 samples, 0.01%)</title><rect x="82.5" y="261" width="0.1" height="15.0" fill="rgb(233,136,50)" rx="2" ry="2" />
<text  x="85.48" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (14 samples, 0.02%)</title><rect x="282.2" y="245" width="0.3" height="15.0" fill="rgb(247,197,43)" rx="2" ry="2" />
<text  x="285.21" y="255.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).getPtr (6 samples, 0.01%)</title><rect x="877.2" y="117" width="0.1" height="15.0" fill="rgb(239,182,17)" rx="2" ry="2" />
<text  x="880.17" y="127.5" ></text>
</g>
<g >
<title>runtime.findObject (20 samples, 0.03%)</title><rect x="1052.8" y="213" width="0.4" height="15.0" fill="rgb(209,166,5)" rx="2" ry="2" />
<text  x="1055.84" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (16 samples, 0.02%)</title><rect x="255.8" y="197" width="0.3" height="15.0" fill="rgb(231,153,52)" rx="2" ry="2" />
<text  x="258.76" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (146 samples, 0.22%)</title><rect x="149.9" y="213" width="2.6" height="15.0" fill="rgb(241,31,41)" rx="2" ry="2" />
<text  x="152.91" y="223.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (7 samples, 0.01%)</title><rect x="815.3" y="181" width="0.2" height="15.0" fill="rgb(250,108,29)" rx="2" ry="2" />
<text  x="818.35" y="191.5" ></text>
</g>
<g >
<title>runtime.procyield (58 samples, 0.09%)</title><rect x="307.9" y="309" width="1.0" height="15.0" fill="rgb(221,181,40)" rx="2" ry="2" />
<text  x="310.87" y="319.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common.NewSharedPool.func2 (13 samples, 0.02%)</title><rect x="922.8" y="293" width="0.2" height="15.0" fill="rgb(213,45,0)" rx="2" ry="2" />
<text  x="925.77" y="303.5" ></text>
</g>
<g >
<title>runtime.findObject (20 samples, 0.03%)</title><rect x="879.1" y="149" width="0.4" height="15.0" fill="rgb(244,35,52)" rx="2" ry="2" />
<text  x="882.15" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (12 samples, 0.02%)</title><rect x="348.6" y="229" width="0.2" height="15.0" fill="rgb(230,221,15)" rx="2" ry="2" />
<text  x="351.60" y="239.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Append (151 samples, 0.23%)</title><rect x="422.0" y="277" width="2.7" height="15.0" fill="rgb(215,142,0)" rx="2" ry="2" />
<text  x="424.98" y="287.5" ></text>
</g>
<g >
<title>runtime.ready (19 samples, 0.03%)</title><rect x="311.1" y="229" width="0.4" height="15.0" fill="rgb(218,121,37)" rx="2" ry="2" />
<text  x="314.11" y="239.5" ></text>
</g>
<g >
<title>sync.(*Mutex).unlockSlow (19 samples, 0.03%)</title><rect x="812.3" y="229" width="0.3" height="15.0" fill="rgb(221,206,1)" rx="2" ry="2" />
<text  x="815.29" y="239.5" ></text>
</g>
<g >
<title>runtime.fastrandn (7 samples, 0.01%)</title><rect x="965.7" y="357" width="0.1" height="15.0" fill="rgb(247,175,11)" rx="2" ry="2" />
<text  x="968.67" y="367.5" ></text>
</g>
<g >
<title>runtime.memhash64 (7 samples, 0.01%)</title><rect x="131.5" y="261" width="0.1" height="15.0" fill="rgb(247,114,30)" rx="2" ry="2" />
<text  x="134.52" y="271.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (179 samples, 0.27%)</title><rect x="451.6" y="165" width="3.3" height="15.0" fill="rgb(249,224,4)" rx="2" ry="2" />
<text  x="454.65" y="175.5" ></text>
</g>
<g >
<title>github.com/lesismal/nbio.(*Conn).overflow (9 samples, 0.01%)</title><rect x="446.2" y="229" width="0.1" height="15.0" fill="rgb(233,59,14)" rx="2" ry="2" />
<text  x="449.16" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (10 samples, 0.02%)</title><rect x="819.7" y="229" width="0.2" height="15.0" fill="rgb(243,150,18)" rx="2" ry="2" />
<text  x="822.68" y="239.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (231 samples, 0.35%)</title><rect x="1049.5" y="245" width="4.2" height="15.0" fill="rgb(233,143,51)" rx="2" ry="2" />
<text  x="1052.53" y="255.5" ></text>
</g>
<g >
<title>runtime.findObject (6 samples, 0.01%)</title><rect x="408.9" y="133" width="0.1" height="15.0" fill="rgb(252,120,18)" rx="2" ry="2" />
<text  x="411.89" y="143.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (10 samples, 0.02%)</title><rect x="411.9" y="245" width="0.2" height="15.0" fill="rgb(250,220,28)" rx="2" ry="2" />
<text  x="414.95" y="255.5" ></text>
</g>
<g >
<title>runtime.epollwait (117 samples, 0.18%)</title><rect x="1164.8" y="309" width="2.1" height="15.0" fill="rgb(227,167,32)" rx="2" ry="2" />
<text  x="1167.83" y="319.5" ></text>
</g>
<g >
<title>runtime.publicationBarrier (6 samples, 0.01%)</title><rect x="221.9" y="213" width="0.1" height="15.0" fill="rgb(244,201,25)" rx="2" ry="2" />
<text  x="224.85" y="223.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (6 samples, 0.01%)</title><rect x="296.3" y="309" width="0.1" height="15.0" fill="rgb(217,7,10)" rx="2" ry="2" />
<text  x="299.33" y="319.5" ></text>
</g>
<g >
<title>runtime.heapBits.bits (8 samples, 0.01%)</title><rect x="244.1" y="133" width="0.2" height="15.0" fill="rgb(231,3,43)" rx="2" ry="2" />
<text  x="247.13" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (83 samples, 0.13%)</title><rect x="996.2" y="341" width="1.5" height="15.0" fill="rgb(217,40,18)" rx="2" ry="2" />
<text  x="999.20" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (75 samples, 0.11%)</title><rect x="347.8" y="277" width="1.4" height="15.0" fill="rgb(231,148,3)" rx="2" ry="2" />
<text  x="350.81" y="287.5" ></text>
</g>
<g >
<title>runtime.trygetfull (17 samples, 0.03%)</title><rect x="1036.9" y="309" width="0.3" height="15.0" fill="rgb(233,32,24)" rx="2" ry="2" />
<text  x="1039.87" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (10 samples, 0.02%)</title><rect x="358.7" y="213" width="0.2" height="15.0" fill="rgb(213,37,46)" rx="2" ry="2" />
<text  x="361.72" y="223.5" ></text>
</g>
<g >
<title>runtime.(*consistentHeapStats).acquire (13 samples, 0.02%)</title><rect x="995.1" y="341" width="0.2" height="15.0" fill="rgb(210,37,43)" rx="2" ry="2" />
<text  x="998.10" y="351.5" ></text>
</g>
<g >
<title>runtime.gosched_m (1,333 samples, 2.03%)</title><rect x="1127.5" y="373" width="24.0" height="15.0" fill="rgb(246,57,4)" rx="2" ry="2" />
<text  x="1130.52" y="383.5" >r..</text>
</g>
<g >
<title>runtime.systemstack (1,519 samples, 2.31%)</title><rect x="888.2" y="261" width="27.3" height="15.0" fill="rgb(244,89,43)" rx="2" ry="2" />
<text  x="891.19" y="271.5" >r..</text>
</g>
<g >
<title>runtime.cansemacquire (21 samples, 0.03%)</title><rect x="306.0" y="309" width="0.4" height="15.0" fill="rgb(227,189,54)" rx="2" ry="2" />
<text  x="309.00" y="319.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (21 samples, 0.03%)</title><rect x="271.0" y="261" width="0.4" height="15.0" fill="rgb(232,226,44)" rx="2" ry="2" />
<text  x="273.98" y="271.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (109 samples, 0.17%)</title><rect x="830.9" y="293" width="1.9" height="15.0" fill="rgb(214,210,17)" rx="2" ry="2" />
<text  x="833.87" y="303.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (28 samples, 0.04%)</title><rect x="996.6" y="261" width="0.5" height="15.0" fill="rgb(241,81,47)" rx="2" ry="2" />
<text  x="999.56" y="271.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/internal/pool.(*DynamicTaskPool).start.func1 (37,057 samples, 56.47%)</title><rect x="322.4" y="389" width="666.3" height="15.0" fill="rgb(241,56,9)" rx="2" ry="2" />
<text  x="325.38" y="399.5" >github.com/nyan233/littlerpc/internal/pool.(*DynamicTaskPool).start.func1</text>
</g>
<g >
<title>internal/reflectlite.(*rtype).Comparable (12 samples, 0.02%)</title><rect x="13.3" y="341" width="0.2" height="15.0" fill="rgb(205,92,16)" rx="2" ry="2" />
<text  x="16.33" y="351.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (19 samples, 0.03%)</title><rect x="812.3" y="245" width="0.3" height="15.0" fill="rgb(210,148,42)" rx="2" ry="2" />
<text  x="815.29" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (7 samples, 0.01%)</title><rect x="963.1" y="229" width="0.1" height="15.0" fill="rgb(208,61,33)" rx="2" ry="2" />
<text  x="966.06" y="239.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Next (6 samples, 0.01%)</title><rect x="252.3" y="293" width="0.1" height="15.0" fill="rgb(213,34,19)" rx="2" ry="2" />
<text  x="255.33" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (16 samples, 0.02%)</title><rect x="999.9" y="357" width="0.3" height="15.0" fill="rgb(213,193,50)" rx="2" ry="2" />
<text  x="1002.87" y="367.5" ></text>
</g>
<g >
<title>runtime.tgkill (18 samples, 0.03%)</title><rect x="895.3" y="133" width="0.3" height="15.0" fill="rgb(219,213,10)" rx="2" ry="2" />
<text  x="898.31" y="143.5" ></text>
</g>
<g >
<title>sync.indexLocal (13 samples, 0.02%)</title><rect x="777.6" y="261" width="0.3" height="15.0" fill="rgb(217,79,39)" rx="2" ry="2" />
<text  x="780.64" y="271.5" ></text>
</g>
<g >
<title>runtime.gentraceback (293 samples, 0.45%)</title><rect x="1048.4" y="277" width="5.3" height="15.0" fill="rgb(245,143,24)" rx="2" ry="2" />
<text  x="1051.42" y="287.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (7 samples, 0.01%)</title><rect x="997.3" y="293" width="0.1" height="15.0" fill="rgb(229,172,12)" rx="2" ry="2" />
<text  x="1000.28" y="303.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (196 samples, 0.30%)</title><rect x="242.7" y="149" width="3.5" height="15.0" fill="rgb(228,34,28)" rx="2" ry="2" />
<text  x="245.66" y="159.5" ></text>
</g>
<g >
<title>runtime.greyobject (42 samples, 0.06%)</title><rect x="908.6" y="181" width="0.8" height="15.0" fill="rgb(225,68,18)" rx="2" ry="2" />
<text  x="911.62" y="191.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (17 samples, 0.03%)</title><rect x="1138.1" y="309" width="0.3" height="15.0" fill="rgb(210,199,29)" rx="2" ry="2" />
<text  x="1141.07" y="319.5" ></text>
</g>
<g >
<title>runtime.wakep (21 samples, 0.03%)</title><rect x="1185.0" y="325" width="0.4" height="15.0" fill="rgb(217,13,14)" rx="2" ry="2" />
<text  x="1188.00" y="335.5" ></text>
</g>
<g >
<title>runtime.spanClass.sizeclass (8 samples, 0.01%)</title><rect x="998.8" y="357" width="0.1" height="15.0" fill="rgb(205,190,37)" rx="2" ry="2" />
<text  x="1001.79" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (105 samples, 0.16%)</title><rect x="281.4" y="293" width="1.9" height="15.0" fill="rgb(208,28,3)" rx="2" ry="2" />
<text  x="284.44" y="303.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (201 samples, 0.31%)</title><rect x="911.3" y="181" width="3.6" height="15.0" fill="rgb(240,178,36)" rx="2" ry="2" />
<text  x="914.31" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (12 samples, 0.02%)</title><rect x="242.3" y="197" width="0.2" height="15.0" fill="rgb(210,216,19)" rx="2" ry="2" />
<text  x="245.28" y="207.5" ></text>
</g>
<g >
<title>runtime.procyield (11 samples, 0.02%)</title><rect x="709.4" y="165" width="0.2" height="15.0" fill="rgb(241,211,28)" rx="2" ry="2" />
<text  x="712.41" y="175.5" ></text>
</g>
<g >
<title>runtime.(*activeSweep).begin (12 samples, 0.02%)</title><rect x="991.0" y="373" width="0.3" height="15.0" fill="rgb(238,206,49)" rx="2" ry="2" />
<text  x="994.04" y="383.5" ></text>
</g>
<g >
<title>runtime.signalM (6 samples, 0.01%)</title><rect x="243.5" y="85" width="0.1" height="15.0" fill="rgb(228,108,24)" rx="2" ry="2" />
<text  x="246.46" y="95.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (74 samples, 0.11%)</title><rect x="16.6" y="277" width="1.3" height="15.0" fill="rgb(210,123,2)" rx="2" ry="2" />
<text  x="19.56" y="287.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/internal/pool.(*DynamicTaskPool).Push (882 samples, 1.34%)</title><rect x="79.6" y="325" width="15.9" height="15.0" fill="rgb(235,75,1)" rx="2" ry="2" />
<text  x="82.60" y="335.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (108 samples, 0.16%)</title><rect x="1161.0" y="325" width="2.0" height="15.0" fill="rgb(244,33,33)" rx="2" ry="2" />
<text  x="1164.01" y="335.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Reset (40 samples, 0.06%)</title><rect x="414.8" y="293" width="0.7" height="15.0" fill="rgb(246,31,8)" rx="2" ry="2" />
<text  x="417.77" y="303.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*Server).sendOnMux (19,528 samples, 29.76%)</title><rect x="431.0" y="293" width="351.1" height="15.0" fill="rgb(205,115,22)" rx="2" ry="2" />
<text  x="434.01" y="303.5" >github.com/nyan233/littlerpc/server.(*Server).s..</text>
</g>
<g >
<title>runtime.startm (19 samples, 0.03%)</title><rect x="1185.0" y="309" width="0.4" height="15.0" fill="rgb(233,20,19)" rx="2" ry="2" />
<text  x="1188.04" y="319.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (180 samples, 0.27%)</title><rect x="809.5" y="277" width="3.2" height="15.0" fill="rgb(216,86,30)" rx="2" ry="2" />
<text  x="812.47" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (13 samples, 0.02%)</title><rect x="115.5" y="245" width="0.3" height="15.0" fill="rgb(236,80,22)" rx="2" ry="2" />
<text  x="118.55" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (162 samples, 0.25%)</title><rect x="287.8" y="309" width="2.9" height="15.0" fill="rgb(229,120,38)" rx="2" ry="2" />
<text  x="290.75" y="319.5" ></text>
</g>
<g >
<title>github.com/rpcxio/rpcx-benchmark/littlerpc/codec.ProtoBufCodec.Marshal (2,418 samples, 3.68%)</title><rect x="368.7" y="293" width="43.4" height="15.0" fill="rgb(228,82,53)" rx="2" ry="2" />
<text  x="371.67" y="303.5" >gith..</text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.MarshalMuxBlock (227 samples, 0.35%)</title><rect x="720.4" y="277" width="4.0" height="15.0" fill="rgb(215,35,39)" rx="2" ry="2" />
<text  x="723.36" y="287.5" ></text>
</g>
<g >
<title>runtime.scanobject (12 samples, 0.02%)</title><rect x="735.8" y="133" width="0.3" height="15.0" fill="rgb(250,121,36)" rx="2" ry="2" />
<text  x="738.84" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (13 samples, 0.02%)</title><rect x="733.1" y="181" width="0.2" height="15.0" fill="rgb(213,91,11)" rx="2" ry="2" />
<text  x="736.09" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (47 samples, 0.07%)</title><rect x="408.4" y="165" width="0.8" height="15.0" fill="rgb(244,123,47)" rx="2" ry="2" />
<text  x="411.37" y="175.5" ></text>
</g>
<g >
<title>runtime.newobject (133 samples, 0.20%)</title><rect x="932.1" y="277" width="2.4" height="15.0" fill="rgb(213,173,27)" rx="2" ry="2" />
<text  x="935.08" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (35 samples, 0.05%)</title><rect x="735.4" y="181" width="0.7" height="15.0" fill="rgb(239,120,0)" rx="2" ry="2" />
<text  x="738.44" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (55 samples, 0.08%)</title><rect x="302.1" y="293" width="1.0" height="15.0" fill="rgb(232,216,50)" rx="2" ry="2" />
<text  x="305.08" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (7 samples, 0.01%)</title><rect x="786.3" y="197" width="0.1" height="15.0" fill="rgb(223,196,28)" rx="2" ry="2" />
<text  x="789.29" y="207.5" ></text>
</g>
<g >
<title>runtime.acquirem (13 samples, 0.02%)</title><rect x="310.9" y="229" width="0.2" height="15.0" fill="rgb(223,153,24)" rx="2" ry="2" />
<text  x="313.88" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).objIndex (10 samples, 0.02%)</title><rect x="1083.3" y="309" width="0.2" height="15.0" fill="rgb(241,127,10)" rx="2" ry="2" />
<text  x="1086.32" y="319.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Reset (45 samples, 0.07%)</title><rect x="352.6" y="277" width="0.8" height="15.0" fill="rgb(245,13,30)" rx="2" ry="2" />
<text  x="355.59" y="287.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (16 samples, 0.02%)</title><rect x="1185.0" y="277" width="0.3" height="15.0" fill="rgb(228,101,4)" rx="2" ry="2" />
<text  x="1188.04" y="287.5" ></text>
</g>
<g >
<title>runtime.osyield (52 samples, 0.08%)</title><rect x="1144.6" y="325" width="0.9" height="15.0" fill="rgb(242,97,13)" rx="2" ry="2" />
<text  x="1147.60" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (289 samples, 0.44%)</title><rect x="122.3" y="293" width="5.2" height="15.0" fill="rgb(236,26,0)" rx="2" ry="2" />
<text  x="125.29" y="303.5" ></text>
</g>
<g >
<title>sync/atomic.StorePointer (23 samples, 0.04%)</title><rect x="361.1" y="261" width="0.4" height="15.0" fill="rgb(222,209,20)" rx="2" ry="2" />
<text  x="364.06" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (7 samples, 0.01%)</title><rect x="302.3" y="213" width="0.2" height="15.0" fill="rgb(216,112,46)" rx="2" ry="2" />
<text  x="305.33" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (16 samples, 0.02%)</title><rect x="815.3" y="197" width="0.3" height="15.0" fill="rgb(233,176,18)" rx="2" ry="2" />
<text  x="818.35" y="207.5" ></text>
</g>
<g >
<title>runtime.acquirem (44 samples, 0.07%)</title><rect x="226.7" y="229" width="0.8" height="15.0" fill="rgb(219,23,31)" rx="2" ry="2" />
<text  x="229.71" y="239.5" ></text>
</g>
<g >
<title>runtime.sysUnused (108 samples, 0.16%)</title><rect x="989.1" y="277" width="1.9" height="15.0" fill="rgb(244,183,22)" rx="2" ry="2" />
<text  x="992.08" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (317 samples, 0.48%)</title><rect x="259.5" y="261" width="5.7" height="15.0" fill="rgb(225,98,41)" rx="2" ry="2" />
<text  x="262.49" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (52 samples, 0.08%)</title><rect x="918.9" y="245" width="0.9" height="15.0" fill="rgb(225,49,33)" rx="2" ry="2" />
<text  x="921.87" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (18 samples, 0.03%)</title><rect x="246.8" y="165" width="0.3" height="15.0" fill="rgb(236,167,27)" rx="2" ry="2" />
<text  x="249.79" y="175.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.(*Message).PayloadsIterator (698 samples, 1.06%)</title><rect x="253.3" y="293" width="12.6" height="15.0" fill="rgb(205,107,23)" rx="2" ry="2" />
<text  x="256.32" y="303.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (18 samples, 0.03%)</title><rect x="312.6" y="309" width="0.3" height="15.0" fill="rgb(232,106,41)" rx="2" ry="2" />
<text  x="315.58" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (198 samples, 0.30%)</title><rect x="716.1" y="149" width="3.6" height="15.0" fill="rgb(224,198,22)" rx="2" ry="2" />
<text  x="719.11" y="159.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (7 samples, 0.01%)</title><rect x="268.6" y="213" width="0.2" height="15.0" fill="rgb(238,52,14)" rx="2" ry="2" />
<text  x="271.64" y="223.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (10 samples, 0.02%)</title><rect x="719.7" y="197" width="0.2" height="15.0" fill="rgb(212,177,31)" rx="2" ry="2" />
<text  x="722.73" y="207.5" ></text>
</g>
<g >
<title>runtime.notewakeup (16 samples, 0.02%)</title><rect x="1185.0" y="293" width="0.3" height="15.0" fill="rgb(209,100,43)" rx="2" ry="2" />
<text  x="1188.04" y="303.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.NewMessage (166 samples, 0.25%)</title><rect x="931.5" y="293" width="3.0" height="15.0" fill="rgb(240,104,37)" rx="2" ry="2" />
<text  x="934.49" y="303.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (26 samples, 0.04%)</title><rect x="221.3" y="213" width="0.5" height="15.0" fill="rgb(250,91,1)" rx="2" ry="2" />
<text  x="224.31" y="223.5" ></text>
</g>
<g >
<title>runtime.futex (41 samples, 0.06%)</title><rect x="94.7" y="245" width="0.8" height="15.0" fill="rgb(240,123,11)" rx="2" ry="2" />
<text  x="97.73" y="255.5" ></text>
</g>
<g >
<title>reflect.(*abiSeq).stepsForValue (82 samples, 0.12%)</title><rect x="833.9" y="293" width="1.5" height="15.0" fill="rgb(238,14,36)" rx="2" ry="2" />
<text  x="836.89" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (204 samples, 0.31%)</title><rect x="924.7" y="229" width="3.7" height="15.0" fill="rgb(253,55,47)" rx="2" ry="2" />
<text  x="927.71" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (24 samples, 0.04%)</title><rect x="160.5" y="245" width="0.4" height="15.0" fill="rgb(237,33,1)" rx="2" ry="2" />
<text  x="163.48" y="255.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (10 samples, 0.02%)</title><rect x="283.3" y="293" width="0.2" height="15.0" fill="rgb(229,227,39)" rx="2" ry="2" />
<text  x="286.33" y="303.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/internal/pool.exec[...].func1.1 (154 samples, 0.23%)</title><rect x="325.8" y="341" width="2.7" height="15.0" fill="rgb(215,59,54)" rx="2" ry="2" />
<text  x="328.76" y="351.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.(*Message).Length (152 samples, 0.23%)</title><rect x="428.2" y="277" width="2.8" height="15.0" fill="rgb(223,13,38)" rx="2" ry="2" />
<text  x="431.24" y="287.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (9 samples, 0.01%)</title><rect x="931.9" y="261" width="0.2" height="15.0" fill="rgb(248,98,19)" rx="2" ry="2" />
<text  x="934.92" y="271.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (14 samples, 0.02%)</title><rect x="124.9" y="181" width="0.3" height="15.0" fill="rgb(241,50,44)" rx="2" ry="2" />
<text  x="127.90" y="191.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (17 samples, 0.03%)</title><rect x="147.7" y="181" width="0.3" height="15.0" fill="rgb(240,57,45)" rx="2" ry="2" />
<text  x="150.72" y="191.5" ></text>
</g>
<g >
<title>runtime.nanotime (8 samples, 0.01%)</title><rect x="719.3" y="101" width="0.1" height="15.0" fill="rgb(235,70,2)" rx="2" ry="2" />
<text  x="722.28" y="111.5" ></text>
</g>
<g >
<title>runtime.systemstack (312 samples, 0.48%)</title><rect x="875.0" y="229" width="5.6" height="15.0" fill="rgb(225,172,21)" rx="2" ry="2" />
<text  x="877.99" y="239.5" ></text>
</g>
<g >
<title>runtime.chanparkcommit (6 samples, 0.01%)</title><rect x="1153.5" y="357" width="0.1" height="15.0" fill="rgb(249,121,10)" rx="2" ry="2" />
<text  x="1156.52" y="367.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (23 samples, 0.04%)</title><rect x="131.2" y="293" width="0.4" height="15.0" fill="rgb(211,80,9)" rx="2" ry="2" />
<text  x="134.23" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (8 samples, 0.01%)</title><rect x="734.7" y="165" width="0.1" height="15.0" fill="rgb(241,147,20)" rx="2" ry="2" />
<text  x="737.65" y="175.5" ></text>
</g>
<g >
<title>runtime.makeslice (325 samples, 0.50%)</title><rect x="122.0" y="309" width="5.8" height="15.0" fill="rgb(237,145,27)" rx="2" ry="2" />
<text  x="124.99" y="319.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).init (7 samples, 0.01%)</title><rect x="876.6" y="149" width="0.1" height="15.0" fill="rgb(223,207,35)" rx="2" ry="2" />
<text  x="879.57" y="159.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (2,985 samples, 4.55%)</title><rect x="17.9" y="277" width="53.7" height="15.0" fill="rgb(248,61,32)" rx="2" ry="2" />
<text  x="20.95" y="287.5" >sysca..</text>
</g>
<g >
<title>runtime.markBits.isMarked (9 samples, 0.01%)</title><rect x="1053.3" y="213" width="0.2" height="15.0" fill="rgb(217,82,36)" rx="2" ry="2" />
<text  x="1056.34" y="223.5" ></text>
</g>
<g >
<title>runtime.runqput (6 samples, 0.01%)</title><rect x="719.4" y="101" width="0.1" height="15.0" fill="rgb(228,83,22)" rx="2" ry="2" />
<text  x="722.42" y="111.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (20 samples, 0.03%)</title><rect x="870.4" y="245" width="0.4" height="15.0" fill="rgb(213,185,19)" rx="2" ry="2" />
<text  x="873.41" y="255.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (30 samples, 0.05%)</title><rect x="406.8" y="181" width="0.6" height="15.0" fill="rgb(245,140,5)" rx="2" ry="2" />
<text  x="409.82" y="191.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).putPtr (7 samples, 0.01%)</title><rect x="901.9" y="85" width="0.1" height="15.0" fill="rgb(209,199,51)" rx="2" ry="2" />
<text  x="904.87" y="95.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (172 samples, 0.26%)</title><rect x="864.2" y="245" width="3.1" height="15.0" fill="rgb(227,175,29)" rx="2" ry="2" />
<text  x="867.17" y="255.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (18 samples, 0.03%)</title><rect x="410.7" y="165" width="0.3" height="15.0" fill="rgb(230,222,23)" rx="2" ry="2" />
<text  x="413.69" y="175.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popTail (187 samples, 0.28%)</title><rect x="104.7" y="261" width="3.4" height="15.0" fill="rgb(254,1,53)" rx="2" ry="2" />
<text  x="107.69" y="271.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (21 samples, 0.03%)</title><rect x="731.5" y="165" width="0.4" height="15.0" fill="rgb(224,192,37)" rx="2" ry="2" />
<text  x="734.49" y="175.5" ></text>
</g>
<g >
<title>runtime.add1 (8 samples, 0.01%)</title><rect x="1037.2" y="325" width="0.2" height="15.0" fill="rgb(216,157,21)" rx="2" ry="2" />
<text  x="1040.22" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (108 samples, 0.16%)</title><rect x="932.2" y="261" width="1.9" height="15.0" fill="rgb(246,197,50)" rx="2" ry="2" />
<text  x="935.17" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).putFast (16 samples, 0.02%)</title><rect x="1081.4" y="309" width="0.3" height="15.0" fill="rgb(224,106,41)" rx="2" ry="2" />
<text  x="1084.45" y="319.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (7 samples, 0.01%)</title><rect x="357.6" y="197" width="0.1" height="15.0" fill="rgb(240,88,9)" rx="2" ry="2" />
<text  x="360.61" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (23 samples, 0.04%)</title><rect x="925.5" y="165" width="0.4" height="15.0" fill="rgb(236,188,9)" rx="2" ry="2" />
<text  x="928.50" y="175.5" ></text>
</g>
<g >
<title>runtime.handoff (163 samples, 0.25%)</title><rect x="895.6" y="181" width="3.0" height="15.0" fill="rgb(208,6,33)" rx="2" ry="2" />
<text  x="898.63" y="191.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.(*Message).GetCodecType (6 samples, 0.01%)</title><rect x="75.2" y="341" width="0.1" height="15.0" fill="rgb(228,190,0)" rx="2" ry="2" />
<text  x="78.22" y="351.5" ></text>
</g>
<g >
<title>sync.runtime_nanotime (28 samples, 0.04%)</title><rect x="308.9" y="325" width="0.5" height="15.0" fill="rgb(217,202,2)" rx="2" ry="2" />
<text  x="311.92" y="335.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (10 samples, 0.02%)</title><rect x="780.6" y="181" width="0.2" height="15.0" fill="rgb(244,215,18)" rx="2" ry="2" />
<text  x="783.57" y="191.5" ></text>
</g>
<g >
<title>runtime.sweepone (17 samples, 0.03%)</title><rect x="241.2" y="149" width="0.3" height="15.0" fill="rgb(232,186,42)" rx="2" ry="2" />
<text  x="244.18" y="159.5" ></text>
</g>
<g >
<title>runtime.goparkunlock (6 samples, 0.01%)</title><rect x="779.0" y="197" width="0.1" height="15.0" fill="rgb(205,214,10)" rx="2" ry="2" />
<text  x="781.97" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (204 samples, 0.31%)</title><rect x="924.7" y="245" width="3.7" height="15.0" fill="rgb(211,172,32)" rx="2" ry="2" />
<text  x="927.71" y="255.5" ></text>
</g>
<g >
<title>runtime.heapBits.initSpan (7 samples, 0.01%)</title><rect x="240.0" y="149" width="0.1" height="15.0" fill="rgb(254,207,23)" rx="2" ry="2" />
<text  x="242.99" y="159.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (21 samples, 0.03%)</title><rect x="123.8" y="181" width="0.4" height="15.0" fill="rgb(246,39,23)" rx="2" ry="2" />
<text  x="126.84" y="191.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (21 samples, 0.03%)</title><rect x="1188.3" y="341" width="0.4" height="15.0" fill="rgb(228,94,12)" rx="2" ry="2" />
<text  x="1191.35" y="351.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.(*Message).Reset (140 samples, 0.21%)</title><rect x="330.4" y="325" width="2.6" height="15.0" fill="rgb(207,0,17)" rx="2" ry="2" />
<text  x="333.44" y="335.5" ></text>
</g>
<g >
<title>runtime.handoff (23 samples, 0.04%)</title><rect x="243.6" y="117" width="0.4" height="15.0" fill="rgb(209,44,16)" rx="2" ry="2" />
<text  x="246.57" y="127.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (557 samples, 0.85%)</title><rect x="813.2" y="293" width="10.0" height="15.0" fill="rgb(245,32,54)" rx="2" ry="2" />
<text  x="816.23" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (8 samples, 0.01%)</title><rect x="811.4" y="181" width="0.1" height="15.0" fill="rgb(243,80,3)" rx="2" ry="2" />
<text  x="814.38" y="191.5" ></text>
</g>
<g >
<title>runtime.mPark (22 samples, 0.03%)</title><rect x="1164.1" y="325" width="0.3" height="15.0" fill="rgb(254,159,35)" rx="2" ry="2" />
<text  x="1167.05" y="335.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (20 samples, 0.03%)</title><rect x="934.1" y="261" width="0.4" height="15.0" fill="rgb(231,216,47)" rx="2" ry="2" />
<text  x="937.11" y="271.5" ></text>
</g>
<g >
<title>runtime.lock2 (10 samples, 0.02%)</title><rect x="780.6" y="165" width="0.2" height="15.0" fill="rgb(224,52,4)" rx="2" ry="2" />
<text  x="783.57" y="175.5" ></text>
</g>
<g >
<title>aeshashbody (31 samples, 0.05%)</title><rect x="866.7" y="197" width="0.5" height="15.0" fill="rgb(212,86,38)" rx="2" ry="2" />
<text  x="869.67" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gQueue).pushBack (27 samples, 0.04%)</title><rect x="1127.6" y="357" width="0.5" height="15.0" fill="rgb(236,134,13)" rx="2" ry="2" />
<text  x="1130.59" y="367.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (56 samples, 0.09%)</title><rect x="877.4" y="85" width="1.0" height="15.0" fill="rgb(231,102,5)" rx="2" ry="2" />
<text  x="880.42" y="95.5" ></text>
</g>
<g >
<title>github.com/rpcxio/rpcx-benchmark/proto.(*BenchmarkMessage).Size (691 samples, 1.05%)</title><rect x="384.1" y="261" width="12.4" height="15.0" fill="rgb(250,4,32)" rx="2" ry="2" />
<text  x="387.09" y="271.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (7 samples, 0.01%)</title><rect x="736.4" y="229" width="0.2" height="15.0" fill="rgb(223,164,42)" rx="2" ry="2" />
<text  x="739.45" y="239.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popHead (19 samples, 0.03%)</title><rect x="812.7" y="277" width="0.3" height="15.0" fill="rgb(207,76,38)" rx="2" ry="2" />
<text  x="815.71" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (81 samples, 0.12%)</title><rect x="218.7" y="165" width="1.4" height="15.0" fill="rgb(237,24,10)" rx="2" ry="2" />
<text  x="221.67" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1,523 samples, 2.32%)</title><rect x="888.1" y="277" width="27.4" height="15.0" fill="rgb(235,63,9)" rx="2" ry="2" />
<text  x="891.12" y="287.5" >r..</text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (26 samples, 0.04%)</title><rect x="876.6" y="165" width="0.4" height="15.0" fill="rgb(243,113,46)" rx="2" ry="2" />
<text  x="879.57" y="175.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Reset (30 samples, 0.05%)</title><rect x="252.4" y="293" width="0.6" height="15.0" fill="rgb(216,164,28)" rx="2" ry="2" />
<text  x="255.44" y="303.5" ></text>
</g>
<g >
<title>runtime.makeslice (269 samples, 0.41%)</title><rect x="814.0" y="261" width="4.8" height="15.0" fill="rgb(217,188,34)" rx="2" ry="2" />
<text  x="816.96" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (8 samples, 0.01%)</title><rect x="282.0" y="277" width="0.2" height="15.0" fill="rgb(237,229,23)" rx="2" ry="2" />
<text  x="285.03" y="287.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (20 samples, 0.03%)</title><rect x="963.2" y="229" width="0.4" height="15.0" fill="rgb(218,209,26)" rx="2" ry="2" />
<text  x="966.24" y="239.5" ></text>
</g>
<g >
<title>runtime.sweepone (23 samples, 0.04%)</title><rect x="732.4" y="149" width="0.4" height="15.0" fill="rgb(252,128,50)" rx="2" ry="2" />
<text  x="735.42" y="159.5" ></text>
</g>
<g >
<title>runtime.putfull (6 samples, 0.01%)</title><rect x="243.9" y="101" width="0.1" height="15.0" fill="rgb(238,52,51)" rx="2" ry="2" />
<text  x="246.88" y="111.5" ></text>
</g>
<g >
<title>runtime.newobject (16 samples, 0.02%)</title><rect x="786.2" y="261" width="0.3" height="15.0" fill="rgb(218,69,28)" rx="2" ry="2" />
<text  x="789.22" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (83 samples, 0.13%)</title><rect x="218.6" y="213" width="1.5" height="15.0" fill="rgb(214,151,48)" rx="2" ry="2" />
<text  x="221.63" y="223.5" ></text>
</g>
<g >
<title>runtime.getitab (65 samples, 0.10%)</title><rect x="250.7" y="245" width="1.2" height="15.0" fill="rgb(237,196,20)" rx="2" ry="2" />
<text  x="253.75" y="255.5" ></text>
</g>
<g >
<title>runtime.spanOfUnchecked (18 samples, 0.03%)</title><rect x="1125.8" y="325" width="0.3" height="15.0" fill="rgb(239,125,21)" rx="2" ry="2" />
<text  x="1128.83" y="335.5" ></text>
</g>
<g >
<title>runtime.getMCache (39 samples, 0.06%)</title><rect x="203.5" y="229" width="0.7" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="206.46" y="239.5" ></text>
</g>
<g >
<title>github.com/lesismal/nbio.(*Conn).write (12,721 samples, 19.38%)</title><rect x="446.3" y="229" width="228.8" height="15.0" fill="rgb(235,147,33)" rx="2" ry="2" />
<text  x="449.33" y="239.5" >github.com/lesismal/nbio.(*Con..</text>
</g>
<g >
<title>sync/atomic.StorePointer (15 samples, 0.02%)</title><rect x="107.8" y="229" width="0.3" height="15.0" fill="rgb(215,48,7)" rx="2" ry="2" />
<text  x="110.78" y="239.5" ></text>
</g>
<g >
<title>runtime.lock2 (9 samples, 0.01%)</title><rect x="812.3" y="181" width="0.2" height="15.0" fill="rgb(220,153,32)" rx="2" ry="2" />
<text  x="815.31" y="191.5" ></text>
</g>
<g >
<title>syscall.Write (12,677 samples, 19.32%)</title><rect x="447.1" y="213" width="228.0" height="15.0" fill="rgb(205,187,17)" rx="2" ry="2" />
<text  x="450.12" y="223.5" >syscall.Write</text>
</g>
<g >
<title>sync.(*Mutex).unlockSlow (24 samples, 0.04%)</title><rect x="780.6" y="213" width="0.4" height="15.0" fill="rgb(220,14,29)" rx="2" ry="2" />
<text  x="783.56" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).update (8 samples, 0.01%)</title><rect x="238.4" y="181" width="0.1" height="15.0" fill="rgb(209,116,36)" rx="2" ry="2" />
<text  x="241.36" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (8 samples, 0.01%)</title><rect x="405.5" y="149" width="0.1" height="15.0" fill="rgb(223,173,17)" rx="2" ry="2" />
<text  x="408.49" y="159.5" ></text>
</g>
<g >
<title>runtime.callers (18 samples, 0.03%)</title><rect x="410.7" y="197" width="0.3" height="15.0" fill="rgb(239,33,11)" rx="2" ry="2" />
<text  x="413.69" y="207.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (7 samples, 0.01%)</title><rect x="925.9" y="149" width="0.2" height="15.0" fill="rgb(254,32,19)" rx="2" ry="2" />
<text  x="928.93" y="159.5" ></text>
</g>
<g >
<title>runtime.makeslice (22 samples, 0.03%)</title><rect x="74.1" y="277" width="0.4" height="15.0" fill="rgb(219,25,42)" rx="2" ry="2" />
<text  x="77.10" y="287.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (7 samples, 0.01%)</title><rect x="786.3" y="165" width="0.1" height="15.0" fill="rgb(214,56,4)" rx="2" ry="2" />
<text  x="789.29" y="175.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (39 samples, 0.06%)</title><rect x="405.7" y="181" width="0.7" height="15.0" fill="rgb(239,49,54)" rx="2" ry="2" />
<text  x="408.74" y="191.5" ></text>
</g>
<g >
<title>sync.(*Pool).getSlow (1,275 samples, 1.94%)</title><rect x="786.5" y="277" width="23.0" height="15.0" fill="rgb(220,112,48)" rx="2" ry="2" />
<text  x="789.54" y="287.5" >s..</text>
</g>
<g >
<title>runtime.systemstack (83 samples, 0.13%)</title><rect x="996.2" y="325" width="1.5" height="15.0" fill="rgb(225,198,33)" rx="2" ry="2" />
<text  x="999.20" y="335.5" ></text>
</g>
<g >
<title>runtime.scanobject (75 samples, 0.11%)</title><rect x="151.2" y="149" width="1.3" height="15.0" fill="rgb(216,22,54)" rx="2" ry="2" />
<text  x="154.17" y="159.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (6 samples, 0.01%)</title><rect x="240.6" y="165" width="0.1" height="15.0" fill="rgb(240,33,43)" rx="2" ry="2" />
<text  x="243.62" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (13 samples, 0.02%)</title><rect x="310.0" y="293" width="0.2" height="15.0" fill="rgb(217,168,7)" rx="2" ry="2" />
<text  x="312.98" y="303.5" ></text>
</g>
<g >
<title>runtime.spillArgs (19 samples, 0.03%)</title><rect x="885.2" y="277" width="0.3" height="15.0" fill="rgb(249,80,50)" rx="2" ry="2" />
<text  x="888.15" y="287.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (13 samples, 0.02%)</title><rect x="780.1" y="197" width="0.2" height="15.0" fill="rgb(217,168,53)" rx="2" ry="2" />
<text  x="783.11" y="207.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (21 samples, 0.03%)</title><rect x="811.9" y="213" width="0.3" height="15.0" fill="rgb(228,3,52)" rx="2" ry="2" />
<text  x="814.86" y="223.5" ></text>
</g>
<g >
<title>runtime.wakep (6 samples, 0.01%)</title><rect x="719.5" y="101" width="0.1" height="15.0" fill="rgb(234,50,37)" rx="2" ry="2" />
<text  x="722.53" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (6 samples, 0.01%)</title><rect x="933.1" y="213" width="0.1" height="15.0" fill="rgb(223,60,18)" rx="2" ry="2" />
<text  x="936.09" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (130 samples, 0.20%)</title><rect x="973.3" y="309" width="2.3" height="15.0" fill="rgb(237,104,33)" rx="2" ry="2" />
<text  x="976.31" y="319.5" ></text>
</g>
<g >
<title>runtime.findObject (126 samples, 0.19%)</title><rect x="906.4" y="181" width="2.2" height="15.0" fill="rgb(205,63,5)" rx="2" ry="2" />
<text  x="909.35" y="191.5" ></text>
</g>
<g >
<title>github.com/lesismal/nbio.(*Engine).initHandlers.func7 (15 samples, 0.02%)</title><rect x="675.1" y="229" width="0.2" height="15.0" fill="rgb(210,149,36)" rx="2" ry="2" />
<text  x="678.06" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (12 samples, 0.02%)</title><rect x="262.8" y="213" width="0.2" height="15.0" fill="rgb(230,160,24)" rx="2" ry="2" />
<text  x="265.83" y="223.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (10 samples, 0.02%)</title><rect x="246.9" y="117" width="0.1" height="15.0" fill="rgb(226,21,51)" rx="2" ry="2" />
<text  x="249.86" y="127.5" ></text>
</g>
<g >
<title>runtime.newobject (10 samples, 0.02%)</title><rect x="102.3" y="261" width="0.1" height="15.0" fill="rgb(229,145,44)" rx="2" ry="2" />
<text  x="105.26" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (16 samples, 0.02%)</title><rect x="1185.0" y="261" width="0.3" height="15.0" fill="rgb(227,139,46)" rx="2" ry="2" />
<text  x="1188.04" y="271.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (29 samples, 0.04%)</title><rect x="876.1" y="165" width="0.5" height="15.0" fill="rgb(212,187,54)" rx="2" ry="2" />
<text  x="879.05" y="175.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).queue (7 samples, 0.01%)</title><rect x="810.8" y="197" width="0.2" height="15.0" fill="rgb(243,100,14)" rx="2" ry="2" />
<text  x="813.84" y="207.5" ></text>
</g>
<g >
<title>sync.runtime_nanotime (144 samples, 0.22%)</title><rect x="703.2" y="213" width="2.6" height="15.0" fill="rgb(217,196,3)" rx="2" ry="2" />
<text  x="706.20" y="223.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocker).tryAcquire (6 samples, 0.01%)</title><rect x="732.2" y="165" width="0.1" height="15.0" fill="rgb(206,142,46)" rx="2" ry="2" />
<text  x="735.19" y="175.5" ></text>
</g>
<g >
<title>runtime.getitab (26 samples, 0.04%)</title><rect x="411.7" y="261" width="0.4" height="15.0" fill="rgb(244,34,42)" rx="2" ry="2" />
<text  x="414.68" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (128 samples, 0.20%)</title><rect x="146.7" y="197" width="2.3" height="15.0" fill="rgb(253,111,26)" rx="2" ry="2" />
<text  x="149.75" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (8 samples, 0.01%)</title><rect x="160.0" y="245" width="0.2" height="15.0" fill="rgb(239,212,26)" rx="2" ry="2" />
<text  x="163.02" y="255.5" ></text>
</g>
<g >
<title>runtime.makeslice (60 samples, 0.09%)</title><rect x="963.0" y="261" width="1.1" height="15.0" fill="rgb(227,42,53)" rx="2" ry="2" />
<text  x="965.99" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (34 samples, 0.05%)</title><rect x="815.2" y="229" width="0.6" height="15.0" fill="rgb(239,96,46)" rx="2" ry="2" />
<text  x="818.22" y="239.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (6 samples, 0.01%)</title><rect x="301.6" y="245" width="0.1" height="15.0" fill="rgb(227,94,15)" rx="2" ry="2" />
<text  x="304.60" y="255.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.MarshalMessage.func1 (172 samples, 0.26%)</title><rect x="425.1" y="261" width="3.1" height="15.0" fill="rgb(249,184,35)" rx="2" ry="2" />
<text  x="428.11" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (41 samples, 0.06%)</title><rect x="1046.7" y="325" width="0.8" height="15.0" fill="rgb(218,86,4)" rx="2" ry="2" />
<text  x="1049.75" y="335.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (6 samples, 0.01%)</title><rect x="870.0" y="181" width="0.1" height="15.0" fill="rgb(211,39,33)" rx="2" ry="2" />
<text  x="872.99" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (8 samples, 0.01%)</title><rect x="358.7" y="197" width="0.2" height="15.0" fill="rgb(244,46,27)" rx="2" ry="2" />
<text  x="361.72" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (20 samples, 0.03%)</title><rect x="293.6" y="293" width="0.4" height="15.0" fill="rgb(234,221,0)" rx="2" ry="2" />
<text  x="296.65" y="303.5" ></text>
</g>
<g >
<title>runtime.readyWithTime (201 samples, 0.31%)</title><rect x="716.1" y="181" width="3.6" height="15.0" fill="rgb(219,205,6)" rx="2" ry="2" />
<text  x="719.06" y="191.5" ></text>
</g>
<g >
<title>runtime.scanobject (24 samples, 0.04%)</title><rect x="408.8" y="149" width="0.4" height="15.0" fill="rgb(248,213,22)" rx="2" ry="2" />
<text  x="411.78" y="159.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (183 samples, 0.28%)</title><rect x="868.1" y="277" width="3.3" height="15.0" fill="rgb(217,223,18)" rx="2" ry="2" />
<text  x="871.12" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (202 samples, 0.31%)</title><rect x="146.2" y="213" width="3.6" height="15.0" fill="rgb(246,17,35)" rx="2" ry="2" />
<text  x="149.19" y="223.5" ></text>
</g>
<g >
<title>runtime.memmove (16 samples, 0.02%)</title><rect x="275.7" y="277" width="0.2" height="15.0" fill="rgb(220,120,38)" rx="2" ry="2" />
<text  x="278.65" y="287.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common/msgparser.(*muxHandler).Unmarshal (487 samples, 0.74%)</title><rect x="112.3" y="309" width="8.8" height="15.0" fill="rgb(206,30,50)" rx="2" ry="2" />
<text  x="115.29" y="319.5" ></text>
</g>
<g >
<title>runtime.step (11 samples, 0.02%)</title><rect x="1049.3" y="229" width="0.2" height="15.0" fill="rgb(250,66,7)" rx="2" ry="2" />
<text  x="1052.30" y="239.5" ></text>
</g>
<g >
<title>runtime.unlock2 (228 samples, 0.35%)</title><rect x="984.6" y="325" width="4.1" height="15.0" fill="rgb(217,71,49)" rx="2" ry="2" />
<text  x="987.60" y="335.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (11 samples, 0.02%)</title><rect x="119.9" y="261" width="0.2" height="15.0" fill="rgb(208,9,11)" rx="2" ry="2" />
<text  x="122.92" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (190 samples, 0.29%)</title><rect x="271.8" y="261" width="3.4" height="15.0" fill="rgb(245,208,47)" rx="2" ry="2" />
<text  x="274.78" y="271.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (7 samples, 0.01%)</title><rect x="924.5" y="197" width="0.1" height="15.0" fill="rgb(232,82,5)" rx="2" ry="2" />
<text  x="927.51" y="207.5" ></text>
</g>
<g >
<title>runtime.save (16 samples, 0.02%)</title><rect x="451.2" y="133" width="0.3" height="15.0" fill="rgb(253,108,13)" rx="2" ry="2" />
<text  x="454.22" y="143.5" ></text>
</g>
<g >
<title>runtime.releasem (40 samples, 0.06%)</title><rect x="223.5" y="229" width="0.7" height="15.0" fill="rgb(244,225,17)" rx="2" ry="2" />
<text  x="226.51" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (48 samples, 0.07%)</title><rect x="408.4" y="213" width="0.8" height="15.0" fill="rgb(244,6,20)" rx="2" ry="2" />
<text  x="411.35" y="223.5" ></text>
</g>
<g >
<title>runtime.futex (63 samples, 0.10%)</title><rect x="987.6" y="293" width="1.1" height="15.0" fill="rgb(240,122,50)" rx="2" ry="2" />
<text  x="990.57" y="303.5" ></text>
</g>
<g >
<title>runtime.lfstackUnpack (7 samples, 0.01%)</title><rect x="1052.7" y="197" width="0.1" height="15.0" fill="rgb(211,174,51)" rx="2" ry="2" />
<text  x="1055.72" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (642 samples, 0.98%)</title><rect x="1021.6" y="325" width="11.6" height="15.0" fill="rgb(252,127,2)" rx="2" ry="2" />
<text  x="1024.64" y="335.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Append (218 samples, 0.33%)</title><rect x="720.5" y="261" width="3.9" height="15.0" fill="rgb(224,223,32)" rx="2" ry="2" />
<text  x="723.48" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (15 samples, 0.02%)</title><rect x="916.2" y="277" width="0.3" height="15.0" fill="rgb(215,80,36)" rx="2" ry="2" />
<text  x="919.20" y="287.5" ></text>
</g>
<g >
<title>sync.(*poolChain).pushHead (509 samples, 0.78%)</title><rect x="813.5" y="277" width="9.2" height="15.0" fill="rgb(212,203,44)" rx="2" ry="2" />
<text  x="816.53" y="287.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (30 samples, 0.05%)</title><rect x="243.4" y="133" width="0.6" height="15.0" fill="rgb(224,143,28)" rx="2" ry="2" />
<text  x="246.45" y="143.5" ></text>
</g>
<g >
<title>runtime.scanblock (9 samples, 0.01%)</title><rect x="1054.7" y="293" width="0.2" height="15.0" fill="rgb(227,101,29)" rx="2" ry="2" />
<text  x="1057.71" y="303.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (41 samples, 0.06%)</title><rect x="999.4" y="373" width="0.8" height="15.0" fill="rgb(219,148,21)" rx="2" ry="2" />
<text  x="1002.42" y="383.5" ></text>
</g>
<g >
<title>github.com/lesismal/nbio.(*Conn).doRead (3,174 samples, 4.84%)</title><rect x="14.5" y="341" width="57.1" height="15.0" fill="rgb(206,196,36)" rx="2" ry="2" />
<text  x="17.55" y="351.5" >github..</text>
</g>
<g >
<title>runtime.lockWithRank (8 samples, 0.01%)</title><rect x="997.4" y="309" width="0.1" height="15.0" fill="rgb(211,32,6)" rx="2" ry="2" />
<text  x="1000.41" y="319.5" ></text>
</g>
<g >
<title>runtime.memmove (83 samples, 0.13%)</title><rect x="983.1" y="325" width="1.5" height="15.0" fill="rgb(238,77,12)" rx="2" ry="2" />
<text  x="986.11" y="335.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (9 samples, 0.01%)</title><rect x="962.6" y="229" width="0.1" height="15.0" fill="rgb(254,72,10)" rx="2" ry="2" />
<text  x="965.58" y="239.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (2,730 samples, 4.16%)</title><rect x="728.8" y="277" width="49.1" height="15.0" fill="rgb(216,52,23)" rx="2" ry="2" />
<text  x="731.82" y="287.5" >sync..</text>
</g>
<g >
<title>runtime.heapBitsForAddr (7 samples, 0.01%)</title><rect x="901.6" y="197" width="0.1" height="15.0" fill="rgb(236,211,4)" rx="2" ry="2" />
<text  x="904.62" y="207.5" ></text>
</g>
<g >
<title>runtime.efaceeq (6 samples, 0.01%)</title><rect x="832.8" y="293" width="0.1" height="15.0" fill="rgb(211,35,11)" rx="2" ry="2" />
<text  x="835.83" y="303.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common.(*SharedPool).TakeMessagePool (52 samples, 0.08%)</title><rect x="329.5" y="325" width="0.9" height="15.0" fill="rgb(212,30,32)" rx="2" ry="2" />
<text  x="332.50" y="335.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (31 samples, 0.05%)</title><rect x="149.1" y="181" width="0.6" height="15.0" fill="rgb(206,131,54)" rx="2" ry="2" />
<text  x="152.14" y="191.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (7 samples, 0.01%)</title><rect x="813.4" y="277" width="0.1" height="15.0" fill="rgb(245,65,8)" rx="2" ry="2" />
<text  x="816.41" y="287.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Reset (25 samples, 0.04%)</title><rect x="719.9" y="261" width="0.5" height="15.0" fill="rgb(214,133,11)" rx="2" ry="2" />
<text  x="722.91" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (10 samples, 0.02%)</title><rect x="288.8" y="277" width="0.1" height="15.0" fill="rgb(226,191,11)" rx="2" ry="2" />
<text  x="291.76" y="287.5" ></text>
</g>
<g >
<title>runtime.scanobject (12 samples, 0.02%)</title><rect x="271.1" y="181" width="0.3" height="15.0" fill="rgb(219,105,19)" rx="2" ry="2" />
<text  x="274.14" y="191.5" ></text>
</g>
<g >
<title>runtime.scanobject (7 samples, 0.01%)</title><rect x="263.4" y="165" width="0.1" height="15.0" fill="rgb(226,179,53)" rx="2" ry="2" />
<text  x="266.41" y="175.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Reset (58 samples, 0.09%)</title><rect x="331.9" y="309" width="1.0" height="15.0" fill="rgb(250,157,41)" rx="2" ry="2" />
<text  x="334.90" y="319.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (25 samples, 0.04%)</title><rect x="999.4" y="357" width="0.5" height="15.0" fill="rgb(222,44,41)" rx="2" ry="2" />
<text  x="1002.42" y="367.5" ></text>
</g>
<g >
<title>runtime.markroot (79 samples, 0.12%)</title><rect x="877.1" y="165" width="1.5" height="15.0" fill="rgb(244,66,18)" rx="2" ry="2" />
<text  x="880.13" y="175.5" ></text>
</g>
<g >
<title>sync.loadPoolChainElt (113 samples, 0.17%)</title><rect x="108.1" y="261" width="2.0" height="15.0" fill="rgb(241,52,16)" rx="2" ry="2" />
<text  x="111.05" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (6 samples, 0.01%)</title><rect x="870.0" y="197" width="0.1" height="15.0" fill="rgb(220,70,50)" rx="2" ry="2" />
<text  x="872.99" y="207.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (29 samples, 0.04%)</title><rect x="356.3" y="261" width="0.5" height="15.0" fill="rgb(215,51,47)" rx="2" ry="2" />
<text  x="359.26" y="271.5" ></text>
</g>
<g >
<title>runtime.profilealloc (6 samples, 0.01%)</title><rect x="157.9" y="229" width="0.2" height="15.0" fill="rgb(241,182,45)" rx="2" ry="2" />
<text  x="160.95" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (7 samples, 0.01%)</title><rect x="115.6" y="213" width="0.1" height="15.0" fill="rgb(219,41,11)" rx="2" ry="2" />
<text  x="118.58" y="223.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (9 samples, 0.01%)</title><rect x="283.1" y="277" width="0.2" height="15.0" fill="rgb(214,94,19)" rx="2" ry="2" />
<text  x="286.13" y="287.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (228 samples, 0.35%)</title><rect x="984.6" y="341" width="4.1" height="15.0" fill="rgb(205,81,24)" rx="2" ry="2" />
<text  x="987.60" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (19 samples, 0.03%)</title><rect x="999.5" y="277" width="0.3" height="15.0" fill="rgb(216,161,52)" rx="2" ry="2" />
<text  x="1002.49" y="287.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*Server).onMessage.func1 (35,395 samples, 53.94%)</title><rect x="328.5" y="341" width="636.5" height="15.0" fill="rgb(229,101,17)" rx="2" ry="2" />
<text  x="331.53" y="351.5" >github.com/nyan233/littlerpc/server.(*Server).onMessage.func1</text>
</g>
<g >
<title>reflect.valueInterface (8 samples, 0.01%)</title><rect x="886.0" y="293" width="0.1" height="15.0" fill="rgb(209,169,29)" rx="2" ry="2" />
<text  x="888.98" y="303.5" ></text>
</g>
<g >
<title>runtime.greyobject (228 samples, 0.35%)</title><rect x="1096.0" y="309" width="4.1" height="15.0" fill="rgb(209,149,21)" rx="2" ry="2" />
<text  x="1098.98" y="319.5" ></text>
</g>
<g >
<title>sync.runtime_canSpin (14 samples, 0.02%)</title><rect x="307.5" y="325" width="0.3" height="15.0" fill="rgb(236,175,21)" rx="2" ry="2" />
<text  x="310.55" y="335.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (6 samples, 0.01%)</title><rect x="239.2" y="85" width="0.1" height="15.0" fill="rgb(226,208,20)" rx="2" ry="2" />
<text  x="242.24" y="95.5" ></text>
</g>
<g >
<title>runtime.systemstack (15 samples, 0.02%)</title><rect x="288.9" y="261" width="0.3" height="15.0" fill="rgb(232,175,44)" rx="2" ry="2" />
<text  x="291.94" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (312 samples, 0.48%)</title><rect x="875.0" y="197" width="5.6" height="15.0" fill="rgb(237,5,5)" rx="2" ry="2" />
<text  x="877.99" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (15 samples, 0.02%)</title><rect x="288.9" y="277" width="0.3" height="15.0" fill="rgb(233,141,45)" rx="2" ry="2" />
<text  x="291.94" y="287.5" ></text>
</g>
<g >
<title>sync.indexLocal (7 samples, 0.01%)</title><rect x="964.8" y="293" width="0.1" height="15.0" fill="rgb(234,141,1)" rx="2" ry="2" />
<text  x="967.79" y="303.5" ></text>
</g>
<g >
<title>runtime.(*headTailIndex).cas (9 samples, 0.01%)</title><rect x="238.5" y="165" width="0.2" height="15.0" fill="rgb(207,163,44)" rx="2" ry="2" />
<text  x="241.54" y="175.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*messageOpt).checkCallArgs (7,829 samples, 11.93%)</title><rect x="138.1" y="309" width="140.8" height="15.0" fill="rgb(241,15,4)" rx="2" ry="2" />
<text  x="141.10" y="319.5" >github.com/nyan23..</text>
</g>
<g >
<title>runtime.procyield (20 samples, 0.03%)</title><rect x="82.9" y="261" width="0.3" height="15.0" fill="rgb(235,201,18)" rx="2" ry="2" />
<text  x="85.86" y="271.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (70 samples, 0.11%)</title><rect x="708.3" y="197" width="1.3" height="15.0" fill="rgb(235,22,27)" rx="2" ry="2" />
<text  x="711.34" y="207.5" ></text>
</g>
<g >
<title>sync.runtime_SemacquireMutex (18 samples, 0.03%)</title><rect x="356.4" y="229" width="0.3" height="15.0" fill="rgb(239,51,47)" rx="2" ry="2" />
<text  x="359.39" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (26 samples, 0.04%)</title><rect x="289.6" y="277" width="0.5" height="15.0" fill="rgb(219,54,35)" rx="2" ry="2" />
<text  x="292.59" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (28 samples, 0.04%)</title><rect x="241.7" y="181" width="0.5" height="15.0" fill="rgb(230,88,34)" rx="2" ry="2" />
<text  x="244.70" y="191.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (20 samples, 0.03%)</title><rect x="895.3" y="181" width="0.3" height="15.0" fill="rgb(238,182,2)" rx="2" ry="2" />
<text  x="898.27" y="191.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrierBX (8 samples, 0.01%)</title><rect x="291.9" y="309" width="0.1" height="15.0" fill="rgb(232,10,11)" rx="2" ry="2" />
<text  x="294.91" y="319.5" ></text>
</g>
<g >
<title>sync.runtime_Semrelease (24 samples, 0.04%)</title><rect x="780.6" y="197" width="0.4" height="15.0" fill="rgb(223,99,30)" rx="2" ry="2" />
<text  x="783.56" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (8 samples, 0.01%)</title><rect x="405.5" y="133" width="0.1" height="15.0" fill="rgb(220,170,14)" rx="2" ry="2" />
<text  x="408.49" y="143.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (223 samples, 0.34%)</title><rect x="305.4" y="357" width="4.0" height="15.0" fill="rgb(231,88,38)" rx="2" ry="2" />
<text  x="308.41" y="367.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (12 samples, 0.02%)</title><rect x="819.9" y="229" width="0.2" height="15.0" fill="rgb(227,158,43)" rx="2" ry="2" />
<text  x="822.90" y="239.5" ></text>
</g>
<g >
<title>runtime.markroot (414 samples, 0.63%)</title><rect x="1047.6" y="325" width="7.4" height="15.0" fill="rgb(218,12,41)" rx="2" ry="2" />
<text  x="1050.55" y="335.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container.NewSliceMap[...] (30 samples, 0.05%)</title><rect x="101.7" y="277" width="0.5" height="15.0" fill="rgb(225,120,43)" rx="2" ry="2" />
<text  x="104.70" y="287.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (31 samples, 0.05%)</title><rect x="73.4" y="293" width="0.5" height="15.0" fill="rgb(237,199,10)" rx="2" ry="2" />
<text  x="76.36" y="303.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (108 samples, 0.16%)</title><rect x="989.1" y="261" width="1.9" height="15.0" fill="rgb(230,104,3)" rx="2" ry="2" />
<text  x="992.08" y="271.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (14 samples, 0.02%)</title><rect x="357.5" y="245" width="0.3" height="15.0" fill="rgb(245,160,22)" rx="2" ry="2" />
<text  x="360.50" y="255.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).queue (103 samples, 0.16%)</title><rect x="684.7" y="181" width="1.9" height="15.0" fill="rgb(211,221,24)" rx="2" ry="2" />
<text  x="687.72" y="191.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popTail (609 samples, 0.93%)</title><rect x="792.0" y="261" width="10.9" height="15.0" fill="rgb(229,193,30)" rx="2" ry="2" />
<text  x="794.99" y="271.5" ></text>
</g>
<g >
<title>runtime.scanobject (21 samples, 0.03%)</title><rect x="302.7" y="213" width="0.4" height="15.0" fill="rgb(231,213,33)" rx="2" ry="2" />
<text  x="305.68" y="223.5" ></text>
</g>
<g >
<title>runtime.profilealloc (12 samples, 0.02%)</title><rect x="734.6" y="213" width="0.2" height="15.0" fill="rgb(240,184,29)" rx="2" ry="2" />
<text  x="737.63" y="223.5" ></text>
</g>
<g >
<title>github.com/rpcxio/rpcx-benchmark/littlerpc/codec.ProtoBufCodec.Unmarshal (4,845 samples, 7.38%)</title><rect x="164.8" y="277" width="87.1" height="15.0" fill="rgb(242,78,47)" rx="2" ry="2" />
<text  x="167.80" y="287.5" >github.com..</text>
</g>
<g >
<title>runtime.futexsleep (6 samples, 0.01%)</title><rect x="1127.3" y="325" width="0.1" height="15.0" fill="rgb(246,97,0)" rx="2" ry="2" />
<text  x="1130.32" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (204 samples, 0.31%)</title><rect x="242.5" y="197" width="3.7" height="15.0" fill="rgb(244,167,49)" rx="2" ry="2" />
<text  x="245.55" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (50 samples, 0.08%)</title><rect x="196.8" y="213" width="0.9" height="15.0" fill="rgb(239,16,36)" rx="2" ry="2" />
<text  x="199.84" y="223.5" ></text>
</g>
<g >
<title>runtime.futex (15 samples, 0.02%)</title><rect x="1182.7" y="293" width="0.3" height="15.0" fill="rgb(217,140,10)" rx="2" ry="2" />
<text  x="1185.68" y="303.5" ></text>
</g>
<g >
<title>runtime.schedule (487 samples, 0.74%)</title><rect x="1132.5" y="341" width="8.7" height="15.0" fill="rgb(229,75,21)" rx="2" ry="2" />
<text  x="1135.46" y="351.5" ></text>
</g>
<g >
<title>runtime.memmove (8 samples, 0.01%)</title><rect x="867.9" y="245" width="0.1" height="15.0" fill="rgb(221,141,13)" rx="2" ry="2" />
<text  x="870.89" y="255.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (39 samples, 0.06%)</title><rect x="306.8" y="309" width="0.7" height="15.0" fill="rgb(248,58,2)" rx="2" ry="2" />
<text  x="309.85" y="319.5" ></text>
</g>
<g >
<title>runtime.(*gcCPULimiterState).updateLocked (15 samples, 0.02%)</title><rect x="888.2" y="197" width="0.3" height="15.0" fill="rgb(208,133,18)" rx="2" ry="2" />
<text  x="891.23" y="207.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (9 samples, 0.01%)</title><rect x="256.5" y="229" width="0.2" height="15.0" fill="rgb(231,204,39)" rx="2" ry="2" />
<text  x="259.50" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (22 samples, 0.03%)</title><rect x="1126.3" y="293" width="0.4" height="15.0" fill="rgb(230,5,38)" rx="2" ry="2" />
<text  x="1129.31" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (29 samples, 0.04%)</title><rect x="301.2" y="261" width="0.5" height="15.0" fill="rgb(240,192,26)" rx="2" ry="2" />
<text  x="304.22" y="271.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common/msgparser.(*SimpleAllocTor).FreeMessage (146 samples, 0.22%)</title><rect x="72.6" y="325" width="2.6" height="15.0" fill="rgb(224,24,42)" rx="2" ry="2" />
<text  x="75.59" y="335.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (521 samples, 0.79%)</title><rect x="313.0" y="309" width="9.4" height="15.0" fill="rgb(209,99,25)" rx="2" ry="2" />
<text  x="316.00" y="319.5" ></text>
</g>
<g >
<title>runtime.notesleep (6 samples, 0.01%)</title><rect x="1127.3" y="341" width="0.1" height="15.0" fill="rgb(217,133,37)" rx="2" ry="2" />
<text  x="1130.32" y="351.5" ></text>
</g>
<g >
<title>runtime.morestack (34 samples, 0.05%)</title><rect x="1188.3" y="389" width="0.6" height="15.0" fill="rgb(232,63,5)" rx="2" ry="2" />
<text  x="1191.33" y="399.5" ></text>
</g>
<g >
<title>runtime.handoff (14 samples, 0.02%)</title><rect x="150.7" y="133" width="0.2" height="15.0" fill="rgb(246,184,48)" rx="2" ry="2" />
<text  x="153.66" y="143.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (28 samples, 0.04%)</title><rect x="241.7" y="165" width="0.5" height="15.0" fill="rgb(235,158,49)" rx="2" ry="2" />
<text  x="244.70" y="175.5" ></text>
</g>
<g >
<title>runtime.memequal128 (11 samples, 0.02%)</title><rect x="865.8" y="197" width="0.2" height="15.0" fill="rgb(228,114,3)" rx="2" ry="2" />
<text  x="868.80" y="207.5" ></text>
</g>
<g >
<title>runtime.globrunqget (9 samples, 0.01%)</title><rect x="1138.8" y="309" width="0.1" height="15.0" fill="rgb(238,119,26)" rx="2" ry="2" />
<text  x="1141.75" y="319.5" ></text>
</g>
<g >
<title>runtime.(*consistentHeapStats).release (9 samples, 0.01%)</title><rect x="995.3" y="341" width="0.2" height="15.0" fill="rgb(234,46,16)" rx="2" ry="2" />
<text  x="998.34" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (12 samples, 0.02%)</title><rect x="122.6" y="277" width="0.2" height="15.0" fill="rgb(206,148,42)" rx="2" ry="2" />
<text  x="125.61" y="287.5" ></text>
</g>
<g >
<title>runtime.futexsleep (15 samples, 0.02%)</title><rect x="1182.7" y="309" width="0.3" height="15.0" fill="rgb(246,113,19)" rx="2" ry="2" />
<text  x="1185.68" y="319.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popHead (22 samples, 0.03%)</title><rect x="110.7" y="277" width="0.4" height="15.0" fill="rgb(219,218,21)" rx="2" ry="2" />
<text  x="113.73" y="287.5" ></text>
</g>
<g >
<title>runtime.futexsleep (32 samples, 0.05%)</title><rect x="87.7" y="261" width="0.5" height="15.0" fill="rgb(225,209,31)" rx="2" ry="2" />
<text  x="90.66" y="271.5" ></text>
</g>
<g >
<title>runtime.growslice (16 samples, 0.02%)</title><rect x="115.5" y="261" width="0.3" height="15.0" fill="rgb(249,82,11)" rx="2" ry="2" />
<text  x="118.53" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (14 samples, 0.02%)</title><rect x="218.1" y="181" width="0.2" height="15.0" fill="rgb(243,170,15)" rx="2" ry="2" />
<text  x="221.06" y="191.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*messageOpt).FreeMessage (20 samples, 0.03%)</title><rect x="297.2" y="341" width="0.4" height="15.0" fill="rgb(225,210,54)" rx="2" ry="2" />
<text  x="300.21" y="351.5" ></text>
</g>
<g >
<title>runtime.gentraceback (6 samples, 0.01%)</title><rect x="734.7" y="133" width="0.1" height="15.0" fill="rgb(206,36,22)" rx="2" ry="2" />
<text  x="737.67" y="143.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/plugins/metrics.(*ServerMetricsPlugin).OnComplete (93 samples, 0.14%)</title><rect x="725.5" y="261" width="1.7" height="15.0" fill="rgb(231,92,18)" rx="2" ry="2" />
<text  x="728.52" y="271.5" ></text>
</g>
<g >
<title>sync/atomic.StorePointer (35 samples, 0.05%)</title><rect x="765.7" y="213" width="0.6" height="15.0" fill="rgb(215,96,1)" rx="2" ry="2" />
<text  x="768.70" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).partialSwept (6 samples, 0.01%)</title><rect x="241.6" y="181" width="0.1" height="15.0" fill="rgb(229,121,29)" rx="2" ry="2" />
<text  x="244.59" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (46 samples, 0.07%)</title><rect x="294.1" y="293" width="0.8" height="15.0" fill="rgb(239,74,38)" rx="2" ry="2" />
<text  x="297.12" y="303.5" ></text>
</g>
<g >
<title>sync.(*Mutex).unlockSlow (704 samples, 1.07%)</title><rect x="707.2" y="229" width="12.7" height="15.0" fill="rgb(251,116,33)" rx="2" ry="2" />
<text  x="710.25" y="239.5" ></text>
</g>
<g >
<title>runtime.mPark (7 samples, 0.01%)</title><rect x="1138.6" y="293" width="0.1" height="15.0" fill="rgb(228,154,5)" rx="2" ry="2" />
<text  x="1141.57" y="303.5" ></text>
</g>
<g >
<title>runtime.casgstatus (227 samples, 0.35%)</title><rect x="1128.2" y="341" width="4.1" height="15.0" fill="rgb(223,95,20)" rx="2" ry="2" />
<text  x="1131.18" y="351.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.(*Uint32).CompareAndSwap (19 samples, 0.03%)</title><rect x="999.0" y="373" width="0.4" height="15.0" fill="rgb(250,140,2)" rx="2" ry="2" />
<text  x="1002.02" y="383.5" ></text>
</g>
<g >
<title>sync.loadPoolChainElt (554 samples, 0.84%)</title><rect x="766.4" y="245" width="10.0" height="15.0" fill="rgb(236,23,22)" rx="2" ry="2" />
<text  x="769.44" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (205 samples, 0.31%)</title><rect x="146.2" y="229" width="3.6" height="15.0" fill="rgb(237,32,30)" rx="2" ry="2" />
<text  x="149.15" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (155 samples, 0.24%)</title><rect x="255.0" y="245" width="2.8" height="15.0" fill="rgb(254,115,45)" rx="2" ry="2" />
<text  x="257.99" y="255.5" ></text>
</g>
<g >
<title>runtime.newstack (33 samples, 0.05%)</title><rect x="1188.3" y="373" width="0.6" height="15.0" fill="rgb(237,85,11)" rx="2" ry="2" />
<text  x="1191.35" y="383.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (17 samples, 0.03%)</title><rect x="263.2" y="181" width="0.3" height="15.0" fill="rgb(209,208,41)" rx="2" ry="2" />
<text  x="266.24" y="191.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (25 samples, 0.04%)</title><rect x="779.1" y="197" width="0.4" height="15.0" fill="rgb(244,160,21)" rx="2" ry="2" />
<text  x="782.08" y="207.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (12 samples, 0.02%)</title><rect x="282.5" y="277" width="0.2" height="15.0" fill="rgb(219,168,51)" rx="2" ry="2" />
<text  x="285.50" y="287.5" ></text>
</g>
<g >
<title>runtime.(*consistentHeapStats).acquire (7 samples, 0.01%)</title><rect x="405.1" y="197" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="408.10" y="207.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (33 samples, 0.05%)</title><rect x="265.2" y="261" width="0.6" height="15.0" fill="rgb(239,95,52)" rx="2" ry="2" />
<text  x="268.19" y="271.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (38 samples, 0.06%)</title><rect x="312.2" y="325" width="0.7" height="15.0" fill="rgb(253,62,21)" rx="2" ry="2" />
<text  x="315.22" y="335.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common.WriteControl (15,674 samples, 23.88%)</title><rect x="438.1" y="261" width="281.8" height="15.0" fill="rgb(250,46,40)" rx="2" ry="2" />
<text  x="441.07" y="271.5" >github.com/nyan233/littlerpc/pkg/comm..</text>
</g>
<g >
<title>runtime.(*guintptr).cas (8 samples, 0.01%)</title><rect x="1170.7" y="293" width="0.1" height="15.0" fill="rgb(218,31,4)" rx="2" ry="2" />
<text  x="1173.69" y="303.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*messageOpt).Check (8,318 samples, 12.68%)</title><rect x="134.0" y="325" width="149.5" height="15.0" fill="rgb(220,58,36)" rx="2" ry="2" />
<text  x="136.98" y="335.5" >github.com/nyan233/..</text>
</g>
<g >
<title>runtime.growslice (412 samples, 0.63%)</title><rect x="268.8" y="293" width="7.4" height="15.0" fill="rgb(242,55,33)" rx="2" ry="2" />
<text  x="271.76" y="303.5" ></text>
</g>
<g >
<title>runtime.signalM (140 samples, 0.21%)</title><rect x="1021.9" y="277" width="2.5" height="15.0" fill="rgb(243,128,33)" rx="2" ry="2" />
<text  x="1024.90" y="287.5" ></text>
</g>
<g >
<title>runtime.spanOf (9 samples, 0.01%)</title><rect x="197.6" y="165" width="0.1" height="15.0" fill="rgb(245,104,30)" rx="2" ry="2" />
<text  x="200.58" y="175.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (78 samples, 0.12%)</title><rect x="1035.5" y="293" width="1.4" height="15.0" fill="rgb(248,213,24)" rx="2" ry="2" />
<text  x="1038.47" y="303.5" ></text>
</g>
<g >
<title>runtime.markrootSpans (6 samples, 0.01%)</title><rect x="1054.9" y="309" width="0.1" height="15.0" fill="rgb(241,147,46)" rx="2" ry="2" />
<text  x="1057.87" y="319.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (84 samples, 0.13%)</title><rect x="681.9" y="197" width="1.6" height="15.0" fill="rgb(221,15,32)" rx="2" ry="2" />
<text  x="684.95" y="207.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (7 samples, 0.01%)</title><rect x="241.3" y="133" width="0.2" height="15.0" fill="rgb(247,104,15)" rx="2" ry="2" />
<text  x="244.34" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (198 samples, 0.30%)</title><rect x="404.8" y="213" width="3.5" height="15.0" fill="rgb(229,107,0)" rx="2" ry="2" />
<text  x="407.75" y="223.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container.NewIterator[...] (243 samples, 0.37%)</title><rect x="253.9" y="277" width="4.4" height="15.0" fill="rgb(244,145,17)" rx="2" ry="2" />
<text  x="256.91" y="287.5" ></text>
</g>
<g >
<title>runtime.notesleep (7 samples, 0.01%)</title><rect x="1138.6" y="277" width="0.1" height="15.0" fill="rgb(232,24,29)" rx="2" ry="2" />
<text  x="1141.57" y="287.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (36 samples, 0.05%)</title><rect x="965.0" y="357" width="0.6" height="15.0" fill="rgb(232,79,22)" rx="2" ry="2" />
<text  x="967.97" y="367.5" ></text>
</g>
<g >
<title>runtime.scanobject (7 samples, 0.01%)</title><rect x="160.3" y="165" width="0.1" height="15.0" fill="rgb(223,115,45)" rx="2" ry="2" />
<text  x="163.30" y="175.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (11 samples, 0.02%)</title><rect x="1127.3" y="373" width="0.2" height="15.0" fill="rgb(207,110,47)" rx="2" ry="2" />
<text  x="1130.32" y="383.5" ></text>
</g>
<g >
<title>runtime.pMask.read (19 samples, 0.03%)</title><rect x="1166.9" y="325" width="0.4" height="15.0" fill="rgb(248,70,33)" rx="2" ry="2" />
<text  x="1169.93" y="335.5" ></text>
</g>
<g >
<title>runtime.markroot (21 samples, 0.03%)</title><rect x="123.8" y="197" width="0.4" height="15.0" fill="rgb(212,172,1)" rx="2" ry="2" />
<text  x="126.84" y="207.5" ></text>
</g>
<g >
<title>runtime.fastrand (24 samples, 0.04%)</title><rect x="728.4" y="277" width="0.4" height="15.0" fill="rgb(205,16,21)" rx="2" ry="2" />
<text  x="731.39" y="287.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (62 samples, 0.09%)</title><rect x="280.2" y="309" width="1.1" height="15.0" fill="rgb(241,165,23)" rx="2" ry="2" />
<text  x="283.16" y="319.5" ></text>
</g>
<g >
<title>reflect.funcLayout (510 samples, 0.78%)</title><rect x="858.5" y="277" width="9.2" height="15.0" fill="rgb(224,141,24)" rx="2" ry="2" />
<text  x="861.50" y="287.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (37 samples, 0.06%)</title><rect x="137.3" y="261" width="0.6" height="15.0" fill="rgb(223,132,49)" rx="2" ry="2" />
<text  x="140.25" y="271.5" ></text>
</g>
<g >
<title>runtime.findObject (10 samples, 0.02%)</title><rect x="124.6" y="181" width="0.1" height="15.0" fill="rgb(214,149,50)" rx="2" ry="2" />
<text  x="127.56" y="191.5" ></text>
</g>
<g >
<title>sync.(*Mutex).unlockSlow (92 samples, 0.14%)</title><rect x="309.9" y="341" width="1.6" height="15.0" fill="rgb(217,64,12)" rx="2" ry="2" />
<text  x="312.87" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (9 samples, 0.01%)</title><rect x="16.4" y="245" width="0.2" height="15.0" fill="rgb(240,70,17)" rx="2" ry="2" />
<text  x="19.40" y="255.5" ></text>
</g>
<g >
<title>runtime.duffzero (63 samples, 0.10%)</title><rect x="872.2" y="277" width="1.2" height="15.0" fill="rgb(254,101,4)" rx="2" ry="2" />
<text  x="875.22" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (16 samples, 0.02%)</title><rect x="874.5" y="229" width="0.3" height="15.0" fill="rgb(212,158,9)" rx="2" ry="2" />
<text  x="877.49" y="239.5" ></text>
</g>
<g >
<title>runtime.shrinkstack (8 samples, 0.01%)</title><rect x="1054.5" y="277" width="0.1" height="15.0" fill="rgb(215,75,25)" rx="2" ry="2" />
<text  x="1057.50" y="287.5" ></text>
</g>
<g >
<title>runtime.lock2 (404 samples, 0.62%)</title><rect x="85.3" y="277" width="7.2" height="15.0" fill="rgb(243,226,6)" rx="2" ry="2" />
<text  x="88.25" y="287.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Load (17 samples, 0.03%)</title><rect x="252.0" y="293" width="0.3" height="15.0" fill="rgb(229,132,0)" rx="2" ry="2" />
<text  x="255.02" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (21 samples, 0.03%)</title><rect x="271.0" y="245" width="0.4" height="15.0" fill="rgb(250,173,45)" rx="2" ry="2" />
<text  x="273.98" y="255.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).trigger (7 samples, 0.01%)</title><rect x="733.6" y="197" width="0.1" height="15.0" fill="rgb(251,57,26)" rx="2" ry="2" />
<text  x="736.57" y="207.5" ></text>
</g>
<g >
<title>runtime.makeslice (313 samples, 0.48%)</title><rect x="729.5" y="245" width="5.6" height="15.0" fill="rgb(248,69,31)" rx="2" ry="2" />
<text  x="732.51" y="255.5" ></text>
</g>
<g >
<title>runtime.memmove (646 samples, 0.98%)</title><rect x="372.5" y="245" width="11.6" height="15.0" fill="rgb(227,10,5)" rx="2" ry="2" />
<text  x="375.46" y="255.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*Server).processAndSendMsg (22,845 samples, 34.81%)</title><rect x="412.5" y="309" width="410.7" height="15.0" fill="rgb(249,87,7)" rx="2" ry="2" />
<text  x="415.47" y="319.5" >github.com/nyan233/littlerpc/server.(*Server).processAnd..</text>
</g>
<g >
<title>runtime.(*pageAlloc).free (43 samples, 0.07%)</title><rect x="996.4" y="277" width="0.7" height="15.0" fill="rgb(230,2,38)" rx="2" ry="2" />
<text  x="999.36" y="287.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (31 samples, 0.05%)</title><rect x="304.8" y="309" width="0.6" height="15.0" fill="rgb(221,127,52)" rx="2" ry="2" />
<text  x="307.80" y="319.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (129 samples, 0.20%)</title><rect x="122.9" y="277" width="2.3" height="15.0" fill="rgb(252,223,36)" rx="2" ry="2" />
<text  x="125.90" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (15 samples, 0.02%)</title><rect x="160.2" y="197" width="0.2" height="15.0" fill="rgb(206,30,28)" rx="2" ry="2" />
<text  x="163.18" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (8 samples, 0.01%)</title><rect x="288.8" y="261" width="0.1" height="15.0" fill="rgb(248,123,38)" rx="2" ry="2" />
<text  x="291.78" y="271.5" ></text>
</g>
<g >
<title>runtime.pcvalue (9 samples, 0.01%)</title><rect x="246.9" y="101" width="0.1" height="15.0" fill="rgb(209,35,38)" rx="2" ry="2" />
<text  x="249.88" y="111.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (9 samples, 0.01%)</title><rect x="780.8" y="165" width="0.1" height="15.0" fill="rgb(252,115,27)" rx="2" ry="2" />
<text  x="783.77" y="175.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (24 samples, 0.04%)</title><rect x="1140.8" y="325" width="0.4" height="15.0" fill="rgb(222,95,10)" rx="2" ry="2" />
<text  x="1143.79" y="335.5" ></text>
</g>
<g >
<title>runtime.duffcopy (114 samples, 0.17%)</title><rect x="859.2" y="261" width="2.1" height="15.0" fill="rgb(215,62,4)" rx="2" ry="2" />
<text  x="862.22" y="271.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (18 samples, 0.03%)</title><rect x="964.1" y="261" width="0.3" height="15.0" fill="rgb(254,163,45)" rx="2" ry="2" />
<text  x="967.07" y="271.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (8 samples, 0.01%)</title><rect x="812.5" y="197" width="0.1" height="15.0" fill="rgb(213,95,12)" rx="2" ry="2" />
<text  x="815.47" y="207.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (22 samples, 0.03%)</title><rect x="241.1" y="165" width="0.4" height="15.0" fill="rgb(210,122,42)" rx="2" ry="2" />
<text  x="244.13" y="175.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (112 samples, 0.17%)</title><rect x="989.0" y="309" width="2.0" height="15.0" fill="rgb(252,97,47)" rx="2" ry="2" />
<text  x="992.03" y="319.5" ></text>
</g>
<g >
<title>runtime.heapBits.bits (8 samples, 0.01%)</title><rect x="926.1" y="165" width="0.2" height="15.0" fill="rgb(250,214,40)" rx="2" ry="2" />
<text  x="929.13" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (12 samples, 0.02%)</title><rect x="1189.8" y="389" width="0.2" height="15.0" fill="rgb(251,42,0)" rx="2" ry="2" />
<text  x="1192.77" y="399.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (204 samples, 0.31%)</title><rect x="924.7" y="213" width="3.7" height="15.0" fill="rgb(206,202,42)" rx="2" ry="2" />
<text  x="927.71" y="223.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.UnmarshalMuxBlock (39 samples, 0.06%)</title><rect x="111.6" y="293" width="0.7" height="15.0" fill="rgb(242,143,13)" rx="2" ry="2" />
<text  x="114.59" y="303.5" ></text>
</g>
<g >
<title>runtime.newobject (114 samples, 0.17%)</title><rect x="818.8" y="261" width="2.1" height="15.0" fill="rgb(227,166,53)" rx="2" ry="2" />
<text  x="821.80" y="271.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*pluginManager).OnCallBefore (47 samples, 0.07%)</title><rect x="278.9" y="309" width="0.8" height="15.0" fill="rgb(212,62,10)" rx="2" ry="2" />
<text  x="281.87" y="319.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (113 samples, 0.17%)</title><rect x="989.0" y="341" width="2.0" height="15.0" fill="rgb(226,23,18)" rx="2" ry="2" />
<text  x="992.01" y="351.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (21 samples, 0.03%)</title><rect x="257.2" y="229" width="0.4" height="15.0" fill="rgb(238,178,8)" rx="2" ry="2" />
<text  x="260.20" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (39 samples, 0.06%)</title><rect x="995.5" y="341" width="0.7" height="15.0" fill="rgb(217,14,49)" rx="2" ry="2" />
<text  x="998.50" y="351.5" ></text>
</g>
<g >
<title>runtime.forEachP (20 samples, 0.03%)</title><rect x="999.5" y="309" width="0.4" height="15.0" fill="rgb(247,187,21)" rx="2" ry="2" />
<text  x="1002.49" y="319.5" ></text>
</g>
<g >
<title>runtime.memmove (15 samples, 0.02%)</title><rect x="119.6" y="261" width="0.3" height="15.0" fill="rgb(220,119,30)" rx="2" ry="2" />
<text  x="122.65" y="271.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol/error.(*LStdError).Code (14 samples, 0.02%)</title><rect x="830.6" y="293" width="0.2" height="15.0" fill="rgb(217,139,14)" rx="2" ry="2" />
<text  x="833.60" y="303.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (18 samples, 0.03%)</title><rect x="246.8" y="149" width="0.3" height="15.0" fill="rgb(243,88,0)" rx="2" ry="2" />
<text  x="249.79" y="159.5" ></text>
</g>
<g >
<title>runtime.execute (182 samples, 0.28%)</title><rect x="1154.3" y="341" width="3.3" height="15.0" fill="rgb(206,207,38)" rx="2" ry="2" />
<text  x="1157.34" y="351.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGetFast (26 samples, 0.04%)</title><rect x="1000.2" y="341" width="0.5" height="15.0" fill="rgb(248,147,2)" rx="2" ry="2" />
<text  x="1003.25" y="351.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Reset (32 samples, 0.05%)</title><rect x="133.3" y="309" width="0.6" height="15.0" fill="rgb(244,25,34)" rx="2" ry="2" />
<text  x="136.30" y="319.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (36 samples, 0.05%)</title><rect x="407.5" y="181" width="0.7" height="15.0" fill="rgb(230,65,34)" rx="2" ry="2" />
<text  x="410.54" y="191.5" ></text>
</g>
<g >
<title>runtime.mcall (3,424 samples, 5.22%)</title><rect x="1126.8" y="389" width="61.5" height="15.0" fill="rgb(235,219,51)" rx="2" ry="2" />
<text  x="1129.76" y="399.5" >runtim..</text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (90 samples, 0.14%)</title><rect x="992.2" y="357" width="1.7" height="15.0" fill="rgb(236,80,48)" rx="2" ry="2" />
<text  x="995.25" y="367.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (315 samples, 0.48%)</title><rect x="874.9" y="245" width="5.7" height="15.0" fill="rgb(212,213,53)" rx="2" ry="2" />
<text  x="877.94" y="255.5" ></text>
</g>
<g >
<title>reflect.(*rtype).NumIn (13 samples, 0.02%)</title><rect x="856.4" y="277" width="0.2" height="15.0" fill="rgb(211,129,33)" rx="2" ry="2" />
<text  x="859.38" y="287.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (249 samples, 0.38%)</title><rect x="683.5" y="197" width="4.4" height="15.0" fill="rgb(244,17,20)" rx="2" ry="2" />
<text  x="686.46" y="207.5" ></text>
</g>
<g >
<title>runtime.gentraceback (18 samples, 0.03%)</title><rect x="410.7" y="149" width="0.3" height="15.0" fill="rgb(240,130,33)" rx="2" ry="2" />
<text  x="413.69" y="159.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (12 samples, 0.02%)</title><rect x="123.9" y="133" width="0.2" height="15.0" fill="rgb(247,151,47)" rx="2" ry="2" />
<text  x="126.93" y="143.5" ></text>
</g>
<g >
<title>runtime.scanobject (100 samples, 0.15%)</title><rect x="244.4" y="133" width="1.8" height="15.0" fill="rgb(251,83,1)" rx="2" ry="2" />
<text  x="247.38" y="143.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).unpack (6 samples, 0.01%)</title><rect x="766.3" y="229" width="0.1" height="15.0" fill="rgb(242,199,42)" rx="2" ry="2" />
<text  x="769.33" y="239.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (29 samples, 0.04%)</title><rect x="143.0" y="277" width="0.5" height="15.0" fill="rgb(243,139,29)" rx="2" ry="2" />
<text  x="146.02" y="287.5" ></text>
</g>
<g >
<title>runtime.typehash (33 samples, 0.05%)</title><rect x="137.3" y="245" width="0.6" height="15.0" fill="rgb(241,152,43)" rx="2" ry="2" />
<text  x="140.32" y="255.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (222 samples, 0.34%)</title><rect x="1033.2" y="325" width="4.0" height="15.0" fill="rgb(223,124,31)" rx="2" ry="2" />
<text  x="1036.19" y="335.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container.__append[...] (104 samples, 0.16%)</title><rect x="828.7" y="293" width="1.9" height="15.0" fill="rgb(250,178,8)" rx="2" ry="2" />
<text  x="831.73" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (25 samples, 0.04%)</title><rect x="270.5" y="261" width="0.4" height="15.0" fill="rgb(219,222,41)" rx="2" ry="2" />
<text  x="273.47" y="271.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (7 samples, 0.01%)</title><rect x="880.5" y="149" width="0.1" height="15.0" fill="rgb(220,157,13)" rx="2" ry="2" />
<text  x="883.46" y="159.5" ></text>
</g>
<g >
<title>runtime.osyield (8 samples, 0.01%)</title><rect x="779.3" y="165" width="0.2" height="15.0" fill="rgb(250,203,15)" rx="2" ry="2" />
<text  x="782.32" y="175.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/internal/reflect.ToValueTypeEface (7 samples, 0.01%)</title><rect x="825.0" y="293" width="0.2" height="15.0" fill="rgb(221,101,53)" rx="2" ry="2" />
<text  x="828.04" y="303.5" ></text>
</g>
<g >
<title>runtime.unlock2 (164 samples, 0.25%)</title><rect x="92.5" y="277" width="3.0" height="15.0" fill="rgb(248,1,35)" rx="2" ry="2" />
<text  x="95.51" y="287.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (20 samples, 0.03%)</title><rect x="282.7" y="277" width="0.4" height="15.0" fill="rgb(245,79,52)" rx="2" ry="2" />
<text  x="285.72" y="287.5" ></text>
</g>
<g >
<title>reflect.add (6 samples, 0.01%)</title><rect x="885.7" y="293" width="0.2" height="15.0" fill="rgb(214,75,22)" rx="2" ry="2" />
<text  x="888.74" y="303.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (108 samples, 0.16%)</title><rect x="909.4" y="181" width="1.9" height="15.0" fill="rgb(233,217,0)" rx="2" ry="2" />
<text  x="912.37" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (8 samples, 0.01%)</title><rect x="255.8" y="149" width="0.1" height="15.0" fill="rgb(240,214,16)" rx="2" ry="2" />
<text  x="258.80" y="159.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (21 samples, 0.03%)</title><rect x="271.0" y="213" width="0.4" height="15.0" fill="rgb(247,109,19)" rx="2" ry="2" />
<text  x="273.98" y="223.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Elem (14 samples, 0.02%)</title><rect x="142.4" y="277" width="0.3" height="15.0" fill="rgb(238,133,16)" rx="2" ry="2" />
<text  x="145.45" y="287.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (69 samples, 0.11%)</title><rect x="310.2" y="309" width="1.3" height="15.0" fill="rgb(240,116,4)" rx="2" ry="2" />
<text  x="313.21" y="319.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (39 samples, 0.06%)</title><rect x="118.9" y="181" width="0.7" height="15.0" fill="rgb(208,113,26)" rx="2" ry="2" />
<text  x="121.86" y="191.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.(*Message).Reset (83 samples, 0.13%)</title><rect x="132.5" y="325" width="1.5" height="15.0" fill="rgb(211,135,40)" rx="2" ry="2" />
<text  x="135.49" y="335.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 0.01%)</title><rect x="82.5" y="245" width="0.1" height="15.0" fill="rgb(215,123,39)" rx="2" ry="2" />
<text  x="85.48" y="255.5" ></text>
</g>
<g >
<title>sync.runtime_SemacquireMutex (22 samples, 0.03%)</title><rect x="962.4" y="245" width="0.4" height="15.0" fill="rgb(235,211,47)" rx="2" ry="2" />
<text  x="965.36" y="255.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (7 samples, 0.01%)</title><rect x="876.4" y="117" width="0.2" height="15.0" fill="rgb(240,120,3)" rx="2" ry="2" />
<text  x="879.45" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (25 samples, 0.04%)</title><rect x="217.9" y="197" width="0.5" height="15.0" fill="rgb(209,10,29)" rx="2" ry="2" />
<text  x="220.95" y="207.5" ></text>
</g>
<g >
<title>reflect.packEface (22 samples, 0.03%)</title><rect x="268.0" y="261" width="0.4" height="15.0" fill="rgb(213,191,15)" rx="2" ry="2" />
<text  x="271.04" y="271.5" ></text>
</g>
<g >
<title>aeshashbody (13 samples, 0.02%)</title><rect x="137.6" y="229" width="0.3" height="15.0" fill="rgb(246,25,23)" rx="2" ry="2" />
<text  x="140.65" y="239.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common.CheckCoderType (4,923 samples, 7.50%)</title><rect x="163.5" y="293" width="88.5" height="15.0" fill="rgb(215,65,26)" rx="2" ry="2" />
<text  x="166.50" y="303.5" >github.com..</text>
</g>
<g >
<title>runtime.nextFreeFast (15 samples, 0.02%)</title><rect x="920.0" y="245" width="0.3" height="15.0" fill="rgb(213,140,30)" rx="2" ry="2" />
<text  x="923.00" y="255.5" ></text>
</g>
<g >
<title>runtime.bgsweep (463 samples, 0.71%)</title><rect x="991.0" y="389" width="8.4" height="15.0" fill="rgb(236,86,54)" rx="2" ry="2" />
<text  x="994.04" y="399.5" ></text>
</g>
<g >
<title>runtime.mallocgc (221 samples, 0.34%)</title><rect x="159.3" y="261" width="4.0" height="15.0" fill="rgb(220,209,45)" rx="2" ry="2" />
<text  x="162.28" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (14 samples, 0.02%)</title><rect x="256.1" y="229" width="0.3" height="15.0" fill="rgb(246,165,19)" rx="2" ry="2" />
<text  x="259.11" y="239.5" ></text>
</g>
<g >
<title>sync.(*Pool).getSlow (421 samples, 0.64%)</title><rect x="102.5" y="277" width="7.6" height="15.0" fill="rgb(235,193,8)" rx="2" ry="2" />
<text  x="105.51" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (385 samples, 0.59%)</title><rect x="404.2" y="245" width="6.9" height="15.0" fill="rgb(248,210,51)" rx="2" ry="2" />
<text  x="407.16" y="255.5" ></text>
</g>
<g >
<title>runtime.scanblock (9 samples, 0.01%)</title><rect x="901.9" y="101" width="0.1" height="15.0" fill="rgb(229,98,31)" rx="2" ry="2" />
<text  x="904.87" y="111.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (50 samples, 0.08%)</title><rect x="1139.9" y="325" width="0.9" height="15.0" fill="rgb(241,77,37)" rx="2" ry="2" />
<text  x="1142.87" y="335.5" ></text>
</g>
<g >
<title>runtime.procyield (10 samples, 0.02%)</title><rect x="683.3" y="165" width="0.2" height="15.0" fill="rgb(218,197,7)" rx="2" ry="2" />
<text  x="686.28" y="175.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (117 samples, 0.18%)</title><rect x="816.1" y="229" width="2.1" height="15.0" fill="rgb(244,106,43)" rx="2" ry="2" />
<text  x="819.05" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (15 samples, 0.02%)</title><rect x="288.9" y="245" width="0.3" height="15.0" fill="rgb(208,163,23)" rx="2" ry="2" />
<text  x="291.94" y="255.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (71 samples, 0.11%)</title><rect x="992.6" y="341" width="1.3" height="15.0" fill="rgb(206,219,10)" rx="2" ry="2" />
<text  x="995.59" y="351.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Range (195 samples, 0.30%)</title><rect x="424.7" y="277" width="3.5" height="15.0" fill="rgb(205,45,47)" rx="2" ry="2" />
<text  x="427.69" y="287.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (209 samples, 0.32%)</title><rect x="1147.7" y="357" width="3.8" height="15.0" fill="rgb(226,42,52)" rx="2" ry="2" />
<text  x="1150.73" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.01%)</title><rect x="870.0" y="229" width="0.1" height="15.0" fill="rgb(231,163,37)" rx="2" ry="2" />
<text  x="872.99" y="239.5" ></text>
</g>
<g >
<title>runtime.forEachP (12 samples, 0.02%)</title><rect x="999.9" y="325" width="0.2" height="15.0" fill="rgb(206,48,28)" rx="2" ry="2" />
<text  x="1002.89" y="335.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (60 samples, 0.09%)</title><rect x="409.6" y="229" width="1.0" height="15.0" fill="rgb(236,123,38)" rx="2" ry="2" />
<text  x="412.55" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBits.bits (6 samples, 0.01%)</title><rect x="151.0" y="149" width="0.1" height="15.0" fill="rgb(221,196,42)" rx="2" ry="2" />
<text  x="153.95" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (70 samples, 0.11%)</title><rect x="1082.0" y="309" width="1.3" height="15.0" fill="rgb(220,150,49)" rx="2" ry="2" />
<text  x="1085.04" y="319.5" ></text>
</g>
<g >
<title>runtime.handoff (7 samples, 0.01%)</title><rect x="219.1" y="117" width="0.2" height="15.0" fill="rgb(241,46,31)" rx="2" ry="2" />
<text  x="222.14" y="127.5" ></text>
</g>
<g >
<title>runtime.systemstack (35 samples, 0.05%)</title><rect x="735.4" y="197" width="0.7" height="15.0" fill="rgb(214,116,20)" rx="2" ry="2" />
<text  x="738.44" y="207.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (9 samples, 0.01%)</title><rect x="196.9" y="181" width="0.1" height="15.0" fill="rgb(243,50,38)" rx="2" ry="2" />
<text  x="199.86" y="191.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (15 samples, 0.02%)</title><rect x="811.6" y="213" width="0.3" height="15.0" fill="rgb(243,30,32)" rx="2" ry="2" />
<text  x="814.59" y="223.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (13 samples, 0.02%)</title><rect x="160.2" y="181" width="0.2" height="15.0" fill="rgb(248,197,0)" rx="2" ry="2" />
<text  x="163.19" y="191.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (6 samples, 0.01%)</title><rect x="877.2" y="85" width="0.1" height="15.0" fill="rgb(228,158,16)" rx="2" ry="2" />
<text  x="880.17" y="95.5" ></text>
</g>
<g >
<title>runtime.callers (8 samples, 0.01%)</title><rect x="734.7" y="181" width="0.1" height="15.0" fill="rgb(210,85,14)" rx="2" ry="2" />
<text  x="737.65" y="191.5" ></text>
</g>
<g >
<title>runtime.findObject (11 samples, 0.02%)</title><rect x="1126.5" y="277" width="0.2" height="15.0" fill="rgb(240,48,17)" rx="2" ry="2" />
<text  x="1129.47" y="287.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (10 samples, 0.02%)</title><rect x="219.8" y="117" width="0.1" height="15.0" fill="rgb(236,201,22)" rx="2" ry="2" />
<text  x="222.77" y="127.5" ></text>
</g>
<g >
<title>runtime.profilealloc (20 samples, 0.03%)</title><rect x="410.7" y="229" width="0.3" height="15.0" fill="rgb(238,116,49)" rx="2" ry="2" />
<text  x="413.69" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (56 samples, 0.09%)</title><rect x="301.0" y="293" width="1.0" height="15.0" fill="rgb(213,40,38)" rx="2" ry="2" />
<text  x="304.04" y="303.5" ></text>
</g>
<g >
<title>runtime.futex (12 samples, 0.02%)</title><rect x="979.8" y="261" width="0.2" height="15.0" fill="rgb(217,140,22)" rx="2" ry="2" />
<text  x="982.82" y="271.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocker).tryAcquire (20 samples, 0.03%)</title><rect x="998.4" y="357" width="0.4" height="15.0" fill="rgb(206,189,41)" rx="2" ry="2" />
<text  x="1001.43" y="367.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (14 samples, 0.02%)</title><rect x="256.1" y="197" width="0.3" height="15.0" fill="rgb(251,208,3)" rx="2" ry="2" />
<text  x="259.11" y="207.5" ></text>
</g>
<g >
<title>runtime.scanstack (21 samples, 0.03%)</title><rect x="123.8" y="165" width="0.4" height="15.0" fill="rgb(254,192,1)" rx="2" ry="2" />
<text  x="126.84" y="175.5" ></text>
</g>
<g >
<title>runtime.lfstackUnpack (26 samples, 0.04%)</title><rect x="1029.7" y="293" width="0.4" height="15.0" fill="rgb(214,214,2)" rx="2" ry="2" />
<text  x="1032.66" y="303.5" ></text>
</g>
<g >
<title>runtime.strequal (25 samples, 0.04%)</title><rect x="136.8" y="229" width="0.5" height="15.0" fill="rgb(223,83,47)" rx="2" ry="2" />
<text  x="139.80" y="239.5" ></text>
</g>
<g >
<title>callRet (117 samples, 0.18%)</title><rect x="848.7" y="277" width="2.1" height="15.0" fill="rgb(247,44,10)" rx="2" ry="2" />
<text  x="851.67" y="287.5" ></text>
</g>
<g >
<title>runtime.step (8 samples, 0.01%)</title><rect x="246.9" y="85" width="0.1" height="15.0" fill="rgb(251,25,42)" rx="2" ry="2" />
<text  x="249.90" y="95.5" ></text>
</g>
<g >
<title>runtime.makeslice (36 samples, 0.05%)</title><rect x="779.9" y="229" width="0.7" height="15.0" fill="rgb(214,138,29)" rx="2" ry="2" />
<text  x="782.91" y="239.5" ></text>
</g>
<g >
<title>runtime.futexsleep (7 samples, 0.01%)</title><rect x="1138.6" y="261" width="0.1" height="15.0" fill="rgb(247,28,13)" rx="2" ry="2" />
<text  x="1141.57" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (115 samples, 0.18%)</title><rect x="868.9" y="261" width="2.1" height="15.0" fill="rgb(247,147,8)" rx="2" ry="2" />
<text  x="871.91" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (68 samples, 0.10%)</title><rect x="238.8" y="117" width="1.2" height="15.0" fill="rgb(215,34,53)" rx="2" ry="2" />
<text  x="241.77" y="127.5" ></text>
</g>
<g >
<title>runtime.systemstack (14 samples, 0.02%)</title><rect x="256.1" y="213" width="0.3" height="15.0" fill="rgb(221,36,15)" rx="2" ry="2" />
<text  x="259.11" y="223.5" ></text>
</g>
<g >
<title>runtime.duffcopy (45 samples, 0.07%)</title><rect x="871.4" y="277" width="0.8" height="15.0" fill="rgb(214,148,34)" rx="2" ry="2" />
<text  x="874.41" y="287.5" ></text>
</g>
<g >
<title>runtime.lock2 (82 samples, 0.12%)</title><rect x="682.0" y="181" width="1.5" height="15.0" fill="rgb(224,50,16)" rx="2" ry="2" />
<text  x="684.98" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (35 samples, 0.05%)</title><rect x="779.9" y="213" width="0.7" height="15.0" fill="rgb(218,225,25)" rx="2" ry="2" />
<text  x="782.93" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/syscall.Syscall6 (12,208 samples, 18.60%)</title><rect x="455.6" y="149" width="219.5" height="15.0" fill="rgb(249,97,43)" rx="2" ry="2" />
<text  x="458.55" y="159.5" >runtime/internal/syscall.Sysc..</text>
</g>
<g >
<title>syscall.Syscall (12,666 samples, 19.30%)</title><rect x="447.3" y="181" width="227.8" height="15.0" fill="rgb(207,59,27)" rx="2" ry="2" />
<text  x="450.31" y="191.5" >syscall.Syscall</text>
</g>
<g >
<title>reflect.toType (7 samples, 0.01%)</title><rect x="158.7" y="277" width="0.1" height="15.0" fill="rgb(214,94,51)" rx="2" ry="2" />
<text  x="161.72" y="287.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*messageOpt).SelectCodecAndEncoder (77 samples, 0.12%)</title><rect x="290.7" y="325" width="1.3" height="15.0" fill="rgb(245,65,33)" rx="2" ry="2" />
<text  x="293.66" y="335.5" ></text>
</g>
<g >
<title>runtime.lock2 (271 samples, 0.41%)</title><rect x="1180.0" y="325" width="4.8" height="15.0" fill="rgb(250,172,23)" rx="2" ry="2" />
<text  x="1182.97" y="335.5" ></text>
</g>
<g >
<title>runtime.makeslice (22 samples, 0.03%)</title><rect x="101.8" y="261" width="0.4" height="15.0" fill="rgb(212,218,52)" rx="2" ry="2" />
<text  x="104.76" y="271.5" ></text>
</g>
<g >
<title>runtime.memmove (11 samples, 0.02%)</title><rect x="919.8" y="245" width="0.2" height="15.0" fill="rgb(224,173,51)" rx="2" ry="2" />
<text  x="922.80" y="255.5" ></text>
</g>
<g >
<title>runtime.runqgrab (506 samples, 0.77%)</title><rect x="1170.8" y="293" width="9.1" height="15.0" fill="rgb(229,35,19)" rx="2" ry="2" />
<text  x="1173.83" y="303.5" ></text>
</g>
<g >
<title>runtime.(*gQueue).pop (45 samples, 0.07%)</title><rect x="1159.7" y="325" width="0.8" height="15.0" fill="rgb(252,36,25)" rx="2" ry="2" />
<text  x="1162.74" y="335.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).queue (6 samples, 0.01%)</title><rect x="356.6" y="197" width="0.1" height="15.0" fill="rgb(213,155,35)" rx="2" ry="2" />
<text  x="359.58" y="207.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (15 samples, 0.02%)</title><rect x="915.1" y="197" width="0.3" height="15.0" fill="rgb(207,217,7)" rx="2" ry="2" />
<text  x="918.13" y="207.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (14 samples, 0.02%)</title><rect x="74.2" y="245" width="0.3" height="15.0" fill="rgb(254,103,5)" rx="2" ry="2" />
<text  x="77.25" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (41 samples, 0.06%)</title><rect x="146.9" y="181" width="0.7" height="15.0" fill="rgb(253,29,38)" rx="2" ry="2" />
<text  x="149.87" y="191.5" ></text>
</g>
<g >
<title>sync.(*Pool).pinSlow (89 samples, 0.14%)</title><rect x="811.1" y="261" width="1.6" height="15.0" fill="rgb(240,104,18)" rx="2" ry="2" />
<text  x="814.09" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (31 samples, 0.05%)</title><rect x="149.1" y="197" width="0.6" height="15.0" fill="rgb(211,15,50)" rx="2" ry="2" />
<text  x="152.14" y="207.5" ></text>
</g>
<g >
<title>runtime.(*waitq).enqueue (6 samples, 0.01%)</title><rect x="81.4" y="293" width="0.1" height="15.0" fill="rgb(222,14,32)" rx="2" ry="2" />
<text  x="84.37" y="303.5" ></text>
</g>
<g >
<title>runtime.stealWork (686 samples, 1.05%)</title><rect x="1167.6" y="325" width="12.3" height="15.0" fill="rgb(230,10,5)" rx="2" ry="2" />
<text  x="1170.60" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (8 samples, 0.01%)</title><rect x="451.5" y="133" width="0.1" height="15.0" fill="rgb(214,106,12)" rx="2" ry="2" />
<text  x="454.50" y="143.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (51 samples, 0.08%)</title><rect x="897.6" y="149" width="1.0" height="15.0" fill="rgb(227,180,5)" rx="2" ry="2" />
<text  x="900.65" y="159.5" ></text>
</g>
<g >
<title>sync/atomic.StorePointer (28 samples, 0.04%)</title><rect x="802.4" y="229" width="0.5" height="15.0" fill="rgb(244,77,42)" rx="2" ry="2" />
<text  x="805.44" y="239.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (9 samples, 0.01%)</title><rect x="257.6" y="229" width="0.2" height="15.0" fill="rgb(218,82,13)" rx="2" ry="2" />
<text  x="260.60" y="239.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (26 samples, 0.04%)</title><rect x="360.6" y="261" width="0.4" height="15.0" fill="rgb(244,135,54)" rx="2" ry="2" />
<text  x="363.56" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (96 samples, 0.15%)</title><rect x="928.6" y="245" width="1.7" height="15.0" fill="rgb(216,7,2)" rx="2" ry="2" />
<text  x="931.56" y="255.5" ></text>
</g>
<g >
<title>runtime.gopark (8 samples, 0.01%)</title><rect x="82.0" y="277" width="0.2" height="15.0" fill="rgb(237,44,5)" rx="2" ry="2" />
<text  x="85.01" y="287.5" ></text>
</g>
<g >
<title>runtime.getempty (20 samples, 0.03%)</title><rect x="1050.4" y="213" width="0.4" height="15.0" fill="rgb(245,65,48)" rx="2" ry="2" />
<text  x="1053.40" y="223.5" ></text>
</g>
<g >
<title>runtime.(*headTailIndex).incTail (6 samples, 0.01%)</title><rect x="998.3" y="325" width="0.1" height="15.0" fill="rgb(211,22,25)" rx="2" ry="2" />
<text  x="1001.25" y="335.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (10 samples, 0.02%)</title><rect x="277.7" y="229" width="0.1" height="15.0" fill="rgb(214,63,10)" rx="2" ry="2" />
<text  x="280.66" y="239.5" ></text>
</g>
<g >
<title>runtime.assertE2I2 (74 samples, 0.11%)</title><rect x="250.6" y="261" width="1.3" height="15.0" fill="rgb(208,74,37)" rx="2" ry="2" />
<text  x="253.59" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (10 samples, 0.02%)</title><rect x="874.6" y="213" width="0.1" height="15.0" fill="rgb(214,82,5)" rx="2" ry="2" />
<text  x="877.56" y="223.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (24 samples, 0.04%)</title><rect x="290.2" y="293" width="0.5" height="15.0" fill="rgb(217,178,31)" rx="2" ry="2" />
<text  x="293.23" y="303.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (10 samples, 0.02%)</title><rect x="818.6" y="245" width="0.2" height="15.0" fill="rgb(241,24,12)" rx="2" ry="2" />
<text  x="821.62" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (15 samples, 0.02%)</title><rect x="160.2" y="229" width="0.2" height="15.0" fill="rgb(240,81,27)" rx="2" ry="2" />
<text  x="163.18" y="239.5" ></text>
</g>
<g >
<title>runtime.makeslice (647 samples, 0.99%)</title><rect x="873.4" y="277" width="11.7" height="15.0" fill="rgb(206,112,14)" rx="2" ry="2" />
<text  x="876.45" y="287.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (7 samples, 0.01%)</title><rect x="121.9" y="245" width="0.1" height="15.0" fill="rgb(222,154,11)" rx="2" ry="2" />
<text  x="124.86" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (35 samples, 0.05%)</title><rect x="735.4" y="165" width="0.7" height="15.0" fill="rgb(224,120,31)" rx="2" ry="2" />
<text  x="738.44" y="175.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (78 samples, 0.12%)</title><rect x="248.9" y="229" width="1.4" height="15.0" fill="rgb(232,186,9)" rx="2" ry="2" />
<text  x="251.88" y="239.5" ></text>
</g>
<g >
<title>runtime.lock2 (7 samples, 0.01%)</title><rect x="356.4" y="197" width="0.1" height="15.0" fill="rgb(246,40,27)" rx="2" ry="2" />
<text  x="359.42" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (14 samples, 0.02%)</title><rect x="282.2" y="261" width="0.3" height="15.0" fill="rgb(230,45,41)" rx="2" ry="2" />
<text  x="285.21" y="271.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).queue (8 samples, 0.01%)</title><rect x="779.5" y="181" width="0.2" height="15.0" fill="rgb(241,43,12)" rx="2" ry="2" />
<text  x="782.53" y="191.5" ></text>
</g>
<g >
<title>runtime.heapBits.bits (370 samples, 0.56%)</title><rect x="1037.5" y="325" width="6.7" height="15.0" fill="rgb(243,55,23)" rx="2" ry="2" />
<text  x="1040.54" y="335.5" ></text>
</g>
<g >
<title>sync.runtime_SemacquireMutex (42 samples, 0.06%)</title><rect x="779.0" y="213" width="0.7" height="15.0" fill="rgb(218,86,3)" rx="2" ry="2" />
<text  x="781.96" y="223.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (7 samples, 0.01%)</title><rect x="880.5" y="165" width="0.1" height="15.0" fill="rgb(220,65,16)" rx="2" ry="2" />
<text  x="883.46" y="175.5" ></text>
</g>
<g >
<title>runtime.gogo (15 samples, 0.02%)</title><rect x="1136.4" y="309" width="0.3" height="15.0" fill="rgb(229,20,9)" rx="2" ry="2" />
<text  x="1139.43" y="319.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (8 samples, 0.01%)</title><rect x="129.4" y="309" width="0.1" height="15.0" fill="rgb(252,133,30)" rx="2" ry="2" />
<text  x="132.36" y="319.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1,729 samples, 2.63%)</title><rect x="782.1" y="293" width="31.1" height="15.0" fill="rgb(250,37,43)" rx="2" ry="2" />
<text  x="785.14" y="303.5" >sy..</text>
</g>
<g >
<title>runtime.efaceeq (24 samples, 0.04%)</title><rect x="865.6" y="213" width="0.4" height="15.0" fill="rgb(215,139,47)" rx="2" ry="2" />
<text  x="868.57" y="223.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common.NewSharedPool.func1 (96 samples, 0.15%)</title><rect x="784.8" y="277" width="1.7" height="15.0" fill="rgb(211,1,53)" rx="2" ry="2" />
<text  x="787.78" y="287.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (13 samples, 0.02%)</title><rect x="301.8" y="245" width="0.2" height="15.0" fill="rgb(233,179,11)" rx="2" ry="2" />
<text  x="304.76" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).divideByElemSize (12 samples, 0.02%)</title><rect x="906.0" y="181" width="0.3" height="15.0" fill="rgb(220,31,39)" rx="2" ry="2" />
<text  x="909.04" y="191.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (13 samples, 0.02%)</title><rect x="733.1" y="165" width="0.2" height="15.0" fill="rgb(234,21,24)" rx="2" ry="2" />
<text  x="736.09" y="175.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (59 samples, 0.09%)</title><rect x="686.6" y="181" width="1.0" height="15.0" fill="rgb(251,200,21)" rx="2" ry="2" />
<text  x="689.57" y="191.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Range (33 samples, 0.05%)</title><rect x="430.4" y="261" width="0.6" height="15.0" fill="rgb(212,221,52)" rx="2" ry="2" />
<text  x="433.38" y="271.5" ></text>
</g>
<g >
<title>runtime.nanotime (9 samples, 0.01%)</title><rect x="1139.0" y="309" width="0.1" height="15.0" fill="rgb(211,26,11)" rx="2" ry="2" />
<text  x="1141.95" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (248 samples, 0.38%)</title><rect x="238.0" y="213" width="4.5" height="15.0" fill="rgb(235,41,52)" rx="2" ry="2" />
<text  x="241.03" y="223.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4.1 (19 samples, 0.03%)</title><rect x="999.5" y="293" width="0.3" height="15.0" fill="rgb(234,104,31)" rx="2" ry="2" />
<text  x="1002.49" y="303.5" ></text>
</g>
<g >
<title>reflect.(*rtype).In (17 samples, 0.03%)</title><rect x="855.3" y="277" width="0.3" height="15.0" fill="rgb(208,133,0)" rx="2" ry="2" />
<text  x="858.30" y="287.5" ></text>
</g>
<g >
<title>runtime.lock2 (8 samples, 0.01%)</title><rect x="997.4" y="293" width="0.1" height="15.0" fill="rgb(247,159,46)" rx="2" ry="2" />
<text  x="1000.41" y="303.5" ></text>
</g>
<g >
<title>runtime.wirep (6 samples, 0.01%)</title><rect x="454.7" y="133" width="0.1" height="15.0" fill="rgb(221,215,23)" rx="2" ry="2" />
<text  x="457.74" y="143.5" ></text>
</g>
<g >
<title>encoding/binary.bigEndian.PutUint32 (58 samples, 0.09%)</title><rect x="413.7" y="293" width="1.0" height="15.0" fill="rgb(217,167,25)" rx="2" ry="2" />
<text  x="416.67" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (9 samples, 0.01%)</title><rect x="293.7" y="261" width="0.2" height="15.0" fill="rgb(232,12,49)" rx="2" ry="2" />
<text  x="296.72" y="271.5" ></text>
</g>
<g >
<title>runtime.runqempty (15 samples, 0.02%)</title><rect x="678.2" y="213" width="0.3" height="15.0" fill="rgb(245,188,8)" rx="2" ry="2" />
<text  x="681.23" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (6 samples, 0.01%)</title><rect x="255.8" y="117" width="0.1" height="15.0" fill="rgb(224,6,32)" rx="2" ry="2" />
<text  x="258.82" y="127.5" ></text>
</g>
<g >
<title>runtime.futex (13 samples, 0.02%)</title><rect x="1163.7" y="277" width="0.3" height="15.0" fill="rgb(235,130,33)" rx="2" ry="2" />
<text  x="1166.75" y="287.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (9 samples, 0.01%)</title><rect x="876.8" y="133" width="0.1" height="15.0" fill="rgb(241,203,23)" rx="2" ry="2" />
<text  x="879.77" y="143.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (14 samples, 0.02%)</title><rect x="820.1" y="229" width="0.3" height="15.0" fill="rgb(247,61,52)" rx="2" ry="2" />
<text  x="823.11" y="239.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (18 samples, 0.03%)</title><rect x="152.2" y="133" width="0.3" height="15.0" fill="rgb(249,100,27)" rx="2" ry="2" />
<text  x="155.18" y="143.5" ></text>
</g>
<g >
<title>github.com/lesismal/nbio.(*Conn).Write (13,131 samples, 20.01%)</title><rect x="439.2" y="245" width="236.1" height="15.0" fill="rgb(224,216,0)" rx="2" ry="2" />
<text  x="442.24" y="255.5" >github.com/lesismal/nbio.(*Conn..</text>
</g>
<g >
<title>runtime.selunlock (7 samples, 0.01%)</title><rect x="982.5" y="341" width="0.1" height="15.0" fill="rgb(216,194,16)" rx="2" ry="2" />
<text  x="985.46" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (42 samples, 0.06%)</title><rect x="217.9" y="213" width="0.7" height="15.0" fill="rgb(234,222,19)" rx="2" ry="2" />
<text  x="220.86" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (6 samples, 0.01%)</title><rect x="242.4" y="181" width="0.1" height="15.0" fill="rgb(229,23,21)" rx="2" ry="2" />
<text  x="245.39" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (70 samples, 0.11%)</title><rect x="735.2" y="229" width="1.2" height="15.0" fill="rgb(215,116,23)" rx="2" ry="2" />
<text  x="738.19" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (26 samples, 0.04%)</title><rect x="785.2" y="197" width="0.5" height="15.0" fill="rgb(252,217,23)" rx="2" ry="2" />
<text  x="788.23" y="207.5" ></text>
</g>
<g >
<title>reflect.(*rtype).common (16 samples, 0.02%)</title><rect x="857.5" y="277" width="0.3" height="15.0" fill="rgb(221,1,1)" rx="2" ry="2" />
<text  x="860.50" y="287.5" ></text>
</g>
<g >
<title>runtime.schedule (1,871 samples, 2.85%)</title><rect x="1153.8" y="357" width="33.6" height="15.0" fill="rgb(242,27,38)" rx="2" ry="2" />
<text  x="1156.79" y="367.5" >ru..</text>
</g>
<g >
<title>runtime.lockWithRank (589 samples, 0.90%)</title><rect x="968.3" y="341" width="10.6" height="15.0" fill="rgb(211,193,36)" rx="2" ry="2" />
<text  x="971.28" y="351.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (10 samples, 0.02%)</title><rect x="780.3" y="197" width="0.2" height="15.0" fill="rgb(228,39,54)" rx="2" ry="2" />
<text  x="783.34" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (19 samples, 0.03%)</title><rect x="293.6" y="277" width="0.4" height="15.0" fill="rgb(237,100,4)" rx="2" ry="2" />
<text  x="296.65" y="287.5" ></text>
</g>
<g >
<title>sync.indexLocal (8 samples, 0.01%)</title><rect x="813.0" y="277" width="0.2" height="15.0" fill="rgb(242,7,42)" rx="2" ry="2" />
<text  x="816.05" y="287.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (15 samples, 0.02%)</title><rect x="152.6" y="229" width="0.3" height="15.0" fill="rgb(247,19,36)" rx="2" ry="2" />
<text  x="155.64" y="239.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (24 samples, 0.04%)</title><rect x="148.0" y="181" width="0.5" height="15.0" fill="rgb(247,136,40)" rx="2" ry="2" />
<text  x="151.02" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (55 samples, 0.08%)</title><rect x="302.1" y="277" width="1.0" height="15.0" fill="rgb(243,225,25)" rx="2" ry="2" />
<text  x="305.08" y="287.5" ></text>
</g>
<g >
<title>runtime.netpoll (128 samples, 0.20%)</title><rect x="1164.6" y="325" width="2.3" height="15.0" fill="rgb(227,55,44)" rx="2" ry="2" />
<text  x="1167.63" y="335.5" ></text>
</g>
<g >
<title>runtime.newobject (1,722 samples, 2.62%)</title><rect x="886.3" y="309" width="30.9" height="15.0" fill="rgb(224,33,16)" rx="2" ry="2" />
<text  x="889.27" y="319.5" >ru..</text>
</g>
<g >
<title>runtime.mallocgc (990 samples, 1.51%)</title><rect x="204.2" y="229" width="17.8" height="15.0" fill="rgb(233,184,5)" rx="2" ry="2" />
<text  x="207.16" y="239.5" ></text>
</g>
<g >
<title>runtime.makeslice (77 samples, 0.12%)</title><rect x="784.8" y="261" width="1.4" height="15.0" fill="rgb(230,181,29)" rx="2" ry="2" />
<text  x="787.84" y="271.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (197 samples, 0.30%)</title><rect x="716.1" y="133" width="3.6" height="15.0" fill="rgb(246,204,34)" rx="2" ry="2" />
<text  x="719.13" y="143.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (37 samples, 0.06%)</title><rect x="454.2" y="149" width="0.6" height="15.0" fill="rgb(244,219,26)" rx="2" ry="2" />
<text  x="457.18" y="159.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.UnmarshalMessage (393 samples, 0.60%)</title><rect x="113.0" y="293" width="7.1" height="15.0" fill="rgb(232,208,31)" rx="2" ry="2" />
<text  x="116.05" y="303.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common.MuxWriteAll (15,804 samples, 24.08%)</title><rect x="436.2" y="277" width="284.2" height="15.0" fill="rgb(230,147,27)" rx="2" ry="2" />
<text  x="439.18" y="287.5" >github.com/nyan233/littlerpc/pkg/commo..</text>
</g>
<g >
<title>runtime.mallocgc (15 samples, 0.02%)</title><rect x="786.2" y="245" width="0.3" height="15.0" fill="rgb(215,203,27)" rx="2" ry="2" />
<text  x="789.24" y="255.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common/msgparser.(*LMessageParser).FreeMessage (153 samples, 0.23%)</title><rect x="72.5" y="341" width="2.7" height="15.0" fill="rgb(229,214,46)" rx="2" ry="2" />
<text  x="75.47" y="351.5" ></text>
</g>
<g >
<title>runtime.getpid (12 samples, 0.02%)</title><rect x="1021.9" y="261" width="0.2" height="15.0" fill="rgb(206,140,40)" rx="2" ry="2" />
<text  x="1024.90" y="271.5" ></text>
</g>
<g >
<title>reflect.(*rtype).NumOut (7 samples, 0.01%)</title><rect x="856.6" y="277" width="0.1" height="15.0" fill="rgb(225,42,27)" rx="2" ry="2" />
<text  x="859.62" y="287.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (570 samples, 0.87%)</title><rect x="1100.1" y="309" width="10.2" height="15.0" fill="rgb(210,141,1)" rx="2" ry="2" />
<text  x="1103.08" y="319.5" ></text>
</g>
<g >
<title>runtime.selectgo (1,274 samples, 1.94%)</title><rect x="965.8" y="357" width="22.9" height="15.0" fill="rgb(252,196,10)" rx="2" ry="2" />
<text  x="968.80" y="367.5" >r..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (10 samples, 0.02%)</title><rect x="870.8" y="245" width="0.1" height="15.0" fill="rgb(233,82,16)" rx="2" ry="2" />
<text  x="873.77" y="255.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (9 samples, 0.01%)</title><rect x="999.6" y="229" width="0.2" height="15.0" fill="rgb(215,206,2)" rx="2" ry="2" />
<text  x="1002.64" y="239.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).popHead (19 samples, 0.03%)</title><rect x="110.8" y="261" width="0.3" height="15.0" fill="rgb(212,31,5)" rx="2" ry="2" />
<text  x="113.78" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (11 samples, 0.02%)</title><rect x="736.1" y="213" width="0.2" height="15.0" fill="rgb(228,72,45)" rx="2" ry="2" />
<text  x="739.07" y="223.5" ></text>
</g>
<g >
<title>errors.Is (45 samples, 0.07%)</title><rect x="12.8" y="357" width="0.8" height="15.0" fill="rgb(238,228,28)" rx="2" ry="2" />
<text  x="15.79" y="367.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (18 samples, 0.03%)</title><rect x="84.9" y="277" width="0.3" height="15.0" fill="rgb(217,111,12)" rx="2" ry="2" />
<text  x="87.91" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (12 samples, 0.02%)</title><rect x="811.3" y="213" width="0.3" height="15.0" fill="rgb(214,162,21)" rx="2" ry="2" />
<text  x="814.34" y="223.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/protocol.(*Message).PayloadsIterator.func1 (14 samples, 0.02%)</title><rect x="253.1" y="277" width="0.2" height="15.0" fill="rgb(253,143,49)" rx="2" ry="2" />
<text  x="256.07" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (8 samples, 0.01%)</title><rect x="786.3" y="229" width="0.1" height="15.0" fill="rgb(238,204,50)" rx="2" ry="2" />
<text  x="789.27" y="239.5" ></text>
</g>
<g >
<title>runtime.newstack (6 samples, 0.01%)</title><rect x="867.3" y="245" width="0.1" height="15.0" fill="rgb(206,2,48)" rx="2" ry="2" />
<text  x="870.26" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1,516 samples, 2.31%)</title><rect x="888.2" y="229" width="27.2" height="15.0" fill="rgb(242,68,46)" rx="2" ry="2" />
<text  x="891.19" y="239.5" >r..</text>
</g>
<g >
<title>runtime.lockWithRank (9 samples, 0.01%)</title><rect x="812.3" y="197" width="0.2" height="15.0" fill="rgb(245,229,25)" rx="2" ry="2" />
<text  x="815.31" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (41 samples, 0.06%)</title><rect x="146.9" y="165" width="0.7" height="15.0" fill="rgb(207,211,54)" rx="2" ry="2" />
<text  x="149.87" y="175.5" ></text>
</g>
<g >
<title>runtime.putfull (162 samples, 0.25%)</title><rect x="1030.2" y="293" width="2.9" height="15.0" fill="rgb(247,187,12)" rx="2" ry="2" />
<text  x="1033.22" y="303.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (10 samples, 0.02%)</title><rect x="294.8" y="197" width="0.1" height="15.0" fill="rgb(246,134,53)" rx="2" ry="2" />
<text  x="297.76" y="207.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).queue (16 samples, 0.02%)</title><rect x="307.0" y="293" width="0.3" height="15.0" fill="rgb(220,5,5)" rx="2" ry="2" />
<text  x="310.05" y="303.5" ></text>
</g>
<g >
<title>runtime.newobject (47 samples, 0.07%)</title><rect x="930.6" y="277" width="0.9" height="15.0" fill="rgb(242,41,41)" rx="2" ry="2" />
<text  x="933.64" y="287.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1,466 samples, 2.23%)</title><rect x="224.2" y="245" width="26.4" height="15.0" fill="rgb(217,64,40)" rx="2" ry="2" />
<text  x="227.23" y="255.5" >r..</text>
</g>
<g >
<title>sync.(*poolChain).pushHead (61 samples, 0.09%)</title><rect x="781.0" y="261" width="1.1" height="15.0" fill="rgb(214,112,7)" rx="2" ry="2" />
<text  x="784.02" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (203 samples, 0.31%)</title><rect x="404.7" y="229" width="3.7" height="15.0" fill="rgb(209,51,44)" rx="2" ry="2" />
<text  x="407.70" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (18 samples, 0.03%)</title><rect x="263.2" y="245" width="0.3" height="15.0" fill="rgb(215,212,28)" rx="2" ry="2" />
<text  x="266.23" y="255.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (11 samples, 0.02%)</title><rect x="220.8" y="213" width="0.2" height="15.0" fill="rgb(205,4,54)" rx="2" ry="2" />
<text  x="223.84" y="223.5" ></text>
</g>
<g >
<title>runtime.gcstopm (10 samples, 0.02%)</title><rect x="1138.6" y="309" width="0.2" height="15.0" fill="rgb(230,17,11)" rx="2" ry="2" />
<text  x="1141.57" y="319.5" ></text>
</g>
<g >
<title>sync.(*Pool).pinSlow (54 samples, 0.08%)</title><rect x="356.8" y="261" width="1.0" height="15.0" fill="rgb(240,147,54)" rx="2" ry="2" />
<text  x="359.78" y="271.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (6 samples, 0.01%)</title><rect x="785.6" y="181" width="0.1" height="15.0" fill="rgb(223,97,26)" rx="2" ry="2" />
<text  x="788.57" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (8 samples, 0.01%)</title><rect x="218.5" y="181" width="0.1" height="15.0" fill="rgb(205,171,23)" rx="2" ry="2" />
<text  x="221.47" y="191.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*Server).callHandleUnit (35,143 samples, 53.55%)</title><rect x="333.1" y="325" width="631.9" height="15.0" fill="rgb(220,78,37)" rx="2" ry="2" />
<text  x="336.06" y="335.5" >github.com/nyan233/littlerpc/server.(*Server).callHandleUnit</text>
</g>
<g >
<title>runtime.gcDrainN (10 samples, 0.02%)</title><rect x="277.7" y="197" width="0.1" height="15.0" fill="rgb(250,133,8)" rx="2" ry="2" />
<text  x="280.66" y="207.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (38 samples, 0.06%)</title><rect x="915.5" y="277" width="0.7" height="15.0" fill="rgb(216,74,53)" rx="2" ry="2" />
<text  x="918.52" y="287.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (184 samples, 0.28%)</title><rect x="895.3" y="197" width="3.3" height="15.0" fill="rgb(245,105,18)" rx="2" ry="2" />
<text  x="898.26" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).update (7 samples, 0.01%)</title><rect x="146.6" y="197" width="0.1" height="15.0" fill="rgb(214,145,48)" rx="2" ry="2" />
<text  x="149.62" y="207.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (33 samples, 0.05%)</title><rect x="1188.3" y="357" width="0.6" height="15.0" fill="rgb(248,96,45)" rx="2" ry="2" />
<text  x="1191.35" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (39 samples, 0.06%)</title><rect x="146.9" y="133" width="0.7" height="15.0" fill="rgb(211,68,34)" rx="2" ry="2" />
<text  x="149.91" y="143.5" ></text>
</g>
<g >
<title>sync.runtime_doSpin (798 samples, 1.22%)</title><rect x="688.9" y="213" width="14.3" height="15.0" fill="rgb(241,87,36)" rx="2" ry="2" />
<text  x="691.85" y="223.5" ></text>
</g>
<g >
<title>runtime.scanobject (112 samples, 0.17%)</title><rect x="926.4" y="165" width="2.0" height="15.0" fill="rgb(205,10,0)" rx="2" ry="2" />
<text  x="929.36" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (133 samples, 0.20%)</title><rect x="731.0" y="213" width="2.4" height="15.0" fill="rgb(241,71,24)" rx="2" ry="2" />
<text  x="734.02" y="223.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).empty (7 samples, 0.01%)</title><rect x="1160.7" y="325" width="0.2" height="15.0" fill="rgb(219,95,44)" rx="2" ry="2" />
<text  x="1163.74" y="335.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (304 samples, 0.46%)</title><rect x="875.1" y="181" width="5.5" height="15.0" fill="rgb(215,208,52)" rx="2" ry="2" />
<text  x="878.12" y="191.5" ></text>
</g>
<g >
<title>runtime.casgstatus (86 samples, 0.13%)</title><rect x="1152.0" y="357" width="1.5" height="15.0" fill="rgb(211,199,31)" rx="2" ry="2" />
<text  x="1154.97" y="367.5" ></text>
</g>
<g >
<title>runtime.lock2 (58 samples, 0.09%)</title><rect x="82.2" y="277" width="1.0" height="15.0" fill="rgb(237,112,27)" rx="2" ry="2" />
<text  x="85.18" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (128 samples, 0.20%)</title><rect x="122.9" y="261" width="2.3" height="15.0" fill="rgb(212,118,33)" rx="2" ry="2" />
<text  x="125.92" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (417 samples, 0.64%)</title><rect x="258.4" y="277" width="7.5" height="15.0" fill="rgb(232,16,11)" rx="2" ry="2" />
<text  x="261.37" y="287.5" ></text>
</g>
<g >
<title>github.com/rpcxio/rpcx-benchmark/proto.(*BenchmarkMessage).Unmarshal (4,755 samples, 7.25%)</title><rect x="165.1" y="261" width="85.5" height="15.0" fill="rgb(232,130,51)" rx="2" ry="2" />
<text  x="168.09" y="271.5" >github.com..</text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (17 samples, 0.03%)</title><rect x="263.2" y="213" width="0.3" height="15.0" fill="rgb(250,179,44)" rx="2" ry="2" />
<text  x="266.24" y="223.5" ></text>
</g>
<g >
<title>runtime.futexsleep (9 samples, 0.01%)</title><rect x="779.2" y="165" width="0.1" height="15.0" fill="rgb(212,52,3)" rx="2" ry="2" />
<text  x="782.15" y="175.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (12 samples, 0.02%)</title><rect x="264.9" y="245" width="0.2" height="15.0" fill="rgb(238,19,48)" rx="2" ry="2" />
<text  x="267.93" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (8 samples, 0.01%)</title><rect x="255.8" y="165" width="0.1" height="15.0" fill="rgb(225,125,43)" rx="2" ry="2" />
<text  x="258.80" y="175.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Out (12 samples, 0.02%)</title><rect x="856.7" y="277" width="0.3" height="15.0" fill="rgb(239,51,39)" rx="2" ry="2" />
<text  x="859.74" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (22 samples, 0.03%)</title><rect x="999.5" y="341" width="0.4" height="15.0" fill="rgb(219,123,9)" rx="2" ry="2" />
<text  x="1002.47" y="351.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (233 samples, 0.36%)</title><rect x="152.9" y="229" width="4.2" height="15.0" fill="rgb(252,46,35)" rx="2" ry="2" />
<text  x="155.91" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (17 samples, 0.03%)</title><rect x="870.1" y="245" width="0.3" height="15.0" fill="rgb(240,135,30)" rx="2" ry="2" />
<text  x="873.10" y="255.5" ></text>
</g>
<g >
<title>runtime.scanblock (24 samples, 0.04%)</title><rect x="878.0" y="69" width="0.4" height="15.0" fill="rgb(207,199,13)" rx="2" ry="2" />
<text  x="880.99" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (11 samples, 0.02%)</title><rect x="930.9" y="245" width="0.2" height="15.0" fill="rgb(249,114,37)" rx="2" ry="2" />
<text  x="933.95" y="255.5" ></text>
</g>
<g >
<title>runtime.scanobject (723 samples, 1.10%)</title><rect x="902.1" y="197" width="13.0" height="15.0" fill="rgb(226,219,37)" rx="2" ry="2" />
<text  x="905.11" y="207.5" ></text>
</g>
<g >
<title>runtime.chansend (39 samples, 0.06%)</title><rect x="81.5" y="293" width="0.7" height="15.0" fill="rgb(226,57,43)" rx="2" ry="2" />
<text  x="84.47" y="303.5" ></text>
</g>
<g >
<title>runtime.callers (18 samples, 0.03%)</title><rect x="246.8" y="181" width="0.3" height="15.0" fill="rgb(248,123,20)" rx="2" ry="2" />
<text  x="249.79" y="191.5" ></text>
</g>
<g >
<title>runtime.nilinterequal (27 samples, 0.04%)</title><rect x="865.5" y="229" width="0.5" height="15.0" fill="rgb(208,66,47)" rx="2" ry="2" />
<text  x="868.52" y="239.5" ></text>
</g>
<g >
<title>runtime.getitab (56 samples, 0.09%)</title><rect x="727.4" y="261" width="1.0" height="15.0" fill="rgb(242,9,53)" rx="2" ry="2" />
<text  x="730.39" y="271.5" ></text>
</g>
<g >
<title>runtime.casgstatus (127 samples, 0.19%)</title><rect x="1154.9" y="325" width="2.3" height="15.0" fill="rgb(239,113,53)" rx="2" ry="2" />
<text  x="1157.90" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (22 samples, 0.03%)</title><rect x="262.8" y="245" width="0.4" height="15.0" fill="rgb(254,211,40)" rx="2" ry="2" />
<text  x="265.79" y="255.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (14 samples, 0.02%)</title><rect x="289.0" y="213" width="0.2" height="15.0" fill="rgb(232,225,49)" rx="2" ry="2" />
<text  x="291.96" y="223.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.(*messageOpt).RealPayload (396 samples, 0.60%)</title><rect x="283.5" y="325" width="7.2" height="15.0" fill="rgb(231,16,35)" rx="2" ry="2" />
<text  x="286.54" y="335.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (9 samples, 0.01%)</title><rect x="219.1" y="133" width="0.2" height="15.0" fill="rgb(210,152,29)" rx="2" ry="2" />
<text  x="222.10" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (11 samples, 0.02%)</title><rect x="925.9" y="165" width="0.2" height="15.0" fill="rgb(211,121,7)" rx="2" ry="2" />
<text  x="928.91" y="175.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (13 samples, 0.02%)</title><rect x="357.2" y="213" width="0.3" height="15.0" fill="rgb(247,142,23)" rx="2" ry="2" />
<text  x="360.25" y="223.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (15 samples, 0.02%)</title><rect x="160.2" y="213" width="0.2" height="15.0" fill="rgb(253,0,23)" rx="2" ry="2" />
<text  x="163.18" y="223.5" ></text>
</g>
<g >
<title>reflect.(*rtype).ptrTo (23 samples, 0.04%)</title><rect x="143.9" y="261" width="0.4" height="15.0" fill="rgb(253,147,48)" rx="2" ry="2" />
<text  x="146.85" y="271.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (7 samples, 0.01%)</title><rect x="123.4" y="165" width="0.2" height="15.0" fill="rgb(224,228,5)" rx="2" ry="2" />
<text  x="126.44" y="175.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (23 samples, 0.04%)</title><rect x="871.0" y="261" width="0.4" height="15.0" fill="rgb(207,22,34)" rx="2" ry="2" />
<text  x="873.98" y="271.5" ></text>
</g>
<g >
<title>runtime.spanOf (10 samples, 0.02%)</title><rect x="914.9" y="181" width="0.2" height="15.0" fill="rgb(212,101,53)" rx="2" ry="2" />
<text  x="917.93" y="191.5" ></text>
</g>
<g >
<title>runtime.lock2 (25 samples, 0.04%)</title><rect x="779.1" y="181" width="0.4" height="15.0" fill="rgb(208,172,37)" rx="2" ry="2" />
<text  x="782.08" y="191.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/container..Len (9 samples, 0.01%)</title><rect x="430.2" y="261" width="0.2" height="15.0" fill="rgb(212,167,43)" rx="2" ry="2" />
<text  x="433.21" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (8 samples, 0.01%)</title><rect x="819.7" y="213" width="0.1" height="15.0" fill="rgb(221,69,50)" rx="2" ry="2" />
<text  x="822.70" y="223.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (12 samples, 0.02%)</title><rect x="152.0" y="133" width="0.2" height="15.0" fill="rgb(226,167,8)" rx="2" ry="2" />
<text  x="154.96" y="143.5" ></text>
</g>
<g >
<title>runtime.(*headTailIndex).cas (17 samples, 0.03%)</title><rect x="992.3" y="341" width="0.3" height="15.0" fill="rgb(205,8,14)" rx="2" ry="2" />
<text  x="995.28" y="351.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (15 samples, 0.02%)</title><rect x="265.9" y="293" width="0.2" height="15.0" fill="rgb(215,225,50)" rx="2" ry="2" />
<text  x="268.87" y="303.5" ></text>
</g>
<g >
<title>reflect.escapes (9 samples, 0.01%)</title><rect x="279.8" y="309" width="0.1" height="15.0" fill="rgb(219,226,30)" rx="2" ry="2" />
<text  x="282.77" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (7 samples, 0.01%)</title><rect x="931.0" y="229" width="0.1" height="15.0" fill="rgb(207,188,18)" rx="2" ry="2" />
<text  x="933.98" y="239.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (28 samples, 0.04%)</title><rect x="257.8" y="245" width="0.5" height="15.0" fill="rgb(244,213,41)" rx="2" ry="2" />
<text  x="260.78" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.01%)</title><rect x="121.9" y="261" width="0.1" height="15.0" fill="rgb(243,34,5)" rx="2" ry="2" />
<text  x="124.86" y="271.5" ></text>
</g>
<g >
<title>sync.runtime_SemacquireMutex (525 samples, 0.80%)</title><rect x="678.5" y="213" width="9.4" height="15.0" fill="rgb(207,196,10)" rx="2" ry="2" />
<text  x="681.50" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).heapGoalInternal (6 samples, 0.01%)</title><rect x="733.6" y="181" width="0.1" height="15.0" fill="rgb(245,48,46)" rx="2" ry="2" />
<text  x="736.59" y="191.5" ></text>
</g>
<g >
<title>runtime.(*headTailIndex).incTail (7 samples, 0.01%)</title><rect x="149.6" y="165" width="0.1" height="15.0" fill="rgb(247,176,26)" rx="2" ry="2" />
<text  x="152.57" y="175.5" ></text>
</g>
<g >
<title>runtime.futex (7 samples, 0.01%)</title><rect x="1141.1" y="277" width="0.1" height="15.0" fill="rgb(213,16,9)" rx="2" ry="2" />
<text  x="1144.09" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (6 samples, 0.01%)</title><rect x="405.5" y="117" width="0.1" height="15.0" fill="rgb(228,135,42)" rx="2" ry="2" />
<text  x="408.49" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (54 samples, 0.08%)</title><rect x="301.1" y="277" width="0.9" height="15.0" fill="rgb(237,26,21)" rx="2" ry="2" />
<text  x="304.06" y="287.5" ></text>
</g>
<g >
<title>runtime.putempty (31 samples, 0.05%)</title><rect x="1047.8" y="261" width="0.6" height="15.0" fill="rgb(231,218,2)" rx="2" ry="2" />
<text  x="1050.84" y="271.5" ></text>
</g>
<g >
<title>sync.(*poolChain).popTail (855 samples, 1.30%)</title><rect x="751.1" y="245" width="15.3" height="15.0" fill="rgb(205,100,49)" rx="2" ry="2" />
<text  x="754.07" y="255.5" ></text>
</g>
<g >
<title>runtime.casgstatus (18 samples, 0.03%)</title><rect x="17.1" y="261" width="0.4" height="15.0" fill="rgb(229,30,3)" rx="2" ry="2" />
<text  x="20.14" y="271.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (107 samples, 0.16%)</title><rect x="982.7" y="341" width="1.9" height="15.0" fill="rgb(235,124,7)" rx="2" ry="2" />
<text  x="985.68" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (7 samples, 0.01%)</title><rect x="963.1" y="213" width="0.1" height="15.0" fill="rgb(208,125,36)" rx="2" ry="2" />
<text  x="966.06" y="223.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_fast32 (6 samples, 0.01%)</title><rect x="144.9" y="213" width="0.2" height="15.0" fill="rgb(219,12,26)" rx="2" ry="2" />
<text  x="147.95" y="223.5" ></text>
</g>
<g >
<title>runtime.makeslice (55 samples, 0.08%)</title><rect x="811.3" y="245" width="1.0" height="15.0" fill="rgb(212,62,5)" rx="2" ry="2" />
<text  x="814.27" y="255.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (7,085 samples, 10.80%)</title><rect x="999.4" y="389" width="127.4" height="15.0" fill="rgb(215,79,14)" rx="2" ry="2" />
<text  x="1002.37" y="399.5" >runtime.gcBgMar..</text>
</g>
<g >
<title>sync.(*Pool).getSlow (2,212 samples, 3.37%)</title><rect x="736.6" y="261" width="39.8" height="15.0" fill="rgb(243,33,21)" rx="2" ry="2" />
<text  x="739.63" y="271.5" >syn..</text>
</g>
<g >
<title>runtime.gcAssistAlloc (35 samples, 0.05%)</title><rect x="735.4" y="213" width="0.7" height="15.0" fill="rgb(228,72,50)" rx="2" ry="2" />
<text  x="738.44" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (33 samples, 0.05%)</title><rect x="310.9" y="261" width="0.6" height="15.0" fill="rgb(223,20,51)" rx="2" ry="2" />
<text  x="313.86" y="271.5" ></text>
</g>
<g >
<title>sync.(*Mutex).lockSlow (33 samples, 0.05%)</title><rect x="810.5" y="245" width="0.6" height="15.0" fill="rgb(254,122,8)" rx="2" ry="2" />
<text  x="813.49" y="255.5" ></text>
</g>
<g >
<title>runtime.scanblock (132 samples, 0.20%)</title><rect x="1051.3" y="229" width="2.4" height="15.0" fill="rgb(214,14,10)" rx="2" ry="2" />
<text  x="1054.31" y="239.5" ></text>
</g>
<g >
<title>sync.(*poolDequeue).pushHead (34 samples, 0.05%)</title><rect x="74.5" y="277" width="0.6" height="15.0" fill="rgb(241,127,6)" rx="2" ry="2" />
<text  x="77.53" y="287.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/server.safeIndexCodecWps (18 samples, 0.03%)</title><rect x="292.0" y="325" width="0.4" height="15.0" fill="rgb(236,121,33)" rx="2" ry="2" />
<text  x="295.05" y="335.5" ></text>
</g>
<g >
<title>runtime.nanotime (8 samples, 0.01%)</title><rect x="1157.5" y="325" width="0.1" height="15.0" fill="rgb(222,180,22)" rx="2" ry="2" />
<text  x="1160.47" y="335.5" ></text>
</g>
<g >
<title>runtime.acquirem (31 samples, 0.05%)</title><rect x="254.4" y="245" width="0.6" height="15.0" fill="rgb(228,118,11)" rx="2" ry="2" />
<text  x="257.42" y="255.5" ></text>
</g>
<g >
<title>runtime.freedefer (8 samples, 0.01%)</title><rect x="121.6" y="309" width="0.1" height="15.0" fill="rgb(208,144,11)" rx="2" ry="2" />
<text  x="124.59" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (40 samples, 0.06%)</title><rect x="930.7" y="261" width="0.8" height="15.0" fill="rgb(205,31,47)" rx="2" ry="2" />
<text  x="933.73" y="271.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (18 samples, 0.03%)</title><rect x="406.4" y="181" width="0.4" height="15.0" fill="rgb(251,50,20)" rx="2" ry="2" />
<text  x="409.44" y="191.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).pop (8 samples, 0.01%)</title><rect x="301.4" y="245" width="0.1" height="15.0" fill="rgb(243,52,31)" rx="2" ry="2" />
<text  x="304.38" y="255.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (404 samples, 0.62%)</title><rect x="85.3" y="293" width="7.2" height="15.0" fill="rgb(251,73,52)" rx="2" ry="2" />
<text  x="88.25" y="303.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (14 samples, 0.02%)</title><rect x="879.6" y="149" width="0.3" height="15.0" fill="rgb(228,8,2)" rx="2" ry="2" />
<text  x="882.61" y="159.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (9 samples, 0.01%)</title><rect x="1054.7" y="309" width="0.2" height="15.0" fill="rgb(206,67,27)" rx="2" ry="2" />
<text  x="1057.71" y="319.5" ></text>
</g>
<g >
<title>sync.(*Pool).getSlow (1,501 samples, 2.29%)</title><rect x="934.5" y="293" width="27.0" height="15.0" fill="rgb(226,65,15)" rx="2" ry="2" />
<text  x="937.49" y="303.5" >s..</text>
</g>
<g >
<title>runtime.(*mcache).refill (52 samples, 0.08%)</title><rect x="348.0" y="245" width="0.9" height="15.0" fill="rgb(212,218,20)" rx="2" ry="2" />
<text  x="350.95" y="255.5" ></text>
</g>
<g >
<title>runtime.unlock2 (8 samples, 0.01%)</title><rect x="997.5" y="293" width="0.2" height="15.0" fill="rgb(243,195,48)" rx="2" ry="2" />
<text  x="1000.55" y="303.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (8 samples, 0.01%)</title><rect x="997.5" y="309" width="0.2" height="15.0" fill="rgb(218,115,31)" rx="2" ry="2" />
<text  x="1000.55" y="319.5" ></text>
</g>
<g >
<title>runtime.getStackMap (25 samples, 0.04%)</title><rect x="1050.9" y="229" width="0.4" height="15.0" fill="rgb(224,169,32)" rx="2" ry="2" />
<text  x="1053.86" y="239.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (29 samples, 0.04%)</title><rect x="927.8" y="149" width="0.6" height="15.0" fill="rgb(244,75,6)" rx="2" ry="2" />
<text  x="930.84" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (7,036 samples, 10.72%)</title><rect x="1000.2" y="373" width="126.5" height="15.0" fill="rgb(251,26,23)" rx="2" ry="2" />
<text  x="1003.23" y="383.5" >runtime.systems..</text>
</g>
<g >
<title>runtime.(*headTailIndex).incTail (10 samples, 0.02%)</title><rect x="408.0" y="165" width="0.2" height="15.0" fill="rgb(252,71,34)" rx="2" ry="2" />
<text  x="411.01" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (8 samples, 0.01%)</title><rect x="148.3" y="165" width="0.1" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="151.29" y="175.5" ></text>
</g>
<g >
<title>runtime.gopark (6 samples, 0.01%)</title><rect x="779.0" y="181" width="0.1" height="15.0" fill="rgb(230,204,44)" rx="2" ry="2" />
<text  x="781.97" y="191.5" ></text>
</g>
<g >
<title>syscall.write (12,677 samples, 19.32%)</title><rect x="447.1" y="197" width="228.0" height="15.0" fill="rgb(241,123,46)" rx="2" ry="2" />
<text  x="450.12" y="207.5" >syscall.write</text>
</g>
<g >
<title>runtime.heapBitsForAddr (20 samples, 0.03%)</title><rect x="303.2" y="293" width="0.4" height="15.0" fill="rgb(253,50,8)" rx="2" ry="2" />
<text  x="306.23" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (54 samples, 0.08%)</title><rect x="238.8" y="101" width="1.0" height="15.0" fill="rgb(209,227,40)" rx="2" ry="2" />
<text  x="241.79" y="111.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (204 samples, 0.31%)</title><rect x="924.7" y="197" width="3.7" height="15.0" fill="rgb(254,74,4)" rx="2" ry="2" />
<text  x="927.71" y="207.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (164 samples, 0.25%)</title><rect x="92.5" y="293" width="3.0" height="15.0" fill="rgb(212,177,21)" rx="2" ry="2" />
<text  x="95.51" y="303.5" ></text>
</g>
<g >
<title>github.com/lesismal/nbio.(*Engine).payback (14 samples, 0.02%)</title><rect x="10.8" y="373" width="0.3" height="15.0" fill="rgb(232,180,6)" rx="2" ry="2" />
<text  x="13.85" y="383.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (7 samples, 0.01%)</title><rect x="423.3" y="261" width="0.1" height="15.0" fill="rgb(247,224,18)" rx="2" ry="2" />
<text  x="426.27" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (367 samples, 0.56%)</title><rect x="923.8" y="261" width="6.6" height="15.0" fill="rgb(233,191,52)" rx="2" ry="2" />
<text  x="926.77" y="271.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (20 samples, 0.03%)</title><rect x="246.8" y="197" width="0.4" height="15.0" fill="rgb(235,220,46)" rx="2" ry="2" />
<text  x="249.79" y="207.5" ></text>
</g>
<g >
<title>runtime.futex (6 samples, 0.01%)</title><rect x="1127.3" y="309" width="0.1" height="15.0" fill="rgb(216,165,26)" rx="2" ry="2" />
<text  x="1130.32" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (10 samples, 0.02%)</title><rect x="999.6" y="245" width="0.2" height="15.0" fill="rgb(247,10,19)" rx="2" ry="2" />
<text  x="1002.64" y="255.5" ></text>
</g>
<g >
<title>runtime.ready (101 samples, 0.15%)</title><rect x="717.8" y="117" width="1.8" height="15.0" fill="rgb(246,220,29)" rx="2" ry="2" />
<text  x="720.82" y="127.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (6 samples, 0.01%)</title><rect x="292.4" y="309" width="0.1" height="15.0" fill="rgb(252,67,24)" rx="2" ry="2" />
<text  x="295.39" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (81 samples, 0.12%)</title><rect x="218.7" y="197" width="1.4" height="15.0" fill="rgb(219,75,25)" rx="2" ry="2" />
<text  x="221.67" y="207.5" ></text>
</g>
<g >
<title>github.com/nyan233/littlerpc/pkg/common/msgparser.(*muxHandler).MessageLength (55 samples, 0.08%)</title><rect x="111.3" y="309" width="1.0" height="15.0" fill="rgb(207,133,32)" rx="2" ry="2" />
<text  x="114.30" y="319.5" ></text>
</g>
<g >
<title>runtime.findObject (7 samples, 0.01%)</title><rect x="915.3" y="149" width="0.1" height="15.0" fill="rgb(244,217,0)" rx="2" ry="2" />
<text  x="918.27" y="159.5" ></text>
</g>
<g >
<title>runtime.readgstatus (9 samples, 0.01%)</title><rect x="1055.1" y="325" width="0.1" height="15.0" fill="rgb(251,49,21)" rx="2" ry="2" />
<text  x="1058.07" y="335.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (121 samples, 0.18%)</title><rect x="135.7" y="277" width="2.2" height="15.0" fill="rgb(237,111,17)" rx="2" ry="2" />
<text  x="138.74" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (416 samples, 0.63%)</title><rect x="297.9" y="325" width="7.5" height="15.0" fill="rgb(247,225,27)" rx="2" ry="2" />
<text  x="300.89" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (8 samples, 0.01%)</title><rect x="405.5" y="165" width="0.1" height="15.0" fill="rgb(243,146,52)" rx="2" ry="2" />
<text  x="408.49" y="175.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (8 samples, 0.01%)</title><rect x="1050.6" y="181" width="0.2" height="15.0" fill="rgb(233,7,51)" rx="2" ry="2" />
<text  x="1053.61" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (10 samples, 0.02%)</title><rect x="277.7" y="261" width="0.1" height="15.0" fill="rgb(215,10,44)" rx="2" ry="2" />
<text  x="280.66" y="271.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (80 samples, 0.12%)</title><rect x="196.3" y="245" width="1.4" height="15.0" fill="rgb(213,112,38)" rx="2" ry="2" />
<text  x="199.30" y="255.5" ></text>
</g>
<g >
<title>runtime.findObject (673 samples, 1.03%)</title><rect x="1083.9" y="309" width="12.1" height="15.0" fill="rgb(239,175,41)" rx="2" ry="2" />
<text  x="1086.88" y="319.5" ></text>
</g>
<g >
<title>sync.(*Mutex).lockSlow (27 samples, 0.04%)</title><rect x="356.3" y="245" width="0.5" height="15.0" fill="rgb(221,28,34)" rx="2" ry="2" />
<text  x="359.30" y="255.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (10 samples, 0.02%)</title><rect x="246.3" y="213" width="0.2" height="15.0" fill="rgb(222,110,5)" rx="2" ry="2" />
<text  x="249.32" y="223.5" ></text>
</g>
<g >
<title>strconv.FormatInt (171 samples, 0.26%)</title><rect x="917.2" y="293" width="3.1" height="15.0" fill="rgb(217,199,5)" rx="2" ry="2" />
<text  x="920.23" y="303.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrierDX (6 samples, 0.01%)</title><rect x="716.0" y="165" width="0.1" height="15.0" fill="rgb(234,122,27)" rx="2" ry="2" />
<text  x="718.95" y="175.5" ></text>
</g>
<g >
<title>runtime.lock2 (49 samples, 0.07%)</title><rect x="1139.9" y="309" width="0.9" height="15.0" fill="rgb(254,102,35)" rx="2" ry="2" />
<text  x="1142.89" y="319.5" ></text>
</g>
<g >
<title>runtime.lock2 (360 samples, 0.55%)</title><rect x="1141.2" y="341" width="6.5" height="15.0" fill="rgb(249,229,52)" rx="2" ry="2" />
<text  x="1144.24" y="351.5" ></text>
</g>
<g >
<title>reflect.Value.Call (2,935 samples, 4.47%)</title><rect x="833.2" y="309" width="52.7" height="15.0" fill="rgb(245,99,53)" rx="2" ry="2" />
<text  x="836.17" y="319.5" >refle..</text>
</g>
<g >
<title>runtime.runqgrab (25 samples, 0.04%)</title><rect x="1139.4" y="277" width="0.5" height="15.0" fill="rgb(244,165,35)" rx="2" ry="2" />
<text  x="1142.42" y="287.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (6 samples, 0.01%)</title><rect x="815.9" y="229" width="0.2" height="15.0" fill="rgb(233,186,23)" rx="2" ry="2" />
<text  x="818.94" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (14 samples, 0.02%)</title><rect x="282.2" y="277" width="0.3" height="15.0" fill="rgb(250,207,44)" rx="2" ry="2" />
<text  x="285.21" y="287.5" ></text>
</g>
<g >
<title>runtime.globrunqget (16 samples, 0.02%)</title><rect x="1163.4" y="325" width="0.3" height="15.0" fill="rgb(248,104,1)" rx="2" ry="2" />
<text  x="1166.44" y="335.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (65 samples, 0.10%)</title><rect x="987.5" y="309" width="1.2" height="15.0" fill="rgb(211,27,54)" rx="2" ry="2" />
<text  x="990.53" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (367 samples, 0.56%)</title><rect x="298.2" y="309" width="6.6" height="15.0" fill="rgb(231,217,40)" rx="2" ry="2" />
<text  x="301.20" y="319.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (6 samples, 0.01%)</title><rect x="905.8" y="181" width="0.1" height="15.0" fill="rgb(226,175,8)" rx="2" ry="2" />
<text  x="908.79" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).countAlloc (6 samples, 0.01%)</title><rect x="993.9" y="357" width="0.1" height="15.0" fill="rgb(217,201,23)" rx="2" ry="2" />
<text  x="996.86" y="367.5" ></text>
</g>
<g >
<title>runtime.goparkunlock (18 samples, 0.03%)</title><rect x="306.4" y="309" width="0.3" height="15.0" fill="rgb(248,118,32)" rx="2" ry="2" />
<text  x="309.38" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (7 samples, 0.01%)</title><rect x="919.6" y="229" width="0.1" height="15.0" fill="rgb(240,75,51)" rx="2" ry="2" />
<text  x="922.60" y="239.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (13 samples, 0.02%)</title><rect x="901.8" y="133" width="0.2" height="15.0" fill="rgb(235,142,29)" rx="2" ry="2" />
<text  x="904.80" y="143.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (759 samples, 1.16%)</title><rect x="145.1" y="261" width="13.6" height="15.0" fill="rgb(228,168,30)" rx="2" ry="2" />
<text  x="148.05" y="271.5" ></text>
</g>
<g >
<title>runtime.futexsleep (13 samples, 0.02%)</title><rect x="1163.7" y="293" width="0.3" height="15.0" fill="rgb(246,225,34)" rx="2" ry="2" />
<text  x="1166.75" y="303.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (233 samples, 0.36%)</title><rect x="1049.5" y="261" width="4.2" height="15.0" fill="rgb(249,22,32)" rx="2" ry="2" />
<text  x="1052.50" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (123 samples, 0.19%)</title><rect x="288.0" y="293" width="2.2" height="15.0" fill="rgb(224,133,0)" rx="2" ry="2" />
<text  x="291.02" y="303.5" ></text>
</g>
<g >
<title>runtime.selectgo.func2 (30 samples, 0.05%)</title><rect x="979.5" y="325" width="0.5" height="15.0" fill="rgb(242,12,32)" rx="2" ry="2" />
<text  x="982.50" y="335.5" ></text>
</g>
<g >
<title>runtime.getempty (31 samples, 0.05%)</title><rect x="1029.1" y="293" width="0.6" height="15.0" fill="rgb(212,13,28)" rx="2" ry="2" />
<text  x="1032.11" y="303.5" ></text>
</g>
<g >
<title>runtime.lock2 (587 samples, 0.89%)</title><rect x="968.3" y="325" width="10.6" height="15.0" fill="rgb(209,23,5)" rx="2" ry="2" />
<text  x="971.31" y="335.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (8 samples, 0.01%)</title><rect x="931.3" y="245" width="0.1" height="15.0" fill="rgb(214,193,8)" rx="2" ry="2" />
<text  x="934.27" y="255.5" ></text>
</g>
</g>
</svg>
