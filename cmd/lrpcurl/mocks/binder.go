// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// binder is an autogenerated mock type for the binder type
type binder struct {
	mock.Mock
}

// BindFunc provides a mock function with given fields: source, _a1
func (_m *binder) BindFunc(source string, _a1 interface{}) error {
	ret := _m.Called(source, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(source, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewBinder interface {
	mock.TestingT
	Cleanup(func())
}

// newBinder creates a new instance of binder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newBinder(t mockConstructorTestingTnewBinder) *binder {
	mock := &binder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
