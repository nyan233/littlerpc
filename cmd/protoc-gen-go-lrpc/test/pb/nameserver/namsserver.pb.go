// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: namsserver.proto

package nameserver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          uint32                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Priority      uint32                 `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	IpBigEndian   []byte                 `protobuf:"bytes,4,opt,name=ip_big_endian,json=ipBigEndian,proto3" json:"ip_big_endian,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_namsserver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_namsserver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_namsserver_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Node) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Node) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Node) GetIpBigEndian() []byte {
	if x != nil {
		return x.IpBigEndian
	}
	return nil
}

type AddNodeListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	NodeList      []*Node                `protobuf:"bytes,2,rep,name=node_list,json=nodeList,proto3" json:"node_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNodeListReq) Reset() {
	*x = AddNodeListReq{}
	mi := &file_namsserver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNodeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNodeListReq) ProtoMessage() {}

func (x *AddNodeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_namsserver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNodeListReq.ProtoReflect.Descriptor instead.
func (*AddNodeListReq) Descriptor() ([]byte, []int) {
	return file_namsserver_proto_rawDescGZIP(), []int{1}
}

func (x *AddNodeListReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AddNodeListReq) GetNodeList() []*Node {
	if x != nil {
		return x.NodeList
	}
	return nil
}

type AddNodeListRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Version       uint32                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNodeListRsp) Reset() {
	*x = AddNodeListRsp{}
	mi := &file_namsserver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNodeListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNodeListRsp) ProtoMessage() {}

func (x *AddNodeListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_namsserver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNodeListRsp.ProtoReflect.Descriptor instead.
func (*AddNodeListRsp) Descriptor() ([]byte, []int) {
	return file_namsserver_proto_rawDescGZIP(), []int{2}
}

func (x *AddNodeListRsp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AddNodeListRsp) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetNodeListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeListReq) Reset() {
	*x = GetNodeListReq{}
	mi := &file_namsserver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeListReq) ProtoMessage() {}

func (x *GetNodeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_namsserver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeListReq.ProtoReflect.Descriptor instead.
func (*GetNodeListReq) Descriptor() ([]byte, []int) {
	return file_namsserver_proto_rawDescGZIP(), []int{3}
}

func (x *GetNodeListReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetNodeListRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Version       uint32                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	NodeList      []*Node                `protobuf:"bytes,3,rep,name=node_list,json=nodeList,proto3" json:"node_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeListRsp) Reset() {
	*x = GetNodeListRsp{}
	mi := &file_namsserver_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeListRsp) ProtoMessage() {}

func (x *GetNodeListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_namsserver_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeListRsp.ProtoReflect.Descriptor instead.
func (*GetNodeListRsp) Descriptor() ([]byte, []int) {
	return file_namsserver_proto_rawDescGZIP(), []int{4}
}

func (x *GetNodeListRsp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetNodeListRsp) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetNodeListRsp) GetNodeList() []*Node {
	if x != nil {
		return x.NodeList
	}
	return nil
}

type DeleteNodeListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	NodeList      []*Node                `protobuf:"bytes,4,rep,name=node_list,json=nodeList,proto3" json:"node_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNodeListReq) Reset() {
	*x = DeleteNodeListReq{}
	mi := &file_namsserver_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNodeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodeListReq) ProtoMessage() {}

func (x *DeleteNodeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_namsserver_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodeListReq.ProtoReflect.Descriptor instead.
func (*DeleteNodeListReq) Descriptor() ([]byte, []int) {
	return file_namsserver_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteNodeListReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteNodeListReq) GetNodeList() []*Node {
	if x != nil {
		return x.NodeList
	}
	return nil
}

type DeleteNodeListRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Version       uint32                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	DelCount      uint32                 `protobuf:"varint,3,opt,name=del_count,json=delCount,proto3" json:"del_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNodeListRsp) Reset() {
	*x = DeleteNodeListRsp{}
	mi := &file_namsserver_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNodeListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodeListRsp) ProtoMessage() {}

func (x *DeleteNodeListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_namsserver_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodeListRsp.ProtoReflect.Descriptor instead.
func (*DeleteNodeListRsp) Descriptor() ([]byte, []int) {
	return file_namsserver_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteNodeListRsp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteNodeListRsp) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DeleteNodeListRsp) GetDelCount() uint32 {
	if x != nil {
		return x.DelCount
	}
	return 0
}

type GetNodeListInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeListInfoReq) Reset() {
	*x = GetNodeListInfoReq{}
	mi := &file_namsserver_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeListInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeListInfoReq) ProtoMessage() {}

func (x *GetNodeListInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_namsserver_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeListInfoReq.ProtoReflect.Descriptor instead.
func (*GetNodeListInfoReq) Descriptor() ([]byte, []int) {
	return file_namsserver_proto_rawDescGZIP(), []int{7}
}

func (x *GetNodeListInfoReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetNodeListInfoRsp struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Key            string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Version        uint32                 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	LastUpdatedAt  uint64                 `protobuf:"varint,3,opt,name=last_updated_at,json=lastUpdatedAt,proto3" json:"last_updated_at,omitempty"`
	NodeListLength uint32                 `protobuf:"varint,4,opt,name=node_list_length,json=nodeListLength,proto3" json:"node_list_length,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetNodeListInfoRsp) Reset() {
	*x = GetNodeListInfoRsp{}
	mi := &file_namsserver_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeListInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeListInfoRsp) ProtoMessage() {}

func (x *GetNodeListInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_namsserver_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeListInfoRsp.ProtoReflect.Descriptor instead.
func (*GetNodeListInfoRsp) Descriptor() ([]byte, []int) {
	return file_namsserver_proto_rawDescGZIP(), []int{8}
}

func (x *GetNodeListInfoRsp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetNodeListInfoRsp) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetNodeListInfoRsp) GetLastUpdatedAt() uint64 {
	if x != nil {
		return x.LastUpdatedAt
	}
	return 0
}

func (x *GetNodeListInfoRsp) GetNodeListLength() uint32 {
	if x != nil {
		return x.NodeListLength
	}
	return 0
}

type GetAllKeyReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllKeyReq) Reset() {
	*x = GetAllKeyReq{}
	mi := &file_namsserver_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllKeyReq) ProtoMessage() {}

func (x *GetAllKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_namsserver_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllKeyReq.ProtoReflect.Descriptor instead.
func (*GetAllKeyReq) Descriptor() ([]byte, []int) {
	return file_namsserver_proto_rawDescGZIP(), []int{9}
}

type GetAllKeyRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyList       []string               `protobuf:"bytes,1,rep,name=key_list,json=keyList,proto3" json:"key_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllKeyRsp) Reset() {
	*x = GetAllKeyRsp{}
	mi := &file_namsserver_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllKeyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllKeyRsp) ProtoMessage() {}

func (x *GetAllKeyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_namsserver_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllKeyRsp.ProtoReflect.Descriptor instead.
func (*GetAllKeyRsp) Descriptor() ([]byte, []int) {
	return file_namsserver_proto_rawDescGZIP(), []int{10}
}

func (x *GetAllKeyRsp) GetKeyList() []string {
	if x != nil {
		return x.KeyList
	}
	return nil
}

var File_namsserver_proto protoreflect.FileDescriptor

const file_namsserver_proto_rawDesc = "" +
	"\n" +
	"\x10namsserver.proto\x12\n" +
	"nameserver\"j\n" +
	"\x04Node\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\rR\bpriority\x12\"\n" +
	"\rip_big_endian\x18\x04 \x01(\fR\vipBigEndian\"Q\n" +
	"\x0eAddNodeListReq\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\tnode_list\x18\x02 \x03(\v2\x10.nameserver.NodeR\bnodeList\"<\n" +
	"\x0eAddNodeListRsp\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x18\n" +
	"\aversion\x18\x02 \x01(\rR\aversion\"\"\n" +
	"\x0eGetNodeListReq\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"k\n" +
	"\x0eGetNodeListRsp\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x18\n" +
	"\aversion\x18\x02 \x01(\rR\aversion\x12-\n" +
	"\tnode_list\x18\x03 \x03(\v2\x10.nameserver.NodeR\bnodeList\"T\n" +
	"\x11DeleteNodeListReq\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\tnode_list\x18\x04 \x03(\v2\x10.nameserver.NodeR\bnodeList\"\\\n" +
	"\x11DeleteNodeListRsp\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x18\n" +
	"\aversion\x18\x02 \x01(\rR\aversion\x12\x1b\n" +
	"\tdel_count\x18\x03 \x01(\rR\bdelCount\"&\n" +
	"\x12GetNodeListInfoReq\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"\x92\x01\n" +
	"\x12GetNodeListInfoRsp\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x18\n" +
	"\aversion\x18\x02 \x01(\rR\aversion\x12&\n" +
	"\x0flast_updated_at\x18\x03 \x01(\x04R\rlastUpdatedAt\x12(\n" +
	"\x10node_list_length\x18\x04 \x01(\rR\x0enodeListLength\"\x0e\n" +
	"\fGetAllKeyReq\")\n" +
	"\fGetAllKeyRsp\x12\x19\n" +
	"\bkey_list\x18\x01 \x03(\tR\akeyList2\xfe\x02\n" +
	"\n" +
	"nameserver\x12E\n" +
	"\vAddNodeList\x12\x1a.nameserver.AddNodeListReq\x1a\x1a.nameserver.AddNodeListRsp\x12E\n" +
	"\vGetNodeList\x12\x1a.nameserver.GetNodeListReq\x1a\x1a.nameserver.GetNodeListRsp\x12N\n" +
	"\x0eDeleteNodeList\x12\x1d.nameserver.DeleteNodeListReq\x1a\x1d.nameserver.DeleteNodeListRsp\x12Q\n" +
	"\x0fGetNodeListInfo\x12\x1e.nameserver.GetNodeListInfoReq\x1a\x1e.nameserver.GetNodeListInfoRsp\x12?\n" +
	"\tGetAllKey\x12\x18.nameserver.GetAllKeyReq\x1a\x18.nameserver.GetAllKeyRspB\x0fZ\rpb/nameserverb\x06proto3"

var (
	file_namsserver_proto_rawDescOnce sync.Once
	file_namsserver_proto_rawDescData []byte
)

func file_namsserver_proto_rawDescGZIP() []byte {
	file_namsserver_proto_rawDescOnce.Do(func() {
		file_namsserver_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_namsserver_proto_rawDesc), len(file_namsserver_proto_rawDesc)))
	})
	return file_namsserver_proto_rawDescData
}

var file_namsserver_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_namsserver_proto_goTypes = []any{
	(*Node)(nil),               // 0: nameserver.Node
	(*AddNodeListReq)(nil),     // 1: nameserver.AddNodeListReq
	(*AddNodeListRsp)(nil),     // 2: nameserver.AddNodeListRsp
	(*GetNodeListReq)(nil),     // 3: nameserver.GetNodeListReq
	(*GetNodeListRsp)(nil),     // 4: nameserver.GetNodeListRsp
	(*DeleteNodeListReq)(nil),  // 5: nameserver.DeleteNodeListReq
	(*DeleteNodeListRsp)(nil),  // 6: nameserver.DeleteNodeListRsp
	(*GetNodeListInfoReq)(nil), // 7: nameserver.GetNodeListInfoReq
	(*GetNodeListInfoRsp)(nil), // 8: nameserver.GetNodeListInfoRsp
	(*GetAllKeyReq)(nil),       // 9: nameserver.GetAllKeyReq
	(*GetAllKeyRsp)(nil),       // 10: nameserver.GetAllKeyRsp
}
var file_namsserver_proto_depIdxs = []int32{
	0,  // 0: nameserver.AddNodeListReq.node_list:type_name -> nameserver.Node
	0,  // 1: nameserver.GetNodeListRsp.node_list:type_name -> nameserver.Node
	0,  // 2: nameserver.DeleteNodeListReq.node_list:type_name -> nameserver.Node
	1,  // 3: nameserver.nameserver.AddNodeList:input_type -> nameserver.AddNodeListReq
	3,  // 4: nameserver.nameserver.GetNodeList:input_type -> nameserver.GetNodeListReq
	5,  // 5: nameserver.nameserver.DeleteNodeList:input_type -> nameserver.DeleteNodeListReq
	7,  // 6: nameserver.nameserver.GetNodeListInfo:input_type -> nameserver.GetNodeListInfoReq
	9,  // 7: nameserver.nameserver.GetAllKey:input_type -> nameserver.GetAllKeyReq
	2,  // 8: nameserver.nameserver.AddNodeList:output_type -> nameserver.AddNodeListRsp
	4,  // 9: nameserver.nameserver.GetNodeList:output_type -> nameserver.GetNodeListRsp
	6,  // 10: nameserver.nameserver.DeleteNodeList:output_type -> nameserver.DeleteNodeListRsp
	8,  // 11: nameserver.nameserver.GetNodeListInfo:output_type -> nameserver.GetNodeListInfoRsp
	10, // 12: nameserver.nameserver.GetAllKey:output_type -> nameserver.GetAllKeyRsp
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_namsserver_proto_init() }
func file_namsserver_proto_init() {
	if File_namsserver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_namsserver_proto_rawDesc), len(file_namsserver_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_namsserver_proto_goTypes,
		DependencyIndexes: file_namsserver_proto_depIdxs,
		MessageInfos:      file_namsserver_proto_msgTypes,
	}.Build()
	File_namsserver_proto = out.File
	file_namsserver_proto_goTypes = nil
	file_namsserver_proto_depIdxs = nil
}
